{
"version":3,
"file":"Main.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/std/Lambda.hx","C:/HaxeToolkit/haxe/std/List.hx","C:/HaxeToolkit/haxe/std/js/_std/Reflect.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx","C:/HaxeToolkit/haxe/std/StringBuf.hx","C:/HaxeToolkit/haxe/std/StringTools.hx","C:/HaxeToolkit/haxe/std/js/_std/Type.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/com/fermmtools/utils/ObjectHash.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/egg/ImageLoader.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/egg/TextLoader.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/egg/Assets.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/egg/Batch.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/GPU.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/GPUBufferBase.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/GPUPorgramUtil.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/GPUTexture.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/GPUProgram.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/macro/GPUBufferMacro.hx","C:/HaxeToolkit/haxe/std/haxe/Http.hx","C:/HaxeToolkit/haxe/std/haxe/Log.hx","C:/HaxeToolkit/haxe/std/haxe/Serializer.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/haxe/Unserializer.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/IntMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/ObjectMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/io/Bytes.hx","C:/Users/rsahitman/gamedev/games/lib/howler/src/howler/Howl.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/Browser.hx","C:/HaxeToolkit/haxe/std/js/html/CanvasElement.hx","C:/HaxeToolkit/haxe/std/js/html/compat/ArrayBuffer.hx","C:/HaxeToolkit/haxe/std/js/html/compat/Uint8Array.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/jsbox/Window.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/jsbox/asset/Loader.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/jsbox/gl/GL.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/korrigan/NormalTexturedProgram.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/glow/macro/GPUProgramMacro.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/korrigan/SimpleTexturedProgram.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/korrigan/SpriteLibrary.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/korrigan/TransformationContext.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/GameScreen.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/Main.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/StartScreen.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/controller/ControllerKey.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/SystemComponent.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/Component.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/AIComponent.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/EntityComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/AISystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/AITypeComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/ButtonComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/CameraSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/DoorComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/DoorSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/EnvironmentalComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/ExitComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/GestionDynamicSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/GestionForceSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/GestionLevelSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/GridSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/PlayerComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/PlayerSystem.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/PlayerTypeComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/PositionComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/SwitchComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/model/VelocityComponent.hx","C:/Users/rsahitman/gamedev/games/ld31/src/ld31/view/Presenter.hx","C:/Users/rsahitman/gamedev/games/lib/mathtool/src/mathtool/UF.hx","C:/Users/rsahitman/gamedev/games/lib/mathtool/src/mathtool/V2DU.hx","C:/HaxeToolkit/haxe/lib/msignal/1,2,2/msignal/Signal.hx","C:/HaxeToolkit/haxe/lib/msignal/1,2,2/msignal/Slot.hx","C:/HaxeToolkit/haxe/lib/msignal/1,2,2/msignal/SlotList.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/num/Matrix.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/num/Vector.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,13/src/main/promhx/base/AsyncBase.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,13/src/main/promhx/Deferred.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,13/src/main/promhx/Promise.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,13/src/main/promhx/Stream.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,13/src/main/promhx/PublicStream.hx","C:/HaxeToolkit/haxe/lib/promhx/1,0,13/src/main/promhx/base/EventLoop.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/run/Runner.hx","C:/Users/rsahitman/gamedev/games/lib/box/src/snail/Shell.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Callback.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Error.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Future.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Lazy.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Outcome.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Pair.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Signal.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/asset/Image.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/asset/ImageData.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/ComponentOwner.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/Entity.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/EntityType.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/Model.hx","C:/HaxeToolkit/haxe/std/js/_std/Math.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/report/Report.hx","C:/Users/rsahitman/gamedev/games/lib/wax/src/wax/system/Channels.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\t#if mt\n\t\tvar x = (cast s).cca(index);\n\t\t#else\n\t\tvar x = (cast s).charCodeAt(index);\n\t\t#end\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = indexOf(a, obj, 0);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\n#if mt\n\t\tif( String.prototype.cca == null ) String.prototype.cca = String.prototype.charCodeAt;\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with 'using Lambda' and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class Reflect {\n\n\tpublic inline static function hasField( o : Dynamic, field : String ) : Bool {\n\t\treturn untyped __js__('Object').prototype.hasOwnProperty.call(o, field);\n\t}\n\n\tpublic static function field( o : Dynamic, field : String ) : Dynamic untyped {\n\t\treturn try o[field] catch( e : Dynamic ) null;\n\t}\n\n\tpublic inline static function setField( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\to[field] = value;\n\t}\n\n\tpublic static inline function getProperty( o : Dynamic, field : String ) : Dynamic untyped {\n\t\tvar tmp;\n\t\treturn if( o == null ) __define_feature__(\"Reflect.getProperty\",null) else if( o.__properties__ && (tmp=o.__properties__[\"get_\"+field]) ) o[tmp]() else o[field];\n\t}\n\n\tpublic static inline function setProperty( o : Dynamic, field : String, value : Dynamic ) : Void untyped {\n\t\tvar tmp;\n\t\tif( o.__properties__ && (tmp=o.__properties__[\"set_\"+field]) ) o[tmp](value) else o[field] = __define_feature__(\"Reflect.setProperty\",value);\n\t}\n\n\tpublic inline static function callMethod( o : Dynamic, func : haxe.Constraints.Function, args : Array<Dynamic> ) : Dynamic untyped {\n\t\treturn func.apply(o,args);\n\t}\n\n\tpublic static function fields( o : Dynamic ) : Array<String> {\n\t\tvar a = [];\n\t\tif (o != null) untyped {\n\t\t\tvar hasOwnProperty = __js__('Object').prototype.hasOwnProperty;\n\t\t\t__js__(\"for( var f in o ) {\");\n\t\t\tif( f != \"__id__\" && f != \"hx__closures__\" && hasOwnProperty.call(o, f) ) a.push(f);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a;\n\t}\n\n\tpublic static function isFunction( f : Dynamic ) : Bool untyped {\n\t\treturn __js__(\"typeof(f)\") == \"function\" && !(js.Boot.isClass(f) || js.Boot.isEnum(f));\n\t}\n\n\tpublic static function compare<T>( a : T, b : T ) : Int {\n\t\treturn ( a == b ) ? 0 : (((cast a) > (cast b)) ? 1 : -1);\n\t}\n\n\tpublic static function compareMethods( f1 : Dynamic, f2 : Dynamic ) : Bool {\n\t\tif( f1 == f2 )\n\t\t\treturn true;\n\t\tif( !isFunction(f1) || !isFunction(f2) )\n\t\t\treturn false;\n\t\treturn f1.scope == f2.scope && f1.method == f2.method && f1.method != null;\n\t}\n\n\tpublic static function isObject( v : Dynamic ) : Bool untyped {\n\t\tif( v == null )\n\t\t\treturn false;\n\t\tvar t = __js__(\"typeof(v)\");\n\t\treturn (t == \"string\" || (t == \"object\" && v.__enum__ == null)) || (t == \"function\" && (js.Boot.isClass(v) || js.Boot.isEnum(v)) != null);\n\t}\n\n\tpublic static function isEnumValue( v : Dynamic ) : Bool {\n\t\treturn v != null && v.__enum__ != null;\n\t}\n\n\tpublic static function deleteField( o : Dynamic, field : String ) : Bool untyped {\n\t\tif( !hasField(o,field) ) return false;\n\t\t__js__(\"delete\")(o[field]);\n\t\treturn true;\n\t}\n\n\tpublic static function copy<T>( o : T ) : T {\n\t\tvar o2 : Dynamic = {};\n\t\tfor( f in Reflect.fields(o) )\n\t\t\tReflect.setField(o2,f,Reflect.field(o,f));\n\t\treturn o2;\n\t}\n\n\t@:overload(function( f : Array<Dynamic> -> Void ) : Dynamic {})\n\tpublic static function makeVarArgs( f : Array<Dynamic> -> Dynamic ) : Dynamic {\n\t\treturn function() {\n\t\t\tvar a = untyped Array.prototype.slice.call(__js__(\"arguments\"));\n\t\t\treturn f(a);\n\t\t};\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn cast(x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA String buffer is an efficient way to build a big string by appending small\n\telements together.\n\n\tIts cross-platform implementation uses String concatenation internally, but\n\tStringBuf may be optimized for different targets.\n\n\tUnlike String, an instance of StringBuf is not immutable in the sense that\n\tit can be passed as argument to functions which modify it by appending more\n\tvalues. However, the internal buffer cannot be modified.\n**/\nclass StringBuf {\n\n\tvar b:String;\n\n\t/**\n\t\tThe length of `this` StringBuf in characters.\n\t**/\n\tpublic var length(get,never) : Int;\n\n\t/**\n\t\tCreates a new StringBuf instance.\n\n\t\tThis may involve initialization of the internal buffer.\n\t**/\n\tpublic inline function new() {\n\t\tb = \"\";\n\t}\n\n\tinline function get_length() : Int {\n\t\treturn b.length;\n\t}\n\n\t/**\n\t\tAppends the representation of `x` to `this` StringBuf.\n\n\t\tThe exact representation of `x` may vary per platform. To get more\n\t\tconsistent behavior, this function should be called with\n\t\tStd.string(x).\n\n\t\tIf `x` is null, the String \"null\" is appended.\n\t**/\n\tpublic inline function add<T>( x : T ) : Void {\n\t\tb += x;\n\t}\n\n\t/**\n\t\tAppends the character identified by `c` to `this` StringBuf.\n\n\t\tIf `c` is negative or has another invalid value, the result is\n\t\tunspecified.\n\t**/\n\tpublic inline function addChar( c : Int ) : Void {\n\t\tb += String.fromCharCode(c);\n\t}\n\n\t/**\n\t\tAppends a substring of `s` to `this` StringBuf.\n\n\t\tThis function expects `pos` and `len` to describe a valid substring of\n\t\t`s`, or else the result is unspecified. To get more robust behavior,\n\t\t`this.add(s.substr(pos,len))` can be used instead.\n\n\t\tIf `s` or `pos` are null, the result is unspecified.\n\n\t\tIf `len` is omitted or null, the substring ranges from `pos` to the end\n\t\tof `s`.\n\t**/\n\tpublic inline function addSub( s : String, pos : Int, ?len : Int) : Void {\n\t\tb += (len == null ? s.substr(pos) : s.substr(pos, len));\n\t}\n\n\t/**\n\t\tReturns the content of `this` StringBuf as String.\n\n\t\tThe buffer is not emptied by this operation.\n\t**/\n\tpublic inline function toString() : String {\n\t\treturn b;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tThis class provides advanced methods on Strings. It is ideally used with\n\t'using StringTools' and then acts as an extension to the String class.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\n#if cs\n@:keep\n#end\nclass StringTools {\n\t/**\n\t\tEncode an URL by using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlEncode( s : String ) : String {\n\t\t#if flash9\n\t\t\treturn untyped __global__[\"encodeURIComponent\"](s);\n\t\t#elseif flash\n\t\t\treturn untyped _global[\"escape\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlEncode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped encodeURIComponent(s);\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLEncode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLEncoder.encode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.EscapeUriString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.quote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tDecode an URL using the standard format.\n\t**/\n\t#if (!java && !cpp) inline #end public static function urlDecode( s : String ) : String {\n\t\t#if flash9\n\t\t\treturn untyped __global__[\"decodeURIComponent\"](s.split(\"+\").join(\" \"));\n\t\t#elseif flash\n\t\t\treturn untyped _global[\"unescape\"](s);\n\t\t#elseif neko\n\t\t\treturn untyped new String(_urlDecode(s.__s));\n\t\t#elseif js\n\t\t\treturn untyped decodeURIComponent(s.split(\"+\").join(\" \"));\n\t\t#elseif cpp\n\t\t\treturn untyped s.__URLDecode();\n\t\t#elseif java\n\t\t\ttry\n\t\t\t\treturn untyped __java__(\"java.net.URLDecoder.decode(s, \\\"UTF-8\\\")\")\n\t\t\tcatch (e:Dynamic) throw e;\n\t\t#elseif cs\n\t\t\treturn untyped cs.system.Uri.UnescapeDataString(s);\n\t\t#elseif python\n\t\t\treturn python.lib.urllib.Parse.unquote(s);\n\t\t#else\n\t\t\treturn null;\n\t\t#end\n\t}\n\n\t/**\n\t\tEscapes HTML special characters of the string `s`.\n\n\t\tThe following replacements are made:\n\n\t\t- `&` becomes `&amp`;\n\t\t- `<` becomes `&lt`;\n\t\t- `>` becomes `&gt`;\n\n\t\tIf `quotes` is true, the following characters are also replaced:\n\n\t\t- `\"` becomes `&quot`;\n\t\t- `'` becomes `&#039`;\n\t**/\n\tpublic static function htmlEscape( s : String, ?quotes : Bool ) : String {\n\t\ts = s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t\treturn quotes ? s.split('\"').join(\"&quot;\").split(\"'\").join(\"&#039;\") : s;\n\t}\n\n\t/**\n\t\tUnescapes HTML special characters of the string `s`.\n\n\t\tThis is the inverse operation to htmlEscape, i.e. the following always\n\t\tholds: htmlUnescape(htmlEscape(s)) == s\n\n\t\tThe replacements follow:\n\n\t\t- `&amp;` becomes `&`\n\t\t- `&lt;` becomes `<`\n\t\t- `&gt;` becomes `>`\n\t\t- `&quot;` becomes `\"`\n\t\t- `&#039;` becomes `'`\n\t**/\n\tpublic static function htmlUnescape( s : String ) : String {\n\t\treturn s.split(\"&gt;\").join(\">\").split(\"&lt;\").join(\"<\").split(\"&quot;\").join('\"').split(\"&#039;\").join(\"'\").split(\"&amp;\").join(\"&\");\n\t}\n\n\t/**\n\t\tTells if the string `s` starts with the string `start`.\n\n\t\tIf `start` is null, the result is unspecified.\n\n\t\tIf `start` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function startsWith( s : String, start : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.startsWith(start);\n\t\t#elseif cs\n\t\treturn untyped s.StartsWith(start);\n\t\t#else\n\t\treturn( s.length >= start.length && s.substr(0, start.length) == start );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the string `s` ends with the string `end`.\n\n\t\tIf `end` is null, the result is unspecified.\n\n\t\tIf `end` is the empty String \"\", the result is true.\n\t**/\n\tpublic static #if (cs || java) inline #end function endsWith( s : String, end : String ) : Bool {\n\t\t#if java\n\t\treturn untyped s.endsWith(end);\n\t\t#elseif cs\n\t\treturn untyped s.EndsWith(end);\n\t\t#else\n\t\tvar elen = end.length;\n\t\tvar slen = s.length;\n\t\treturn( slen >= elen && s.substr(slen - elen, elen) == end );\n\t\t#end\n\t}\n\n\t/**\n\t\tTells if the character in the string `s` at position `pos` is a space.\n\n\t\tA character is considered to be a space character if its character code\n\t\tis 9,10,11,12,13 or 32.\n\n\t\tIf `s` is the empty String \"\", or if pos is not a valid position within\n\t\t`s`, the result is false.\n\t**/\n\tpublic static function isSpace( s : String, pos : Int ) : Bool {\n\t\t#if python\n\t\tif (s.length == 0 || pos < 0 || pos >= s.length) return false;\n\t\t#end\n\t\tvar c = s.charCodeAt( pos );\n\t\treturn (c > 8 && c < 14) || c == 32;\n\t}\n\n\t/**\n\t\tRemoves leading space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function ltrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimStart();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,r) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 )\n\t\t\treturn s.substr(r, l-r);\n\t\telse\n\t\t\treturn s;\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves trailing space characters of `s`.\n\n\t\tThis function internally calls isSpace() to decide which characters to\n\t\tremove.\n\n\t\tIf `s` is the empty String \"\" or consists only of space characters, the\n\t\tresult is the empty String \"\".\n\t**/\n\tpublic #if cs inline #end static function rtrim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.TrimEnd();\n\t\t#else\n\t\tvar l = s.length;\n\t\tvar r = 0;\n\t\twhile( r < l && isSpace(s,l-r-1) ){\n\t\t\tr++;\n\t\t}\n\t\tif( r > 0 ){\n\t\t\treturn s.substr(0, l-r);\n\t\t}else{\n\t\t\treturn s;\n\t\t}\n\t\t#end\n\t}\n\n\t/**\n\t\tRemoves leading and trailing space characters of `s`.\n\n\t\tThis is a convenience function for ltrim(rtrim(s)).\n\t**/\n\tpublic #if (cs || java) inline #end static function trim( s : String ) : String {\n\t\t#if cs\n\t\treturn untyped s.Trim();\n\t\t#elseif java\n\t\treturn untyped s.trim();\n\t\t#else\n\t\treturn ltrim(rtrim(s));\n\t\t#end\n\t}\n\n\t/**\n\t\tConcatenates `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function lpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = c + s;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tAppends `c` to `s` until `s.length` is at least `l`.\n\n\t\tIf `c` is the empty String \"\" or if `l` does not exceed `s.length`,\n\t\t`s` is returned unchanged.\n\n\t\tIf `c.length` is 1, the resulting String length is exactly `l`.\n\n\t\tOtherwise the length may exceed `l`.\n\n\t\tIf `c` is null, the result is unspecified.\n\t**/\n\tpublic static function rpad( s : String, c : String, l : Int ) : String {\n\t\tif (c.length <= 0)\n\t\t\treturn s;\n\n\t\twhile (s.length < l) {\n\t\t\ts = s + c;\n\t\t}\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReplace all occurences of the String `sub` in the String `s` by the\n\t\tString `by`.\n\n\t\tIf `sub` is the empty String \"\", `by` is inserted after each character\n\t\tof `s`. If `by` is also the empty String \"\", `s` remains unchanged.\n\n\t\tThis is a convenience function for `s.split(sub).join(by)`.\n\n\t\tIf `sub` or `by` are null, the result is unspecified.\n\t**/\n\tpublic static function replace( s : String, sub : String, by : String ) : String {\n\t\t#if java\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.replace(sub, by);\n\t\t#elseif cs\n\t\tif (sub.length == 0)\n\t\t\treturn s.split(sub).join(by);\n\t\telse\n\t\t\treturn untyped s.Replace(sub, by);\n\t\t#else\n\t\treturn s.split(sub).join(by);\n\t\t#end\n\t}\n\n\t/**\n\t\tEncodes `n` into a hexadecimal representation.\n\n\t\tIf `digits` is specified, the resulting String is padded with \"0\" until\n\t\tits length equals `digits`.\n\t**/\n\tpublic static function hex( n : Int, ?digits : Int ) {\n\t\t#if flash9\n\t\t\tvar n : UInt = n;\n\t\t\tvar s : String = untyped n.toString(16);\n\t\t\ts = s.toUpperCase();\n\t\t#else\n\t\t\tvar s = \"\";\n\t\t\tvar hexChars = \"0123456789ABCDEF\";\n\t\t\tdo {\n\t\t\t\ts = hexChars.charAt(n&15) + s;\n\t\t\t\tn >>>= 4;\n\t\t\t} while( n > 0 );\n\t\t#end\n\t\t#if python\n\t\tif (digits != null && s.length < digits) {\n\t\t\tvar diff = digits - s.length;\n\t\t\tfor (_ in 0...diff) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t}\n\t\t#else\n\t\tif( digits != null )\n\t\t\twhile( s.length < digits )\n\t\t\t\ts = \"0\"+s;\n\t\t#end\n\t\treturn s;\n\t}\n\n\t/**\n\t\tReturns the character code at position `index` of String `s`, or an\n\t\tend-of-file indicator at if `position` equals `s.length`.\n\n\t\tThis method is faster than String.charCodeAt() on some platforms, but\n\t\tthe result is unspecified if `index` is negative or greater than\n\t\t`s.length`.\n\n\t\tEnd of file status can be checked by calling `StringTools.isEof` with\n\t\tthe returned value as argument.\n\n\t\tThis operation is not guaranteed to work if `s` contains the \\0\n\t\tcharacter.\n\t**/\n\tpublic static inline function fastCodeAt( s : String, index : Int ) : Int {\n\t\t#if neko\n\t\treturn untyped __dollar__sget(s.__s, index);\n\t\t#elseif cpp\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash9\n\t\treturn untyped s.cca(index);\n\t\t#elseif flash\n\t\treturn untyped s[\"cca\"](index);\n\t\t#elseif java\n\t\treturn ( index < s.length ) ? cast(_charAt(s, index), Int) : -1;\n\t\t#elseif cs\n\t\treturn ( cast(index, UInt) < s.length ) ? cast(s[index], Int) : -1;\n\t\t#elseif js\n\t\treturn (untyped s).charCodeAt(index);\n\t\t#elseif python\n\t\treturn if (index >= s.length) -1 else python.lib.Builtin.ord(python.Syntax.arrayAccess(s, index));\n\t\t#else\n\t\treturn untyped s.cca(index);\n\t\t#end\n\t}\n\n\t/*\n\t\tTells if `c` represents the end-of-file (EOF) character.\n\t*/\n\t@:noUsing public static inline function isEof( c : Int ) : Bool {\n\t\t#if (flash9 || cpp)\n\t\treturn c == 0;\n\t\t#elseif flash8\n\t\treturn c <= 0; // fast NaN\n\t\t#elseif js\n\t\treturn c != c; // fast NaN\n\t\t#elseif neko\n\t\treturn c == null;\n\t\t#elseif cs\n\t\treturn c == -1;\n\t\t#elseif java\n\t\treturn c == -1;\n\t\t#elseif python\n\t\treturn c == -1;\n\t\t#else\n\t\treturn false;\n\t\t#end\n\t}\n\n\t#if java\n\tprivate static inline function _charAt(str:String, idx:Int):java.StdTypes.Char16 return untyped str._charAt(idx);\n\t#end\n\n\t#if neko\n\tprivate static var _urlEncode = neko.Lib.load(\"std\",\"url_encode\",1);\n\tprivate static var _urlDecode = neko.Lib.load(\"std\",\"url_decode\",1);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nenum ValueType {\n\tTNull;\n\tTInt;\n\tTFloat;\n\tTBool;\n\tTObject;\n\tTFunction;\n\tTClass( c : Class<Dynamic> );\n\tTEnum( e : Enum<Dynamic> );\n\tTUnknown;\n}\n\n@:coreApi class Type {\n\n\tpublic static function getClass<T>( o : T ) : Class<T> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn js.Boot.getClass(o);\n\t}\n\n\tpublic static function getEnum( o : EnumValue ) : Enum<Dynamic> untyped {\n\t\tif( o == null )\n\t\t\treturn null;\n\t\treturn o.__enum__;\n\t}\n\n\tpublic static function getSuperClass( c : Class<Dynamic> ) : Class<Dynamic> untyped {\n\t\treturn c.__super__;\n\t}\n\n\n\tpublic static function getClassName( c : Class<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped c.__name__;\n\t\tif (a == null)\n\t\t\treturn null;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function getEnumName( e : Enum<Dynamic> ) : String {\n\t\tvar a : Array<String> = untyped e.__ename__;\n\t\treturn a.join(\".\");\n\t}\n\n\tpublic static function resolveClass( name : String ) : Class<Dynamic> untyped {\n\t\tvar cl : Class<Dynamic> = $hxClasses[name];\n\t\t// ensure that this is a class\n\t\tif( cl == null || !js.Boot.isClass(cl) )\n\t\t\treturn null;\n\t\treturn cl;\n\t}\n\n\tpublic static function resolveEnum( name : String ) : Enum<Dynamic> untyped {\n\t\tvar e : Dynamic = $hxClasses[name];\n\t\t// ensure that this is an enum\n\t\tif( e == null || !js.Boot.isEnum(e) )\n\t\t\treturn null;\n\t\treturn e;\n\t}\n\n\tpublic static function createInstance<T>( cl : Class<T>, args : Array<Dynamic> ) : T untyped {\n\t\tswitch( args.length ) {\n\t\tcase 0:\n\t\t\treturn __new__(cl);\n\t\tcase 1:\n\t\t\treturn __new__(cl,args[0]);\n\t\tcase 2:\n\t\t\treturn __new__(cl,args[0],args[1]);\n\t\tcase 3:\n\t\t\treturn __new__(cl,args[0],args[1],args[2]);\n\t\tcase 4:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3]);\n\t\tcase 5:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4]);\n\t\tcase 6:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5]);\n\t\tcase 7:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6]);\n\t\tcase 8:\n\t\t\treturn __new__(cl,args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);\n\t\tdefault:\n\t\t\tthrow \"Too many arguments\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static function createEmptyInstance<T>( cl : Class<T> ) : T untyped {\n\t\t__js__(\"function empty() {}; empty.prototype = cl.prototype\");\n\t\treturn __js__(\"new empty()\");\n\t}\n\n\tpublic static function createEnum<T>( e : Enum<T>, constr : String, ?params : Array<Dynamic> ) : T {\n\t\tvar f:Dynamic = Reflect.field(e,constr);\n\t\tif( f == null ) throw \"No such constructor \"+constr;\n\t\tif( Reflect.isFunction(f) ) {\n\t\t\tif( params == null ) throw \"Constructor \"+constr+\" need parameters\";\n\t\t\treturn Reflect.callMethod(e,f,params);\n\t\t}\n\t\tif( params != null && params.length != 0 )\n\t\t\tthrow \"Constructor \"+constr+\" does not need parameters\";\n\t\treturn f;\n\t}\n\n\tpublic static function createEnumIndex<T>( e : Enum<T>, index : Int, ?params : Array<Dynamic> ) : T {\n\t\tvar c : String = (untyped e.__constructs__)[index];\n\t\tif( c == null ) throw index+\" is not a valid enum constructor index\";\n\t\treturn createEnum(e,c,params);\n\t}\n\n\tpublic static function getInstanceFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = [];\n\t\tuntyped __js__(\"for(var i in c.prototype) a.push(i)\");\n\t\ta.remove(\"__class__\");\n\t\ta.remove(\"__properties__\");\n\t\treturn a;\n\t}\n\n\tpublic static function getClassFields( c : Class<Dynamic> ) : Array<String> {\n\t\tvar a = Reflect.fields(c);\n\t\ta.remove(\"__name__\");\n\t\ta.remove(\"__interfaces__\");\n\t\ta.remove(\"__properties__\");\n\t\ta.remove(\"__super__\");\n\t\ta.remove(\"prototype\");\n\t\treturn a;\n\t}\n\n\tpublic static function getEnumConstructs( e : Enum<Dynamic> ) : Array<String> {\n\t\tvar a : Array<String> = untyped e.__constructs__;\n\t\treturn a.copy();\n\t}\n\n\tpublic static function typeof( v : Dynamic ) : ValueType untyped {\n\t\tswitch( __js__(\"typeof\")(v) ) {\n\t\tcase \"boolean\": return TBool;\n\t\tcase \"string\": return TClass(String);\n\t\tcase \"number\":\n\t\t\t// this should handle all cases : NaN, +/-Inf and Floats outside range\n\t\t\tif( Math.ceil(v) == v%2147483648.0 )\n\t\t\t\treturn TInt;\n\t\t\treturn TFloat;\n\t\tcase \"object\":\n\t\t\tif( v == null )\n\t\t\t\treturn TNull;\n\t\t\tvar e = v.__enum__;\n\t\t\tif( e != null )\n\t\t\t\treturn TEnum(e);\n\t\t\tvar c = js.Boot.getClass(v);\n\t\t\tif( c != null )\n\t\t\t\treturn TClass(c);\n\t\t\treturn TObject;\n\t\tcase \"function\":\n\t\t\tif( js.Boot.isClass(v) || js.Boot.isEnum(v) )\n\t\t\t\treturn TObject;\n\t\t\treturn TFunction;\n\t\tcase \"undefined\":\n\t\t\treturn TNull;\n\t\tdefault:\n\t\t\treturn TUnknown;\n\t\t}\n\t}\n\n\tpublic static function enumEq<T>( a : T, b : T ) : Bool untyped {\n\t\tif( a == b )\n\t\t\treturn true;\n\t\ttry {\n\t\t\tif( a[0] != b[0] )\n\t\t\t\treturn false;\n\t\t\tfor( i in 2...a.length )\n\t\t\t\tif( !enumEq(a[i],b[i]) )\n\t\t\t\t\treturn false;\n\t\t\tvar e = a.__enum__;\n\t\t\tif( e != b.__enum__ || e == null )\n\t\t\t\treturn false;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic inline static function enumConstructor( e : EnumValue ) : String {\n\t\treturn untyped e[0];\n\t}\n\n\tpublic inline static function enumParameters( e : EnumValue ) : Array<Dynamic> {\n\t\treturn untyped e.slice(2);\n\t}\n\n\tpublic inline static function enumIndex( e : EnumValue ) : Int {\n\t\treturn untyped e[1];\n\t}\n\n\tpublic static function allEnums<T>( e : Enum<T> ) : Array<T> {\n\t\treturn untyped e.__empty_constructs__;\n\t}\n\n}\n\n","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n* \n****/\n\n/*\n* ...\n* @author original author: waneck - modifications by: fermmmm\n*/\n\npackage com.fermmtools.utils;\nimport haxe.Serializer;\nimport haxe.Unserializer;\n\n#if flash9\n    typedef ObjectHash<Key, Val> = TypedDictionary<Key, Val>;\n#else\n\nclass ObjectHash<Key, Val>\n{\n    private static inline var SAFE_NUM = #if neko 1073741823 #else 2147483647 #end;\n    private static var clsId:Int = 0;\n\n#if !php\n        private var ival:Map<Int,Array<Dynamic>>;\n#else\n        private var ival:Map<String,Array<Dynamic>>;\n        #end\n\n    public var length(default, null):Int;\n\n    public function new()\n    {\n#if !php\n            ival = new Map();\n#else\n            ival = new Map();\n        #end\n\n        length = 0;\n    }\n\n    public function set(k:Key, v:Val)\n    {\n        var oid = getObjectId(k);\n\n        var g = ival.get(oid);\n        if (g == null)\n        {\n            g = [];\n            ival.set(oid, g);\n        }\n\n        var i = 0;\n        var len = g.length;\n        while (i < len)\n        {\n            if (g[i] == k)\n            {\n                g[i + 1] = v;\n                return;\n            }\n\n            i += 2;\n        }\n\n        g.push(k);\n        g.push(v);\n\n        length++;\n    }\n\n    private #if (cpp || php || java || cs) inline #end function getObjectId(obj:Dynamic):#if !php Int #else String #end untyped\n    {\n#if cpp\n            return __global__.__hxcpp_obj_id(obj);\n        #elseif (neko || js || flash)\n            if (Std.is(obj, Class))\n            {\n                if (obj.__cls_id__ == null)\n                    obj.__cls_id__ = clsId++;\n                return obj.__cls_id__;\n            } else {\n        #if neko\n                if (__dollar__typeof(obj) == __dollar__tfunction)\n                    return 0;\n        #end\n                if (obj.__get_id__ == null)\n                {\n                    var cls:Dynamic = Type.getClass(obj);\n                    if (cls == null)\n                    {\n                        var id = Std.random(SAFE_NUM);\n                        obj.__get_id__ = function() return id;\n                        return id;\n                    }\n\n                    var fstid = Std.random(SAFE_NUM);\n                    var _this = this;\n                    cls.prototype.__get_id__ = function()\n                    {\n                        if (_this.___id___ == null)\n                        {\n                            return _this.___id___ = Std.random(SAFE_NUM);\n                        }\n                        return _this.___id___;\n\n                    }\n                }\n                return obj.__get_id__();\n            }\n\n\n        #elseif php\n            if (Reflect.isFunction(obj))\n                return \"fun\";\n            else\n                return __call__('spl_object_hash', obj);\n        #elseif java\n            return obj.hashCode();\n        #elseif cs\n            return obj.GetHashCode();\n        #else\n        UnsupportedPlatform\n#end\n    }\n\n    public function get(k:Key):Null<Val>\n    {\n        if (k == null)\n            return null;\n        var oid = getObjectId(k);\n\n        var g = ival.get(oid);\n        if (g == null)\n        {\n            return null;\n        }\n\n        var i = 0;\n        var len = g.length;\n        while (i < len)\n        {\n            if (g[i] == k)\n            {\n                return g[i + 1];\n            }\n\n            i += 2;\n        }\n\n        return null;\n    }\n\n    public function exists(k:Key):Bool\n    {\n        var oid = getObjectId(k);\n\n        var removed = false;\n\n        var g = ival.get(oid);\n        if (g == null)\n        {\n            return false;\n        }\n\n        var i = 0;\n        var len = g.length;\n        while (i < len)\n        {\n            if (g[i] == k)\n            {\n                return true;\n            }\n            i += 2;\n        }\n\n        return false;\n    }\n\n    public function delete(k:Key):Bool\n    {\n        var oid = getObjectId(k);\n\n        var removed = false;\n\n        var g = ival.get(oid);\n        if (g == null)\n        {\n            return false;\n        }\n\n        var i = 0;\n        var len = g.length;\n        while (i < len)\n        {\n            if (g[i] == k)\n            {\n                g.splice(i, 2);\n                removed = true;\n                length--;\n                break;\n            }\n            i += 2;\n        }\n\n        if (g.length == 0)\n            ival.remove(oid);\n\n        return removed;\n    }\n\n    public function keys():Iterator<Key>\n    {\n        var valit = ival.iterator();\n        var curr = null;\n        var currIndex = 0;\n        return {\n        hasNext: function() return (curr != null || valit.hasNext()),\n        next: function(){\n            if (curr == null)\n                curr = valit.next();\n\n            var ret = curr[currIndex];\n            currIndex += 2;\n\n            if (currIndex >= curr.length)\n            {\n                currIndex = 0;\n                curr = null;\n            }\n\n            return ret;\n        }\n        };\n    }\n\n    public function values():Iterator<Val>\n    {\n        var valit = ival.iterator();\n        var curr = null;\n        var currIndex = 1;\n        return {\n        hasNext: function() return (curr != null || valit.hasNext()),\n        next: function(){\n            if (curr == null)\n                curr = valit.next();\n\n            var ret = curr[currIndex];\n            currIndex += 2;\n\n            if (currIndex >= curr.length)\n            {\n                currIndex = 1;\n                curr = null;\n            }\n\n            return ret;\n        }\n        };\n    }\n\n    public function iterator():Iterator<Key>\n    {\n        return keys();\n    }\n\n    public function toString()\n    {\n        var ret = new StringBuf();\n        ret.add(\"{ \");\n        var first = true;\n\n        for (k in keys())\n        {\n            if (first)\n            {\n                ret.add(\"\\\"\");\n                first = false;\n            } else {\n                ret.add(\", \\\"\");\n            }\n\n            ret.add(k);\n            ret.add(\"\\\" => \\\"\");\n            ret.add(get(k));\n            ret.add(\"\\\"\");\n        }\n\n        ret.add(\" }\");\n        return ret.toString();\n    }\n\n    public function hxSerialize(s:Serializer)\n    {\n        s.serialize(length);\n\n        var valit = ival.iterator();\n        var curr = null;\n        var currIndex = 0;\n        while (curr != null || valit.hasNext())\n        {\n            if (curr == null)\n                curr = valit.next();\n\n            var ret = curr[currIndex];\n            s.serialize(curr[currIndex]);\n            s.serialize(curr[currIndex + 1]);\n\n            currIndex += 2;\n            if (currIndex >= curr.length)\n            {\n                currIndex = 0;\n                curr = null;\n            }\n\n        }\n    }\n\n    public function hxUnserialize(s:Unserializer)\n    {\n        var len:Int = s.unserialize();\n        for (i in 0...len)\n        {\n            var k = s.unserialize();\n            var v = s.unserialize();\n            set(k, v);\n        }\n    }\n}\n#end","package egg;\r\n\r\nimport box.asset.Loader;\r\nimport egg.AssetId;\r\nimport tink.core.Future;\r\nimport tink.core.Outcome;\r\nimport box.asset.Image;\r\n\r\ntypedef ImageOutcome = Outcome<Image, String>;\r\n\r\nclass ImageLoader implements AssetLoader<Image>{\r\n\r\n\tprivate var futures : Map<AssetId,Future<ImageOutcome>>;\r\n\r\n\tpublic function new() {\r\n\t\tfutures = new Map();\r\n\t}\r\n\r\n\tpublic function load(assetId : AssetId, ?path = null) : Future<ImageOutcome>{\r\n\t\tif (path == null){\r\n\t\t\tpath = assetId;\r\n\t\t}\r\n\r\n  \t\tvar future  = futures.get(assetId);\r\n        if (future != null){\r\n            return future;\r\n        }\r\n\r\n\t\tfuture = Future.async(function (handler:ImageOutcome->Void) {\r\n\t\t\tvar loader = new Loader();\r\n\t\t\tloader.loadImage(path,\r\n\t\t\t\tfunction (data) handler(Success(data)),\r\n\t\t\t\tfunction (error) handler(Failure(error))\r\n\t\t\t\t);\r\n\t    });\r\n        \r\n\t\t\r\n        return future;\r\n\t}\r\n\r\n}","package egg;\r\n\r\nimport box.asset.Loader;\r\nimport egg.AssetId;\r\nimport tink.core.Future;\r\nimport tink.core.Outcome;\r\n\r\n\r\ntypedef TextOutcome = Outcome<String, String>;\r\n\r\nclass TextLoader implements AssetLoader<String>{\r\n\r\n\tprivate var futures : Map<AssetId,Future<TextOutcome>>;\r\n\r\n\tpublic function new() {\r\n\t\tfutures = new Map();\r\n\t}\r\n\r\n\tpublic function load(assetId : AssetId, ?path = null) : Future<TextOutcome>{\r\n\t\tif (path == null){\r\n\t\t\tpath = assetId;\r\n\t\t}\r\n\r\n  \t\tvar future  = futures.get(assetId);\r\n        if (future != null){\r\n            return future;\r\n        }\r\n\r\n\t\tfuture = Future.async(function (handler:TextOutcome->Void) {\r\n\t\t\tvar loader = new Loader();\r\n\t\t\tloader.loadText(path,\r\n\t\t\t\tfunction (data) handler(Success(data)),\r\n\t\t\t\tfunction (error) handler(Failure(error))\r\n\t\t\t\t);\r\n\t    });\r\n        \r\n\t\t\r\n        return future;\r\n\t}\r\n\r\n}","package egg;\r\n\r\nimport egg.Assets.AssetsOutcome;\r\nimport egg.Batch.BatchOutcome;\r\nimport tink.core.Outcome;\r\nimport tink.core.Future;\r\nimport box.asset.Image;\r\n\r\ntypedef AssetsError = {textOutcomes : Array<Outcome<String,String>>, imageOutcomes : Array<Outcome<Image,String>>};\r\ntypedef AssetsOutcome = Outcome<Assets,AssetsError>;\r\n\r\n\r\nclass Assets{\r\n\r\n\tprivate static var textLoader = new TextLoader();\r\n\tprivate static var imageLoader = new ImageLoader();\r\n\r\n\tpublic static function load(texts : Array<String>, images : Array<String>) : Future<AssetsOutcome>{\r\n\r\n\t\tvar textsFuture = Batch.load(textLoader,texts);\r\n\t\tvar imagesFuture = Batch.load(imageLoader,images);\r\n\r\n\t\treturn textsFuture.merge(imagesFuture, function(textBatch : BatchOutcome<String>, imageBatch : BatchOutcome<Image>) : AssetsOutcome{\r\n\t\t\tvar resultingTexts : Batch<String> = null;\r\n\t\t\tvar textError : Array<Outcome<String,String>> = null;\r\n\t\t\tswitch(textBatch){\r\n\t\t\t\tcase Success(texts): resultingTexts = texts;\r\n\t\t\t\tcase Failure(outcomes) : textError = outcomes;\r\n\t\t\t}\r\n\r\n\t\t\tvar resultingImages : Batch<Image> = null;\r\n\t\t\tvar imageError : Array<Outcome<Image,String>> = null;\r\n\t\t\tswitch(imageBatch){\r\n\t\t\t\tcase Success(images): resultingImages = images;\r\n\t\t\t\tcase Failure(outcomes) : imageError = outcomes;\r\n\t\t\t}\r\n\r\n\t\t\tif (resultingImages != null && resultingTexts != null){\r\n\t\t\t\treturn Success(new Assets(resultingTexts, resultingImages));\r\n\t\t\t}else{\r\n\t\t\t\treturn Failure({textOutcomes : textError, imageOutcomes : imageError});\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n\tpublic var texts(default,null) : Batch<String>;\r\n\tpublic var images(default,null) : Batch<Image>;\r\n\t//TODO other\r\n\r\n\tpublic function new(texts : Batch<String>, images : Batch<Image>){\r\n\t\tthis.texts = texts;\r\n\t\tthis.images = images;\r\n\t}\r\n\r\n}","package egg;\n\nimport egg.AssetId;\nimport tink.core.Outcome;\nimport tink.core.Future;\n\ntypedef BatchOutcome<T> = Outcome<Batch<T>, Array<Outcome<T,String>>>;\n\nprivate typedef TmpBatchOutcome<T> = Outcome<{data:T, id:AssetId},String>;\n\nclass Batch<T> implements AssetStore<T> {\n\n    inline static public function load<T>(assetLoader : AssetLoader<T>, ids : Array<AssetId>, ?paths : Array<String> = null) : Future<BatchOutcome<T>>{\n        if(paths == null){\n            paths = ids;\n        }\n\n        \n        while(paths.length < ids.length ){\n            paths.push(ids[paths.length]);\n        }\n\n        var allFutures : Array<Future<TmpBatchOutcome<T>>> = [];\n        for (i in 0...paths.length){\n            var path = paths[i];\n            var id = ids[i];\n            var future = assetLoader.load(path).map(function(o){\n                switch(o){\n                    case Success(d):return Success({data:d,id:id});\n                    case Failure(e): return Failure(e);\n                }\n            });\n            allFutures.push(future);         \n        }        \n\n        var futureForAll : Future<Array<TmpBatchOutcome<T>>> = allFutures;\n        \n        var futureTrigger : FutureTrigger<BatchOutcome<T>> = Future.trigger();\n\n        futureForAll.handle(function(outcomes : Array<Outcome<{data:T, id:AssetId},String>>){\n                var data = new Map<AssetId,T>();\n                var originalOutcomes = new Array<Outcome<T,String>>();\n                var atleastOneFailed = false;\n                for (outcome in outcomes){\n                    switch(outcome){\n                        case Success(d): \n                            data.set(d.id,d.data);\n                            originalOutcomes.push(Success(d.data));\n                        case Failure(error): \n                            atleastOneFailed = true;\n                            originalOutcomes.push(Failure(error));\n                    }\n                }\n\n                if(atleastOneFailed){\n                    futureTrigger.trigger(Failure(originalOutcomes));\n                }else{\n                    futureTrigger.trigger(Success(new Batch(data)));\n                }\n                \n            });\n\n        return futureTrigger.asFuture();\n    }\n\n\n    private var dict : Map<egg.AssetId,T>;\n\n    public function new(items : Map<AssetId,T>) {\n        dict = new Map();\n        for (itemId in items.keys()){\n            dict.set(itemId, items[itemId]);\n        }\n    }\n\n    public function get(assetId : AssetId) : T{\n        return dict.get(assetId);\n    }\n\n    //TODO iterator\n    public function all() : Array<T>{\n        var all : Array<T> = new Array();\n        for ( t in dict){\n            all.push(t);\n        }\n        return all;\n    }\n\n}\n","package glow;\r\n\r\nimport box.asset.Image;\r\nimport box.gl.GL;\r\nimport glow.GPUBuffer;\r\nimport glow.GPUTexture;\r\n\r\nclass GPU{\r\n\t\r\n\tpublic var gl(default,null) : GL;\r\n\r\n\tinline public function new(gl : GL){\r\n\t\tthis.gl = gl;\r\n\t}\r\n\r\n\tinline public function clearWith(r : Float, g : Float, b : Float, a : Float):Void{\r\n\t\tgl.clearColor(r,g,b,a);\r\n\t\tgl.clear(GL.COLOR_BUFFER_BIT);\r\n\t}\r\n\r\n\tinline public function uploadTexture(image : Image) : GPUTexture{\r\n\t\treturn GPUTexture.upload(this, image);\r\n\t}\r\n\r\n}","package glow;\r\n\r\nimport box.gl.GL;\r\nimport box.util.Float32Array;\r\n\r\nclass GPUBufferBase{\r\n\tvar  _gl : GL;\r\n\r\n\tpublic var nativeBuffer(default,null) : GLBuffer;\r\n\t\r\n\tvar _float32Array : Float32Array;\r\n\tvar _usage : Int;\r\n\r\n\t\r\n\tpublic var uploaded(default,null) : Bool;\r\n\t\r\n\tpublic function new(gpu : GPU, usage : Int){\r\n\t\t_gl = gpu.gl;\r\n\t\t_usage = usage;\r\n\t\tnativeBuffer = _gl.createBuffer();\r\n\t}\r\n\r\n\tpublic function upload() :Void{\r\n\t\tvar offset = 0;\r\n        _gl.bindBuffer (GL.ARRAY_BUFFER, nativeBuffer);\r\n        if (offset != 0) {\r\n            _gl.bufferSubData(GL.ARRAY_BUFFER, offset, _float32Array);\r\n        }else {\r\n            _gl.bufferData (GL.ARRAY_BUFFER, _float32Array, _usage);\r\n        }\r\n        _gl.bindBuffer (GL.ARRAY_BUFFER, null);\r\n        uploaded = true;\r\n\t}\r\n\t\r\n\r\n}","package glow;\r\n\r\nimport box.gl.GL;\r\n\r\nclass GPUProgramUtil{\r\n\r\n\tprivate static function setupShader(gl : GL, shaderSrc : String, shaderType : Int) : GLShader{\r\n        var shader = gl.createShader(shaderType);\r\n        gl.shaderSource(shader, shaderSrc);\r\n        gl.compileShader(shader);\r\n        var success = gl.getShaderParameter(shader, GL.COMPILE_STATUS);\r\n        if (success == 0) {\r\n            // Something went wrong during compilation; get the error\r\n            throw \"could not compile shader:\" + gl.getShaderInfoLog(shader);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    public static function upload(gl : GL, vertexShaderSrc : String, fragmentShaderSrc : String):GLProgram{\r\n\t\tvar vertexShader = setupShader(gl, vertexShaderSrc, GL.VERTEX_SHADER);\r\n\t\tvar fragmentShader = setupShader(gl, fragmentShaderSrc, GL.FRAGMENT_SHADER);\r\n\r\n\t\tvar nativeProgram = gl.createProgram();\r\n        gl.attachShader(nativeProgram, vertexShader);\r\n        gl.attachShader(nativeProgram, fragmentShader);\r\n        gl.linkProgram(nativeProgram);\r\n\r\n        var success = gl.getProgramParameter(nativeProgram, GL.LINK_STATUS);\r\n        if (success == 0) {\r\n            // something went wrong with the link\r\n            throw (\"program filed to link:\" + gl.getProgramInfoLog (nativeProgram));\r\n        }\r\n\r\n        return nativeProgram;\r\n\t}\r\n\r\n\tpublic static function unload(gl : GL, nativeProgram : GLProgram):Void{\r\n\t\tgl.deleteProgram(nativeProgram);\t\r\n\t}\r\n\r\n}","package glow;\r\n\r\nimport box.gl.GL;\r\n\r\nclass GPUTexture{\r\n\r\n\tpublic static function upload(gpu : GPU, image) : GPUTexture{\r\n\r\n\t\tvar gl = gpu.gl;\r\n        var nativeTexture = gl.createTexture();\r\n        gl.bindTexture(GL.TEXTURE_2D, nativeTexture);\r\n        gl.texImage2DViaImage(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, image);\r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST); \r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE); //Prevents s-coordinate wrapping (repeating).\r\n\t\tgl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);//TODO make them as parameters\r\n        gl.bindTexture(GL.TEXTURE_2D, null); //TODO not neccesary ?\r\n\r\n        return new GPUTexture(gl,nativeTexture);\r\n\t}\r\n\r\n\tpublic var nativeTexture(default,null) : GLTexture;\r\n\tvar _gl : GL;\r\n\r\n\tprivate function new(gl : GL, nativeTexture : GLTexture){\r\n\t\t_gl = gl;\r\n\t\tthis.nativeTexture = nativeTexture;\r\n\t}\r\n}","package glow;\r\n\r\nimport box.gl.GL;\r\n\r\ntypedef AttributeData = {\r\n\tstride : Int,\r\n\tshaderLocation : Int\r\n}\r\n\r\n@:autoBuild(glow.macro.GPUProgramMacro.apply())\r\ninterface GPUProgram{\r\n\r\n}\r\n","package glow.macro;\r\n\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\nimport tink.macro.Functions;\r\nimport tink.macro.Member;\r\nusing tink.MacroApi;\r\nusing belt.MacroUtils;\r\n\r\nclass GPUBufferMacro{\r\n\r\n    static var bufferTypes : Map<String,ComplexType> = new Map();\r\n\r\n\tmacro static public function apply() : ComplexType{\r\n\r\n        var pos = Context.currentPos();\r\n\t\t\r\n\t\t//trace(\"Building from generic\");\r\n        var classType = \r\n\t\tswitch (Context.getLocalType()) {\r\n\t\t\tcase TInst(_,[t]):\r\n\t\t\t\tswitch(t){\r\n\t\t\t\t\tcase TInst(ref,_):\r\n\t\t\t\t\t\t ref.get();\r\n\t\t\t\t\tcase TMono(_): Context.error(\"need to specify the program type explicitely, no type inference\",pos); null; \t\r\n\t\t\t\t\tdefault: null;\r\n\t\t\t\t}\r\n\t\t\tdefault: null;\r\n\t\t}\r\n\r\n        if(null){\r\n            return null;\r\n        }\r\n\r\n        var metadata = classType.meta.get();\r\n\r\n        var shaderGroup = glow.macro.GPUProgramMacro.getShaderGroupFromMetadata(metadata);\r\n        \r\n        \r\n        return getBufferClassFromAttributes(shaderGroup.attributes);\r\n    }\r\n\r\n    static public function getBufferClassFromAttributes(attributes : Array<glow.GLSLShaderGroup.Attribute>) : ComplexType{\r\n        var pos = Context.currentPos();\r\n        var bufferClassPath = getBufferClassPathFromAttributes(attributes);\r\n\r\n        if (bufferTypes.exists(bufferClassPath.name)){\r\n            //trace(\"already generated \" + bufferClassPath.name);\r\n            return bufferTypes[bufferClassPath.name];\r\n        }\r\n\r\n\r\n        var fields : Array<Field> = [];\r\n\r\n\r\n        var getNumVerticesWrittenBody = macro {var max : Float = 0;};\r\n\r\n        var rewindBody = macro {\r\n        };\r\n        \r\n\r\n        var totalStride : Int = 0;\r\n        for (attribute in attributes){\r\n            var numValues = switch(attribute.type){\r\n                case Vec(_,num):num;\r\n                case Float:1;\r\n            }\r\n            totalStride+= numValues; //work for samme types attributes //TODO make it work for mixed types Int/Float...\r\n        }         \r\n\r\n        var stride = 0;   \r\n        for (attribute in attributes){\r\n            var attributeName = attribute.name;\r\n            var attributeMetadataName = \"_\" + attributeName + \"_bufferPosition\";\r\n\r\n            getNumVerticesWrittenBody.append(macro max = Math.max(max,$i{attributeMetadataName}));            \r\n\r\n            rewindBody.append(macro  $i{attributeMetadataName} = 0);\r\n\r\n            var numValues = switch(attribute.type){\r\n                case Vec(_,num):num;\r\n                case Float:1;\r\n            }\r\n\r\n            //////////////////////initialization //////////////////////////////////////////\r\n            \r\n            \r\n            fields.push({\r\n                name: attributeMetadataName,\r\n                pos: pos,\r\n                access: [APrivate],\r\n                kind: FVar(macro : Int,macro 0), //TODO -1 or 0 ? \r\n                });\r\n       \r\n\r\n            /////////////////////// write function ////////////////////////////////////////////\r\n            var body = macro {\r\n                uploaded = false;\r\n                if(_float32Array == null) {\r\n                    _float32Array = new box.util.Float32Array(512);\r\n                }\r\n                if (_float32Array.length <= $i{attributeMetadataName} * $v{totalStride} + $v{numValues}) {\r\n                    var newArray = new box.util.Float32Array(_float32Array.length * 2); //TODO inline growing in javascript\r\n                    //TODO : copy values\r\n                    _float32Array = newArray;\r\n                }\r\n\r\n\r\n                var pos : Int = $i{attributeMetadataName} * $v{totalStride} + $v{stride}; \r\n                $i{attributeMetadataName} ++;\r\n            }\r\n\r\n            for (i in 0...numValues){\r\n                var arg = \"v\" + i;\r\n                body.append(macro  _float32Array[pos+$v{i}] = $i{arg});\r\n            }\r\n\r\n            //trace(body.toString());\r\n\r\n            var arguments = [];\r\n            switch(attribute.type){\r\n                case glow.GLSL.AttributeType.Vec(vecType,num):\r\n                    for (i in 0...num){\r\n                        arguments.push(\r\n                        switch(vecType){\r\n                            case glow.GLSL.AttributeVecType.Float:\r\n                                Functions.toArg(\"v\"+i,macro : Float);\r\n                            case glow.GLSL.AttributeVecType.Int:\r\n                                Functions.toArg(\"v\"+i,macro : Int);\r\n                        }\r\n                        );\r\n                    }\r\n                case glow.GLSL.AttributeType.Float:\r\n                    arguments.push(\r\n                        Functions.toArg(\"v0\",macro : Float)\r\n                        ); \r\n            }\r\n            \r\n            fields.push(Member.method(\"write_\" + attribute.name,Functions.func(body,arguments)));            \r\n            stride+= numValues; //work for samme types attributes //TODO make it work for mixed types Int/Float...\r\n        }\r\n\r\n        getNumVerticesWrittenBody.append(macro return Std.int(max));\r\n        fields.push(Member.method(\"getNumVerticesWritten\",Functions.func(getNumVerticesWrittenBody)));        \r\n\r\n        fields.push(Member.method(\"rewind\",Functions.func(rewindBody)));\r\n\r\n\r\n        var typeDefinition : TypeDefinition = {\r\n            pos : pos,\r\n            pack : bufferClassPath.pack,\r\n            name : bufferClassPath.name,\r\n            kind :TDClass({pack :[\"glow\"], name: \"GPUBufferBase\"},[], false),\r\n            fields:fields\r\n        }\r\n        Context.defineType(typeDefinition);\r\n\r\n\r\n        var bufferType = TPath(bufferClassPath);\r\n        bufferTypes[bufferClassPath.name] = bufferType;\r\n        return bufferType;\r\n    } \r\n\r\n    static private function getBufferClassPathFromAttributes(attributes : Array<glow.GLSLShaderGroup.Attribute>): TypePath{\r\n        var bufferClassName =  \"Buffer_\";\r\n        for (attribute in attributes){\r\n            bufferClassName += attribute.name + attribute.type;\r\n        }\r\n        bufferClassName = StringTools.urlEncode(bufferClassName);\r\n        bufferClassName = StringTools.replace(bufferClassName,\"%\",\"_\");\r\n        \r\n        var bufferClassPath = {pack:[\"glow\", \"buffer\"],name:bufferClassName};\r\n\r\n        return bufferClassPath;\r\n    }\r\n\r\n    static private function generateFieldsFromTypeParameter(classBuilder : ClassBuilder):Void{\r\n\r\n        var pos = Context.currentPos();\r\n\r\n        var target = classBuilder.target;\r\n        if (target.isInterface){\r\n            return;\r\n        }\r\n\r\n       \r\n\r\n\t}\r\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n#if sys\n\nimport sys.net.Host;\nimport sys.net.Socket;\n\nprivate typedef AbstractSocket = {\n\tvar input(default,null) : haxe.io.Input;\n\tvar output(default,null) : haxe.io.Output;\n\tfunction connect( host : Host, port : Int ) : Void;\n\tfunction setTimeout( t : Float ) : Void;\n\tfunction write( str : String ) : Void;\n\tfunction close() : Void;\n\tfunction shutdown( read : Bool, write : Bool ) : Void;\n}\n\n#end\n\n/**\n\tThis class can be used to handle Http requests consistently across\n\tplatforms. There are two intended usages:\n\n\t- call haxe.Http.requestUrl(url) and receive the result as a String (not\n\tavailable on flash)\n\t- create a new haxe.Http(url), register your callbacks for onData, onError\n\tand onStatus, then call request().\n**/\nclass Http {\n\n\t/**\n\t\tThe url of `this` request. It is used only by the request() method and\n\t\tcan be changed in order to send the same request to different target\n\t\tUrls.\n\t**/\n\tpublic var url : String;\n\tpublic var responseData(default, null) : Null<String>;\n#if sys\n\tpublic var noShutdown : Bool;\n\tpublic var cnxTimeout : Float;\n\tpublic var responseHeaders : Map<String,String>;\n\tvar chunk_size : Null<Int>;\n\tvar chunk_buf : haxe.io.Bytes;\n\tvar file : { param : String, filename : String, io : haxe.io.Input, size : Int, mimeType : String };\n#elseif js\n\tpublic var async : Bool;\n#end\n\tvar postData : String;\n\tvar headers : List<{ header:String, value:String }>;\n\tvar params : List<{ param:String, value:String }>;\n\n\t#if sys\n\tpublic static var PROXY : { host : String, port : Int, auth : { user : String, pass : String } } = null;\n\t#end\n\n\t/**\n\t\tCreates a new Http instance with `url` as parameter.\n\n\t\tThis does not do a request until request() is called.\n\n\t\tIf `url` is null, the field url must be set to a value before making the\n\t\tcall to request(), or the result is unspecified.\n\n\t\t(Php) Https (SSL) connections are allowed only if the OpenSSL extension\n\t\tis enabled.\n\t**/\n\tpublic function new( url : String ) {\n\t\tthis.url = url;\n\t\theaders = new List<{ header:String, value:String }>();\n\t\tparams = new List<{ param:String, value:String }>();\n\n\t\t#if js\n\t\tasync = true;\n\t\t#elseif sys\n\t\tcnxTimeout = 10;\n\t\t#end\n\t\t#if php\n\t\tnoShutdown = ! untyped __call__('function_exists', 'stream_socket_shutdown');\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the header identified as `header` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setHeader( header : String, value : String ):Http {\n\t\theaders = Lambda.filter(headers, function(h) return h.header != header);\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addHeader( header : String, value : String ):Http {\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\t/**\n\t\tSets the parameter identified as `param` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setParameter( param : String, value : String ):Http {\n\t\tparams = Lambda.filter(params, function(p) return p.param != param);\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addParameter( param : String, value : String ):Http {\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\t#if !flash8\n\t/**\n\t\tSets the post data of `this` Http request to `data`.\n\n\t\tThere can only be one post data per request. Subsequent calls overwrite\n\t\tthe previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostData( data : String ):Http {\n\t\tpostData = data;\n\t\treturn this;\n\t}\n\t#end\n\n\t#if (js || flash9)\n\n\t#if js\n\tvar req:js.html.XMLHttpRequest;\n\t#elseif flash9\n\tvar req:flash.net.URLLoader;\n\t#end\n\n\t/**\n\t\tCancels `this` Http request if `request` has been called and a response\n\t\thas not yet been received.\n\t**/\n\tpublic function cancel()\n\t{\n\t\tif (req == null) return;\n\t\t#if js\n\t\treq.abort();\n\t\t#elseif flash9\n\t\treq.close();\n\t\t#end\n\t\treq = null;\n\t}\n\t#end\n\n\t/**\n\t\tSends `this` Http request to the Url specified by `this.url`.\n\n\t\tIf `post` is true, the request is sent as POST request, otherwise it is\n\t\tsent as GET request.\n\n\t\tDepending on the outcome of the request, this method calls the\n\t\tonStatus(), onError() or onData() callback functions.\n\n\t\tIf `this.url` is null, the result is unspecified.\n\n\t\tIf `this.url` is an invalid or inaccessible Url, the onError() callback\n\t\tfunction is called.\n\n\t\t(Js) If `this.async` is false, the callback functions are called before\n\t\tthis method returns.\n\t**/\n\tpublic function request( ?post : Bool ) : Void {\n\t\tvar me = this;\n\t#if js\n\t\tme.responseData = null;\n\t\tvar r = req = js.Browser.createXMLHttpRequest();\n\t\tvar onreadystatechange = function(_) {\n\t\t\tif( r.readyState != 4 )\n\t\t\t\treturn;\n\t\t\tvar s = try r.status catch( e : Dynamic ) null;\n\t\t\tif ( s != null ) {\n\t\t\t\t// If the request is local and we have data: assume a success (jQuery approach):\n\t\t\t\tvar protocol = js.Browser.location.protocol.toLowerCase();\n\t\t\t\tvar rlocalProtocol = ~/^(?:about|app|app-storage|.+-extension|file|res|widget):$/;\n\t\t\t\tvar isLocal = rlocalProtocol.match( protocol );\n\t\t\t\tif ( isLocal ) {\n\t\t\t\t\ts = r.responseText != null ? 200 : 404;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( s == untyped __js__(\"undefined\") )\n\t\t\t\ts = null;\n\t\t\tif( s != null )\n\t\t\t\tme.onStatus(s);\n\t\t\tif( s != null && s >= 200 && s < 400 ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onData(me.responseData = r.responseText);\n\t\t\t}\n\t\t\telse if ( s == null ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect or resolve host\");\n\t\t\t}\n\t\t\telse switch( s ) {\n\t\t\tcase 12029:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect to host\");\n\t\t\tcase 12007:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Unknown host\");\n\t\t\tdefault:\n\t\t\t\tme.req = null;\n\t\t\t\tme.responseData = r.responseText;\n\t\t\t\tme.onError(\"Http Error #\"+r.status);\n\t\t\t}\n\t\t};\n\t\tif( async )\n\t\t\tr.onreadystatechange = onreadystatechange;\n\t\tvar uri = postData;\n\t\tif( uri != null )\n\t\t\tpost = true;\n\t\telse for( p in params ) {\n\t\t\tif( uri == null )\n\t\t\t\turi = \"\";\n\t\t\telse\n\t\t\t\turi += \"&\";\n\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t}\n\t\ttry {\n\t\t\tif( post )\n\t\t\t\tr.open(\"POST\",url,async);\n\t\t\telse if( uri != null ) {\n\t\t\t\tvar question = url.split(\"?\").length <= 1;\n\t\t\t\tr.open(\"GET\",url+(if( question ) \"?\" else \"&\")+uri,async);\n\t\t\t\turi = null;\n\t\t\t} else\n\t\t\t\tr.open(\"GET\",url,async);\n\t\t} catch( e : Dynamic ) {\n\t\t\tme.req = null;\n\t\t\tonError(e.toString());\n\t\t\treturn;\n\t\t}\n\t\tif( !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") && post && postData == null )\n\t\t\tr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n\n\t\tfor( h in headers )\n\t\t\tr.setRequestHeader(h.header,h.value);\n\t\tr.send(uri);\n\t\tif( !async )\n\t\t\tonreadystatechange(null);\n\t#elseif flash9\n\t\tme.responseData = null;\n\t\tvar loader = req = new flash.net.URLLoader();\n\t\tloader.addEventListener( \"complete\", function(e) {\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onData( loader.data );\n\t\t});\n\t\tloader.addEventListener( \"httpStatus\", function(e:flash.events.HTTPStatusEvent){\n\t\t\t// on Firefox 1.5, Flash calls onHTTPStatus with 0 (!??)\n\t\t\tif( e.status != 0 )\n\t\t\t\tme.onStatus( e.status );\n\t\t});\n\t\tloader.addEventListener( \"ioError\", function(e:flash.events.IOErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onError(e.text);\n\t\t});\n\t\tloader.addEventListener( \"securityError\", function(e:flash.events.SecurityErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.onError(e.text);\n\t\t});\n\n\t\t// headers\n\t\tvar param = false;\n\t\tvar vars = new flash.net.URLVariables();\n\t\tfor( p in params ){\n\t\t\tparam = true;\n\t\t\tReflect.setField(vars,p.param,p.value);\n\t\t}\n\t\tvar small_url = url;\n\t\tif( param && !post ){\n\t\t\tvar k = url.split(\"?\");\n\t\t\tif( k.length > 1 ) {\n\t\t\t\tsmall_url = k.shift();\n\t\t\t\tvars.decode(k.join(\"?\"));\n\t\t\t}\n\t\t}\n\t\t// Bug in flash player 9 ???\n\t\tvar bug = small_url.split(\"xxx\");\n\n\t\tvar request = new flash.net.URLRequest( small_url );\n\t\tfor( h in headers )\n\t\t\trequest.requestHeaders.push( new flash.net.URLRequestHeader(h.header,h.value) );\n\n\t\tif( postData != null ) {\n\t\t\trequest.data = postData;\n\t\t\trequest.method = \"POST\";\n\t\t} else {\n\t\t\trequest.data = vars;\n\t\t\trequest.method = if( post ) \"POST\" else \"GET\";\n\t\t}\n\n\t\ttry {\n\t\t\tloader.load( request );\n\t\t}catch( e : Dynamic ){\n\t\t\tme.req = null;\n\t\t\tonError(\"Exception: \"+Std.string(e));\n\t\t}\n\t#elseif flash\n\t\tme.responseData = null;\n\t\tvar r = new flash.LoadVars();\n\t\t// on Firefox 1.5, onData is not called if host/port invalid (!)\n\t\tr.onData = function(data) {\n\t\t\tif( data == null ) {\n\t\t\t\tme.onError(\"Failed to retrieve url\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tme.responseData = data;\n\t\t\tme.onData(data);\n\t\t};\n\t\t#if flash8\n\t\tr.onHTTPStatus = function(status) {\n\t\t\t// on Firefox 1.5, Flash calls onHTTPStatus with 0 (!??)\n\t\t\tif( status != 0 )\n\t\t\t\tme.onStatus(status);\n\t\t};\n\t\tuntyped ASSetPropFlags(r,\"onHTTPStatus\",7);\n\t\t#end\n\t\tuntyped ASSetPropFlags(r,\"onData\",7);\n\t\tfor( h in headers )\n\t\t\tr.addRequestHeader(h.header,h.value);\n\t\tvar param = false;\n\t\tfor( p in params ) {\n\t\t\tparam = true;\n\t\t\tReflect.setField(r,p.param,p.value);\n\t\t}\n\t\tvar small_url = url;\n\t\tif( param && !post ) {\n\t\t\tvar k = url.split(\"?\");\n\t\t\tif( k.length > 1 ) {\n\t\t\t\tsmall_url = k.shift();\n\t\t\t\tr.decode(k.join(\"?\"));\n\t\t\t}\n\t\t}\n\t\tif( !r.sendAndLoad(small_url,r,if( param ) { if( post ) \"POST\" else \"GET\"; } else null) )\n\t\t\tonError(\"Failed to initialize Connection\");\n\t#elseif sys\n\t\tvar me = this;\n\t\tvar output = new haxe.io.BytesOutput();\n\t\tvar old = onError;\n\t\tvar err = false;\n\t\tonError = function(e) {\n\t\t\t#if neko\n\t\t\tme.responseData = neko.Lib.stringReference(output.getBytes());\n\t\t\t#else\n\t\t\tme.responseData = output.getBytes().toString();\n\t\t\t#end\n\t\t\terr = true;\n\t\t\told(e);\n\t\t}\n\t\tcustomRequest(post,output);\n\t\tif( !err )\n\t\t#if neko\n\t\t\tme.onData(me.responseData = neko.Lib.stringReference(output.getBytes()));\n\t\t#else\n\t\t\tme.onData(me.responseData = output.getBytes().toString());\n\t\t#end\n\t#end\n\t}\n\n#if sys\n\n\t/**\n      Note: Deprecated in 4.0\n\t **/\n\t@:noCompletion\n\tinline public function fileTransfert( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t    fileTransfer(argname, filename, file, size, mimeType);\n    }\n\n\tpublic function fileTransfer( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t\tthis.file = { param : argname, filename : filename, io : file, size : size, mimeType : mimeType };\n\t}\n\n\tpublic function customRequest( post : Bool, api : haxe.io.Output, ?sock : AbstractSocket, ?method : String  ) {\n\t\tthis.responseData = null;\n\t\tvar url_regexp = ~/^(https?:\\/\\/)?([a-zA-Z\\.0-9_-]+)(:[0-9]+)?(.*)$/;\n\t\tif( !url_regexp.match(url) ) {\n\t\t\tonError(\"Invalid URL\");\n\t\t\treturn;\n\t\t}\n\t\tvar secure = (url_regexp.matched(1) == \"https://\");\n\t\tif( sock == null ) {\n\t\t\tif( secure ) {\n\t\t\t\t#if php\n\t\t\t\tsock = new php.net.SslSocket();\n\t\t\t\t#elseif java\n\t\t\t\tsock = new java.net.SslSocket();\n\t\t\t\t#elseif hxssl\n\t\t\t\tsock = new neko.tls.Socket();\n\t\t\t\t#else\n\t\t\t\tthrow \"Https is only supported with -lib hxssl\";\n\t\t\t\t#end\n\t\t\t} else\n\t\t\t\tsock = new Socket();\n\t\t}\n\t\tvar host = url_regexp.matched(2);\n\t\tvar portString = url_regexp.matched(3);\n\t\tvar request = url_regexp.matched(4);\n\t\tif( request == \"\" )\n\t\t\trequest = \"/\";\n\t\tvar port = if ( portString == null || portString == \"\" ) secure ? 443 : 80 else Std.parseInt(portString.substr(1, portString.length - 1));\n\t\tvar data;\n\n\t\tvar multipart = (file != null);\n\t\tvar boundary = null;\n\t\tvar uri = null;\n\t\tif( multipart ) {\n\t\t\tpost = true;\n\t\t\tboundary = Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000));\n\t\t\twhile( boundary.length < 38 )\n\t\t\t\tboundary = \"-\" + boundary;\n\t\t\tvar b = new StringBuf();\n\t\t\tfor( p in params ) {\n\t\t\t\tb.add(\"--\");\n\t\t\t\tb.add(boundary);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\t\tb.add(p.param);\n\t\t\t\tb.add('\"');\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(p.value);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tb.add(\"--\");\n\t\t\tb.add(boundary);\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\tb.add(file.param);\n\t\t\tb.add('\"; filename=\"');\n\t\t\tb.add(file.filename);\n\t\t\tb.add('\"');\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add(\"Content-Type: \"+file.mimeType+\"\\r\\n\"+\"\\r\\n\");\n\t\t\turi = b.toString();\n\t\t} else {\n\t\t\tfor( p in params ) {\n\t\t\t\tif( uri == null )\n\t\t\t\t\turi = \"\";\n\t\t\t\telse\n\t\t\t\t\turi += \"&\";\n\t\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t\t}\n\t\t}\n\n\t\tvar b = new StringBuf();\n\t\tif( method != null ) {\n\t\t\tb.add(method);\n\t\t\tb.add(\" \");\n\t\t} else if( post )\n\t\t\tb.add(\"POST \");\n\t\telse\n\t\t\tb.add(\"GET \");\n\n\t\tif( Http.PROXY != null ) {\n\t\t\tb.add(\"http://\");\n\t\t\tb.add(host);\n\t\t\tif( port != 80 ) {\n\t\t\t\tb.add(\":\");\n\t\t\t\tb.add(port);\n\t\t\t}\n\t\t}\n\t\tb.add(request);\n\n\t\tif( !post && uri != null ) {\n\t\t\tif( request.indexOf(\"?\",0) >= 0 )\n\t\t\t\tb.add(\"&\");\n\t\t\telse\n\t\t\t\tb.add(\"?\");\n\t\t\tb.add(uri);\n\t\t}\n\t\tb.add(\" HTTP/1.1\\r\\nHost: \"+host+\"\\r\\n\");\n\t\tif( postData != null )\n\t\t\tb.add(\"Content-Length: \"+postData.length+\"\\r\\n\");\n\t\telse if( post && uri != null ) {\n\t\t\tif( multipart || !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") ) {\n\t\t\t\tb.add(\"Content-Type: \");\n\t\t\t\tif( multipart ) {\n\t\t\t\t\tb.add(\"multipart/form-data\");\n\t\t\t\t\tb.add(\"; boundary=\");\n\t\t\t\t\tb.add(boundary);\n\t\t\t\t} else\n\t\t\t\t\tb.add(\"application/x-www-form-urlencoded\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tif( multipart )\n\t\t\t\tb.add(\"Content-Length: \"+(uri.length+file.size+boundary.length+6)+\"\\r\\n\");\n\t\t\telse\n\t\t\t\tb.add(\"Content-Length: \"+uri.length+\"\\r\\n\");\n\t\t}\n\t\tfor( h in headers ) {\n\t\t\tb.add(h.header);\n\t\t\tb.add(\": \");\n\t\t\tb.add(h.value);\n\t\t\tb.add(\"\\r\\n\");\n\t\t}\n\t\tb.add(\"\\r\\n\");\n\t\tif( postData != null)\n\t\t\tb.add(postData);\n\t\telse if( post && uri != null )\n\t\t\tb.add(uri);\n\t\ttry {\n\t\t\tif( Http.PROXY != null )\n\t\t\t\tsock.connect(new Host(Http.PROXY.host),Http.PROXY.port);\n\t\t\telse\n\t\t\t\tsock.connect(new Host(host),port);\n\t\t\tsock.write(b.toString());\n\t\t\tif( multipart ) {\n\t\t\t\tvar bufsize = 4096;\n\t\t\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\t\t\twhile( file.size > 0 ) {\n\t\t\t\t\tvar size = if( file.size > bufsize ) bufsize else file.size;\n\t\t\t\t\tvar len = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlen = file.io.readBytes(buf,0,size);\n\t\t\t\t\t} catch( e : haxe.io.Eof ) break;\n\t\t\t\t\tsock.output.writeFullBytes(buf,0,len);\n\t\t\t\t\tfile.size -= len;\n\t\t\t\t}\n\t\t\t\tsock.write(\"\\r\\n\");\n\t\t\t\tsock.write(\"--\");\n\t\t\t\tsock.write(boundary);\n\t\t\t\tsock.write(\"--\");\n\t\t\t}\n\t\t\treadHttpResponse(api,sock);\n\t\t\tsock.close();\n\t\t} catch( e : Dynamic ) {\n\t\t\ttry sock.close() catch( e : Dynamic ) { };\n\t\t\tonError(Std.string(e));\n\t\t}\n\t}\n\n\tfunction readHttpResponse( api : haxe.io.Output, sock : AbstractSocket ) {\n\t\t// READ the HTTP header (until \\r\\n\\r\\n)\n\t\tvar b = new haxe.io.BytesBuffer();\n\t\tvar k = 4;\n\t\tvar s = haxe.io.Bytes.alloc(4);\n\t\tsock.setTimeout(cnxTimeout);\n\t\twhile( true ) {\n\t\t\tvar p = sock.input.readBytes(s,0,k);\n\t\t\twhile( p != k )\n\t\t\t\tp += sock.input.readBytes(s,p,k - p);\n\t\t\tb.addBytes(s,0,k);\n\t\t\tswitch( k ) {\n\t\t\tcase 1:\n\t\t\t\tvar c = s.get(0);\n\t\t\t\tif( c == 10 )\n\t\t\t\t\tbreak;\n\t\t\t\tif( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 2:\n\t\t\t\tvar c = s.get(1);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(0) == 13 )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk = 4;\n\t\t\t\t} else if( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 3:\n\t\t\t\tvar c = s.get(2);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(1) != 13 )\n\t\t\t\t\t\tk = 4;\n\t\t\t\t\telse if( s.get(0) != 10 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 1;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 3;\n\t\t\t\t} else\n\t\t\t\t\tk = 4;\n\t\t\tcase 4:\n\t\t\t\tvar c = s.get(3);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(2) != 13 )\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(2) != 10 || s.get(1) != 13 )\n\t\t\t\t\t\tk = 3;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#if neko\n\t\tvar headers = neko.Lib.stringReference(b.getBytes()).split(\"\\r\\n\");\n\t\t#else\n\t\tvar headers = b.getBytes().toString().split(\"\\r\\n\");\n\t\t#end\n\t\tvar response = headers.shift();\n\t\tvar rp = response.split(\" \");\n\t\tvar status = Std.parseInt(rp[1]);\n\t\tif( status == 0 || status == null )\n\t\t\tthrow \"Response status error\";\n\n\t\t// remove the two lasts \\r\\n\\r\\n\n\t\theaders.pop();\n\t\theaders.pop();\n\t\tresponseHeaders = new haxe.ds.StringMap();\n\t\tvar size = null;\n\t\tvar chunked = false;\n\t\tfor( hline in headers ) {\n\t\t\tvar a = hline.split(\": \");\n\t\t\tvar hname = a.shift();\n\t\t\tvar hval = if( a.length == 1 ) a[0] else a.join(\": \");\n\t\t\thval = StringTools.ltrim( StringTools.rtrim( hval ) );\n\t\t\tresponseHeaders.set(hname, hval);\n\t\t\tswitch(hname.toLowerCase())\n\t\t\t{\n\t\t\t\tcase \"content-length\":\n\t\t\t\t\tsize = Std.parseInt(hval);\n\t\t\t\tcase \"transfer-encoding\":\n\t\t\t\t\tchunked = (hval.toLowerCase() == \"chunked\");\n\t\t\t}\n\t\t}\n\n\t\tonStatus(status);\n\n\t\tvar chunk_re = ~/^([0-9A-Fa-f]+)[ ]*\\r\\n/m;\n\t\tchunk_size = null;\n\t\tchunk_buf = null;\n\n\t\tvar bufsize = 1024;\n\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\tif( size == null ) {\n\t\t\tif( !noShutdown )\n\t\t\t\tsock.shutdown(false,true);\n\t\t\ttry {\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,bufsize);\n\t\t\t\t\tif( chunked ) {\n\t\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else\n\t\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t}\n\t\t} else {\n\t\t\tapi.prepare(size);\n\t\t\ttry {\n\t\t\t\twhile( size > 0 ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,if( size > bufsize ) bufsize else size);\n\t\t\t\t\tif( chunked ) {\n\t\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else\n\t\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t\tsize -= len;\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t\tthrow \"Transfer aborted\";\n\t\t\t}\n\t\t}\n\t\tif( chunked && (chunk_size != null || chunk_buf != null) )\n\t\t\tthrow \"Invalid chunk\";\n\t\tif( status < 200 || status >= 400 )\n\t\t\tthrow \"Http Error #\"+status;\n\t\tapi.close();\n\t}\n\n\tfunction readChunk(chunk_re : EReg, api : haxe.io.Output, buf : haxe.io.Bytes, len ) {\n\t\tif( chunk_size == null ) {\n\t\t\tif( chunk_buf != null ) {\n\t\t\t\tvar b = new haxe.io.BytesBuffer();\n\t\t\t\tb.add(chunk_buf);\n\t\t\t\tb.addBytes(buf,0,len);\n\t\t\t\tbuf = b.getBytes();\n\t\t\t\tlen += chunk_buf.length;\n\t\t\t\tchunk_buf = null;\n\t\t\t}\n\t\t\t#if neko\n\t\t\tif( chunk_re.match(neko.Lib.stringReference(buf)) ) {\n\t\t\t#else\n\t\t\tif( chunk_re.match(buf.toString()) ) {\n\t\t\t#end\n\t\t\t\tvar p = chunk_re.matchedPos();\n\t\t\t\tif( p.len <= len ) {\n\t\t\t\t\tvar cstr = chunk_re.matched(1);\n\t\t\t\t\tchunk_size = Std.parseInt(\"0x\"+cstr);\n\t\t\t\t\tif( cstr == \"0\" ) {\n\t\t\t\t\t\tchunk_size = null;\n\t\t\t\t\t\tchunk_buf = null;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlen -= p.len;\n\t\t\t\t\treturn readChunk(chunk_re,api,buf.sub(p.len,len),len);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// prevent buffer accumulation\n\t\t\tif( len > 10 ) {\n\t\t\t\tonError(\"Invalid chunk\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tchunk_buf = buf.sub(0,len);\n\t\t\treturn true;\n\t\t}\n\t\tif( chunk_size > len ) {\n\t\t\tchunk_size -= len;\n\t\t\tapi.writeBytes(buf,0,len);\n\t\t\treturn true;\n\t\t}\n\t\tvar end = chunk_size + 2;\n\t\tif( len >= end ) {\n\t\t\tif( chunk_size > 0 )\n\t\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\t\tlen -= end;\n\t\t\tchunk_size = null;\n\t\t\tif( len == 0 )\n\t\t\t\treturn true;\n\t\t\treturn readChunk(chunk_re,api,buf.sub(end,len),len);\n\t\t}\n\t\tif( chunk_size > 0 )\n\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\tchunk_size -= len;\n\t\treturn true;\n\t}\n\n#end\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onData = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onData( data : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a request error, with `msg` containing the\n\t\terror description.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onError = function(msg) { // handle error }`\n\t**/\n\tpublic dynamic function onError( msg : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a Http status change, with `status` being the\n\t\tnew status.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onStatus = function(status) { // handle status }`\n\t**/\n\tpublic dynamic function onStatus( status : Int ) {\n\t}\n\n#if !flash\n\t/**\n\t\tMakes a synchronous request to `url`.\n\n\t\tThis creates a new Http instance and makes a GET request by calling its\n\t\trequest(false) method.\n\n\t\tIf `url` is null, the result is unspecified.\n\t**/\n\tpublic static function requestUrl( url : String ) : String {\n\t\tvar h = new Http(url);\n\t#if js\n\t\th.async = false;\n\t#end\n\t\tvar r = null;\n\t\th.onData = function(d){\n\t\t\tr = d;\n\t\t}\n\t\th.onError = function(e){\n\t\t\tthrow e;\n\t\t}\n\t\th.request(false);\n\t\treturn r;\n\t}\n#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tLog primarily provides the trace() method, which is invoked upon a call to\n\ttrace() in haxe code.\n**/\nclass Log {\n\n\t/**\n\t\tOutputs `v` in a platform-dependent way.\n\n\t\tThe second parameter `infos` is injected by the compiler and contains\n\t\tinformation about the position where the trace() call was made.\n\n\t\tThis method can be rebound to a custom function:\n\t\t\tvar oldTrace = haxe.Log.trace; // store old function\n\t\t\thaxe.Log.trace = function(v,infos) { // handle trace }\n\t\t\t...\n\t\t\thaxe.Log.trace = oldTrace;\n\n\t\tIf it is bound to null, subsequent calls to trace() will cause an\n\t\texception.\n\t**/\n\tpublic static dynamic function trace( v : Dynamic, ?infos : PosInfos ) : Void {\n\t\t#if flash\n\t\t\t#if (fdb || native_trace)\n\t\t\t\tvar pstr = infos == null ? \"(null)\" : infos.fileName + \":\" + infos.lineNumber;\n\t\t\t\tvar str = flash.Boot.__string_rec(v, \"\");\n\t\t\t\tif( infos != null && infos.customParams != null ) for( v in infos.customParams ) str += \",\" + flash.Boot.__string_rec(v, \"\");\n\t\t\t\tuntyped #if flash9 __global__[\"trace\"] #else __trace__ #end(pstr+\": \"+str);\n\t\t\t#else\n\t\t\t\tuntyped flash.Boot.__trace(v,infos);\n\t\t\t#end\n\t\t#elseif neko\n\t\t\tuntyped {\n\t\t\t\t$print(infos.fileName + \":\" + infos.lineNumber + \": \", v);\n\t\t\t\tif( infos.customParams != null ) for( v in infos.customParams ) $print(\",\", v);\n\t\t\t\t$print(\"\\n\");\n\t\t\t}\n\t\t#elseif js\n\t\t\tuntyped js.Boot.__trace(v,infos);\n\t\t#elseif php\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __call__('_hx_trace', v + extra, infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __call__('_hx_trace', v, infos);\n\t\t#elseif cpp\n\t\t\tif (infos!=null && infos.customParams!=null) {\n\t\t\t\tvar extra:String = \"\";\n\t\t\t\tfor( v in infos.customParams )\n\t\t\t\t\textra += \",\" + v;\n\t\t\t\tuntyped __trace(v + extra,infos);\n\t\t\t}\n\t\t\telse\n\t\t\t\tuntyped __trace(v,infos);\n\t\t#elseif (cs || java)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + infos.lineNumber + \": \" + v;\n\t\t\t\tif (infos.customParams != null)\n\t\t\t\t{\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\t#if cs\n\t\t\tcs.system.Console.WriteLine(str);\n\t\t\t#elseif java\n\t\t\tuntyped __java__(\"java.lang.System.out.println(str)\");\n\t\t\t#end\n\t\t#elseif (python)\n\t\t\tvar str:String = null;\n\t\t\tif (infos != null) {\n\t\t\t\tstr = infos.fileName + \":\" + Std.string(infos.lineNumber) + \": \" + v;\n\t\t\t\tif (infos.customParams != null) {\n\t\t\t\t\tstr += \",\" + infos.customParams.join(\",\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = v;\n\t\t\t}\n\t\t\tpython.Lib.println(str);\n\t\t#end\n\t}\n\n\t#if (flash || js)\n\t/**\n\t\tClears the trace output.\n\t**/\n\tpublic static dynamic function clear() : Void {\n\t\t#if flash\n\t\tuntyped flash.Boot.__clear_trace();\n\t\t#elseif js\n\t\tuntyped js.Boot.__clear_trace();\n\t\t#end\n\t}\n\t#end\n\n\t#if flash\n\t/**\n\t\tSets the color of the trace output to `rgb`.\n\t**/\n\tpublic static dynamic function setColor( rgb : Int ) {\n\t\tuntyped flash.Boot.__set_trace_color(rgb);\n\t}\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Serializer class can be used to encode values and objects into a String,\n\tfrom which the Unserializer class can recreate the original representation.\n\n\tThis class can be used in two ways:\n\n\t- create a new Serializer() instance, call its serialize() method with\n\t\tany argument and finally retrieve the String representation from\n\t\ttoString()\n\t- call Serializer.run() to obtain the serialized representation of a\n\t\tsingle argument\n\n\tSerialization is guaranteed to work for all haxe-defined classes, but may\n\tor may not work for instances of external/native classes.\n\n\tThe specification of the serialization format can be found here:\n\t`http://haxe.org/manual/serialization/format`\n**/\nclass Serializer {\n\n\t/**\n\t\tIf the values you are serializing can contain circular references or\n\t\tobjects repetitions, you should set USE_CACHE to true to prevent\n\t\tinfinite loops.\n\n\t\tThis may also reduce the size of serialization Strings at the expense of\n\t\tperformance.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useCache field.\n\t**/\n\tpublic static var USE_CACHE = false;\n\n\t/**\n\t\tUse constructor indexes for enums instead of names.\n\n\t\tThis may reduce the size of serialization Strings, but makes them less\n\t\tsuited for long-term storage: If constructors are removed or added from\n\t\tthe enum, the indices may no longer match.\n\n\t\tThis value can be changed for individual instances of Serializer by\n\t\tsetting their useEnumIndex field.\n\t**/\n\tpublic static var USE_ENUM_INDEX = false;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\tvar buf : StringBuf;\n\tvar cache : Array<Dynamic>;\n\tvar shash : haxe.ds.StringMap<Int>;\n\tvar scount : Int;\n\n\t/**\n\t\tThe individual cache setting for `this` Serializer instance.\n\n\t\tSee USE_CACHE for a complete description.\n\t**/\n\tpublic var useCache : Bool;\n\n\t/**\n\t\tThe individual enum index setting for `this` Serializer instance.\n\n\t\tSee USE_ENUM_INDEX for a complete description.\n\t**/\n\tpublic var useEnumIndex : Bool;\n\n\t/**\n\t\tCreates a new Serializer instance.\n\n\t\tSubsequent calls to `this.serialize` will append values to the\n\t\tinternal buffer of this String. Once complete, the contents can be\n\t\tretrieved through a call to `this.toString`.\n\n\t\tEach Serializer instance maintains its own cache if this.useCache` is\n\t\ttrue.\n\t**/\n\tpublic function new() {\n\t\tbuf = new StringBuf();\n\t\tcache = new Array();\n\t\tuseCache = USE_CACHE;\n\t\tuseEnumIndex = USE_ENUM_INDEX;\n\t\tshash = new haxe.ds.StringMap();\n\t\tscount = 0;\n\t}\n\n\t/**\n\t\tReturn the String representation of `this` Serializer.\n\n\t\tThe exact format specification can be found here:\n\t\thttp://haxe.org/manual/serialization/format\n\t**/\n\tpublic function toString() {\n\t\treturn buf.toString();\n\t}\n\n\t/* prefixes :\n\t\ta : array\n\t\tb : hash\n\t\tc : class\n\t\td : Float\n\t\te : reserved (float exp)\n\t\tf : false\n\t\tg : object end\n\t\th : array/list/hash end\n\t\ti : Int\n\t\tj : enum (by index)\n\t\tk : NaN\n\t\tl : list\n\t\tm : -Inf\n\t\tn : null\n\t\to : object\n\t\tp : +Inf\n\t\tq : haxe.ds.IntMap\n\t\tr : reference\n\t\ts : bytes (base64)\n\t\tt : true\n\t\tu : array nulls\n\t\tv : date\n\t\tw : enum\n\t\tx : exception\n\t\ty : urlencoded string\n\t\tz : zero\n\t\tM : haxe.ds.ObjectMap\n\t\tC : custom\n\t*/\n\n\tfunction serializeString( s : String ) {\n\t\tvar x = shash.get(s);\n\t\tif( x != null ) {\n\t\t\tbuf.add(\"R\");\n\t\t\tbuf.add(x);\n\t\t\treturn;\n\t\t}\n\t\tshash.set(s,scount++);\n\t\t#if old_serialize\n\t\t\t// no more support for -D old_serialize due to 'j' reuse\n\t\t\t#if error #end\n\t\t#end\n\t\tbuf.add(\"y\");\n\t\ts = StringTools.urlEncode(s);\n\t\tbuf.add(s.length);\n\t\tbuf.add(\":\");\n\t\tbuf.add(s);\n\t}\n\n\tfunction serializeRef(v) {\n\t\t#if js\n\t\tvar vt = untyped __js__(\"typeof\")(v);\n\t\t#end\n\t\tfor( i in 0...cache.length ) {\n\t\t\t#if js\n\t\t\tvar ci = cache[i];\n\t\t\tif( untyped __js__(\"typeof\")(ci) == vt && ci == v ) {\n\t\t\t#else\n\t\t\tif( cache[i] == v ) {\n\t\t\t#end\n\t\t\t\tbuf.add(\"r\");\n\t\t\t\tbuf.add(i);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tcache.push(v);\n\t\treturn false;\n\t}\n\n\t#if flash9\n\t// only the instance variables\n\n\tfunction serializeClassFields(v,c) {\n\t\tvar xml : flash.xml.XML = untyped __global__[\"flash.utils.describeType\"](c);\n\t\tvar vars = xml.factory[0].child(\"variable\");\n\t\tfor( i in 0...vars.length() ) {\n\t\t\tvar f = vars[i].attribute(\"name\").toString();\n\t\t\tif( !v.hasOwnProperty(f) )\n\t\t\t\tcontinue;\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\t#end\n\n\tfunction serializeFields(v) {\n\t\tfor( f in Reflect.fields(v) ) {\n\t\t\tserializeString(f);\n\t\t\tserialize(Reflect.field(v,f));\n\t\t}\n\t\tbuf.add(\"g\");\n\t}\n\n\t/**\n\t\tSerializes `v`.\n\n\t\tAll haxe-defined values and objects with the exception of functions can\n\t\tbe serialized. Serialization of external/native objects is not\n\t\tguaranteed to work.\n\n\t\tThe values of `this.useCache` and `this.useEnumIndex` may affect\n\t\tserialization output.\n\t**/\n\tpublic function serialize( v : Dynamic ) {\n\t\tswitch( Type.typeof(v) ) {\n\t\tcase TNull:\n\t\t\tbuf.add(\"n\");\n\t\tcase TInt:\n\t\t\tvar v : Int = v;\n\t\t\tif( v == 0 ) {\n\t\t\t\tbuf.add(\"z\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tbuf.add(\"i\");\n\t\t\tbuf.add(v);\n\t\tcase TFloat:\n\t\t\tvar v : Float = v;\n\t\t\tif( Math.isNaN(v) )\n\t\t\t\tbuf.add(\"k\");\n\t\t\telse if( !Math.isFinite(v) )\n\t\t\t\tbuf.add(if( v < 0 ) \"m\" else \"p\");\n\t\t\telse {\n\t\t\t\tbuf.add(\"d\");\n\t\t\t\tbuf.add(v);\n\t\t\t}\n\t\tcase TBool:\n\t\t\tbuf.add(if( v ) \"t\" else \"f\");\n\t\tcase TClass(c):\n\t\t\tif( #if neko untyped c.__is_String #else c == String #end ) {\n\t\t\t\tserializeString(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tswitch( #if (neko || cs || python) Type.getClassName(c) #else c #end ) {\n\t\t\tcase #if (neko || cs || python) \"Array\" #else cast Array #end:\n\t\t\t\tvar ucount = 0;\n\t\t\t\tbuf.add(\"a\");\n\t\t\t\t#if (flash9 || python)\n\t\t\t\tvar v : Array<Dynamic> = v;\n\t\t\t\t#end\n\t\t\t\tvar l = #if (neko || flash9 || php || cs || java || python) v.length #elseif cpp v.__length() #else v[untyped \"length\"] #end;\n\t\t\t\tfor( i in 0...l ) {\n\t\t\t\t\tif( v[i] == null )\n\t\t\t\t\t\tucount++;\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tucount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tserialize(v[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( ucount > 0 ) {\n\t\t\t\t\tif( ucount == 1 )\n\t\t\t\t\t\tbuf.add(\"n\");\n\t\t\t\t\telse {\n\t\t\t\t\t\tbuf.add(\"u\");\n\t\t\t\t\t\tbuf.add(ucount);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"List\" #else cast List #end:\n\t\t\t\tbuf.add(\"l\");\n\t\t\t\tvar v : List<Dynamic> = v;\n\t\t\t\tfor( i in v )\n\t\t\t\t\tserialize(i);\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"Date\" #else cast Date #end:\n\t\t\t\tvar d : Date = v;\n\t\t\t\tbuf.add(\"v\");\n\t\t\t\tbuf.add(d.getTime());\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.StringMap\" #else cast haxe.ds.StringMap #end:\n\t\t\t\tbuf.add(\"b\");\n\t\t\t\tvar v : haxe.ds.StringMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tserializeString(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.IntMap\" #else cast haxe.ds.IntMap #end:\n\t\t\t\tbuf.add(\"q\");\n\t\t\t\tvar v : haxe.ds.IntMap<Dynamic> = v;\n\t\t\t\tfor( k in v.keys() ) {\n\t\t\t\t\tbuf.add(\":\");\n\t\t\t\t\tbuf.add(k);\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.ds.ObjectMap\" #else cast haxe.ds.ObjectMap #end:\n\t\t\t\tbuf.add(\"M\");\n\t\t\t\tvar v : haxe.ds.ObjectMap<Dynamic,Dynamic> = v;\n\t\t\t\tfor ( k in v.keys() ) {\n\t\t\t\t\t#if (js || flash8 || neko)\n\t\t\t\t\tvar id = Reflect.field(k, \"__id__\");\n\t\t\t\t\tReflect.deleteField(k, \"__id__\");\n\t\t\t\t\tserialize(k);\n\t\t\t\t\tReflect.setField(k, \"__id__\", id);\n\t\t\t\t\t#else\n\t\t\t\t\tserialize(k);\n\t\t\t\t\t#end\n\t\t\t\t\tserialize(v.get(k));\n\t\t\t\t}\n\t\t\t\tbuf.add(\"h\");\n\t\t\tcase #if (neko || cs || python) \"haxe.io.Bytes\" #else cast haxe.io.Bytes #end:\n\t\t\t\tvar v : haxe.io.Bytes = v;\n\t\t\t\t#if neko\n\t\t\t\tvar chars = new String(base_encode(v.getData(),untyped BASE64.__s));\n\t\t\t\t#else\n\t\t\t\tvar i = 0;\n\t\t\t\tvar max = v.length - 2;\n\t\t\t\tvar charsBuf = new StringBuf();\n\t\t\t\tvar b64 = BASE64;\n\t\t\t\twhile( i < max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tvar b3 = v.get(i++);\n\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b2 << 2) | (b3 >> 6)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt(b3 & 63));\n\t\t\t\t}\n\t\t\t\tif( i == max ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tvar b2 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt(((b1 << 4) | (b2 >> 4)) & 63));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b2 << 2) & 63));\n\t\t\t\t} else if( i == max + 1 ) {\n\t\t\t\t\tvar b1 = v.get(i++);\n\t\t\t\t\tcharsBuf.add(b64.charAt(b1 >> 2));\n\t\t\t\t\tcharsBuf.add(b64.charAt((b1 << 4) & 63));\n\t\t\t\t}\n\t\t\t\tvar chars = charsBuf.toString();\n\t\t\t\t#end\n\t\t\t\tbuf.add(\"s\");\n\t\t\t\tbuf.add(chars.length);\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(chars);\n\t\t\tdefault:\n\t\t\t\tif( useCache ) cache.pop();\n\t\t\t\tif( #if flash9 try v.hxSerialize != null catch( e : Dynamic ) false #elseif (cs || java || python) Reflect.hasField(v, \"hxSerialize\") #else v.hxSerialize != null #end  ) {\n\t\t\t\t\tbuf.add(\"C\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\tv.hxSerialize(this);\n\t\t\t\t\tbuf.add(\"g\");\n\t\t\t\t} else {\n\t\t\t\t\tbuf.add(\"c\");\n\t\t\t\t\tserializeString(Type.getClassName(c));\n\t\t\t\t\tif( useCache ) cache.push(v);\n\t\t\t\t\t#if flash9\n\t\t\t\t\tserializeClassFields(v,c);\n\t\t\t\t\t#else\n\t\t\t\t\tserializeFields(v);\n\t\t\t\t\t#end\n\t\t\t\t}\n\t\t\t}\n\t\tcase TObject:\n\t\t\tif( useCache && serializeRef(v) )\n\t\t\t\treturn;\n\t\t\tbuf.add(\"o\");\n\t\t\tserializeFields(v);\n\t\tcase TEnum(e):\n\t\t\tif( useCache ) {\n\t\t\t\tif( serializeRef(v) )\n\t\t\t\t\treturn;\n\t\t\t\tcache.pop();\n\t\t\t}\n\t\t\tbuf.add(useEnumIndex?\"j\":\"w\");\n\t\t\tserializeString(Type.getEnumName(e));\n\t\t\t#if neko\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(new String(v.tag));\n\t\t\tbuf.add(\":\");\n\t\t\tif( v.args == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tvar l : Int = untyped __dollar__asize(v.args);\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(v.args[i]);\n\t\t\t}\n\t\t\t#elseif flash9\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tvar i : Int = v.index;\n\t\t\t\tbuf.add(i);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.params;\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif cpp\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.__Index());\n\t\t\t} else\n\t\t\t\tserializeString(v.__Tag());\n\t\t\tbuf.add(\":\");\n\t\t\tvar pl : Array<Dynamic> = v.__EnumParams();\n\t\t\tif( pl == null )\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(pl.length);\n\t\t\t\tfor( p in pl )\n\t\t\t\t\tserialize(p);\n\t\t\t}\n\t\t\t#elseif php\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v.index);\n\t\t\t} else\n\t\t\t\tserializeString(v.tag);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l : Int = untyped __call__(\"count\", v.params);\n\t\t\tif( l == 0 || v.params == null)\n\t\t\t\tbuf.add(0);\n\t\t\telse {\n\t\t\t\tbuf.add(l);\n\t\t\t\tfor( i in 0...l )\n\t\t\t\t\tserialize(untyped __field__(v, __php__(\"params\"), i));\n\t\t\t}\n\t\t\t#elseif (java || cs || python)\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(Type.enumIndex(v));\n\t\t\t} else\n\t\t\t\tserializeString(Type.enumConstructor(v));\n\t\t\tbuf.add(\":\");\n\t\t\tvar arr:Array<Dynamic> = Type.enumParameters(v);\n\t\t\tif (arr != null)\n\t\t\t{\n\t\t\t\tbuf.add(arr.length);\n\t\t\t\tfor (v in arr)\n\t\t\t\t\tserialize(v);\n\t\t\t} else {\n\t\t\t\tbuf.add(\"0\");\n\t\t\t}\n\n\t\t\t#else\n\t\t\tif( useEnumIndex ) {\n\t\t\t\tbuf.add(\":\");\n\t\t\t\tbuf.add(v[1]);\n\t\t\t} else\n\t\t\t\tserializeString(v[0]);\n\t\t\tbuf.add(\":\");\n\t\t\tvar l = v[untyped \"length\"];\n\t\t\tbuf.add(l - 2);\n\t\t\tfor( i in 2...l )\n\t\t\t\tserialize(v[i]);\n\t\t\t#end\n\t\t\tif( useCache ) cache.push(v);\n\t\tcase TFunction:\n\t\t\tthrow \"Cannot serialize function\";\n\t\tdefault:\n\t\t\t#if neko\n\t\t\tif( untyped (__i32__kind != null && __dollar__iskind(v,__i32__kind)) ) {\n\t\t\t\tbuf.add(\"i\");\n\t\t\t\tbuf.add(v);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t#end\n\t\t\tthrow \"Cannot serialize \"+Std.string(v);\n\t\t}\n\t}\n\n\tpublic function serializeException( e : Dynamic ) {\n\t\tbuf.add(\"x\");\n\t\t#if flash9\n\t\tif( untyped __is__(e,__global__[\"Error\"]) ) {\n\t\t\tvar e : flash.errors.Error = e;\n\t\t\tvar s = e.getStackTrace();\n\t\t\tif( s == null )\n\t\t\t\tserialize(e.message);\n\t\t\telse\n\t\t\t\tserialize(s);\n\t\t\treturn;\n\t\t}\n\t\t#end\n\t\tserialize(e);\n\t}\n\n\t/**\n\t\tSerializes `v` and returns the String representation.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tSerializer, serialize `v` into it and obtain the result through a call\n\t\tto toString().\n\t**/\n\tpublic static function run( v : Dynamic ) {\n\t\tvar s = new Serializer();\n\t\ts.serialize(v);\n\t\treturn s.toString();\n\t}\n\n\t#if neko\n\tstatic var base_encode = neko.Lib.load(\"std\",\"base_encode\",2);\n\t#end\n\n}\n\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash9\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif flash\n\t\t\tvar me = this;\n\t\t\tid = untyped _global[\"setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash9\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif flash\n\t\t\t\tuntyped _global[\"clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n@:noDoc\ntypedef TypeResolver = {\n\tfunction resolveClass( name : String ) : Class<Dynamic>;\n\tfunction resolveEnum( name : String ) : Enum<Dynamic>;\n}\n\n/**\n\tThe Unserializer class is the complement to the Serializer class. It parses\n\ta serialization String and creates objects from the contained data.\n\n\tThis class can be used in two ways:\n\n\t- create a new Unserializer() instance with a given serialization\n\t\tString, then call its unserialize() method until all values are\n\t\textracted\n\t- call Unserializer.run() to unserialize a single value from a given\n\t\tString\n**/\nclass Unserializer {\n\n\t/**\n\t\tThis value can be set to use custom type resolvers.\n\n\t\tA type resolver finds a Class or Enum instance from a given String. By\n\t\tdefault, the haxe Type Api is used.\n\n\t\tA type resolver must provide two methods:\n\n\t\t1. resolveClass(name:String):Class<Dynamic> is called to determine a\n\t\t\t\tClass from a class name\n\t\t2. resolveEnum(name:String):Enum<Dynamic> is called to determine an\n\t\t\t\tEnum from an enum name\n\n\t\tThis value is applied when a new Unserializer instance is created.\n\t\tChanging it afterwards has no effect on previously created instances.\n\t**/\n\tpublic static var DEFAULT_RESOLVER : TypeResolver = Type;\n\n\tstatic var BASE64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:\";\n\n\t#if !neko\n\tstatic var CODES = null;\n\n\tstatic function initCodes() {\n\t\tvar codes =\n\t\t\t#if flash9\n\t\t\t\tnew flash.utils.ByteArray();\n\t\t\t#else\n\t\t\t\tnew Array();\n\t\t\t#end\n\t\tfor( i in 0...BASE64.length )\n\t\t\tcodes[StringTools.fastCodeAt(BASE64,i)] = i;\n\t\treturn codes;\n\t}\n\t#end\n\n \tvar buf : String;\n \tvar pos : Int;\n \tvar length : Int;\n \tvar cache : Array<Dynamic>;\n \tvar scache : Array<String>;\n \tvar resolver : TypeResolver;\n \t#if neko\n \tvar upos : Int;\n \t#end\n\n\t/**\n\t\tCreates a new Unserializer instance, with its internal buffer\n\t\tinitialized to `buf`.\n\n\t\tThis does not parse `buf` immediately. It is parsed only when calls to\n\t\t`this.unserialize` are made.\n\n\t\tEach Unserializer instance maintains its own cache.\n\t**/\n \tpublic function new( buf : String ) {\n \t\tthis.buf = buf;\n \t\tlength = buf.length;\n \t\tpos = 0;\n \t\t#if neko\n \t\tupos = 0;\n \t\t#end\n \t\tscache = new Array();\n \t\tcache = new Array();\n\t\tvar r = DEFAULT_RESOLVER;\n\t\tif( r == null ) {\n\t\t\tr = Type;\n\t\t\tDEFAULT_RESOLVER = r;\n\t\t}\n \t\tsetResolver(r);\n \t}\n\n\t/**\n\t\tSets the type resolver of `this` Unserializer instance to `r`.\n\n\t\tIf `r` is null, a special resolver is used which returns null for all\n\t\tinput values.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function setResolver( r ) {\n\t\tif( r == null )\n\t\t\tresolver = {\n\t\t\t\tresolveClass : function(_) { return null; },\n\t\t\t\tresolveEnum : function(_) { return null; }\n\t\t\t};\n\t\telse\n\t\t\tresolver = r;\n\t}\n\n\t/**\n\t\tGets the type resolver of `this` Unserializer instance.\n\n\t\tSee DEFAULT_RESOLVER for more information on type resolvers.\n\t**/\n \tpublic function getResolver() {\n\t\treturn resolver;\n\t}\n\n\tinline function get(p) : Int {\n\t\treturn StringTools.fastCodeAt(buf, p);\n\t}\n\n \tfunction readDigits() {\n \t\tvar k = 0;\n \t\tvar s = false;\n \t\tvar fpos = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n\t\t\tif( StringTools.isEof(c) )\n\t\t\t\tbreak;\n \t\t\tif( c == \"-\".code ) {\n \t\t\t\tif( pos != fpos )\n \t\t\t\t\tbreak;\n \t\t\t\ts = true;\n \t\t\t\tpos++;\n \t\t\t\tcontinue;\n \t\t\t}\n \t\t\tif( c < \"0\".code || c > \"9\".code )\n \t\t\t\tbreak;\n \t\t\tk = k * 10 + (c - \"0\".code);\n \t\t\tpos++;\n \t\t}\n \t\tif( s )\n \t\t\tk *= -1;\n \t\treturn k;\n \t}\n\t\n\tfunction readFloat() {\n\t\tvar p1 = pos;\n \t\twhile( true ) {\n \t\t\tvar c = get(pos);\n \t\t\t// + - . , 0-9\n \t\t\tif( (c >= 43 && c < 58) || c == \"e\".code || c == \"E\".code )\n \t\t\t\tpos++;\n \t\t\telse\n \t\t\t\tbreak;\n \t\t}\n \t\treturn Std.parseFloat(buf.substr(p1,pos-p1));\n\t}\n\n\tfunction unserializeObject(o) {\n \t\twhile( true ) {\n \t\t\tif( pos >= length )\n \t\t\t\tthrow \"Invalid object\";\n \t\t\tif( get(pos) == \"g\".code )\n \t\t\t\tbreak;\n \t\t\tvar k = unserialize();\n \t\t\tif( !Std.is(k,String) )\n \t\t\t\tthrow \"Invalid object key\";\n \t\t\tvar v = unserialize();\n \t\t\tReflect.setField(o,k,v);\n \t\t}\n \t\tpos++;\n\t}\n\n\tfunction unserializeEnum( edecl, tag ) {\n\t\tif( get(pos++) != \":\".code )\n\t\t\tthrow \"Invalid enum format\";\n\t\tvar nargs = readDigits();\n\t\tif( nargs == 0 )\n\t\t\treturn Type.createEnum(edecl,tag);\n\t\tvar args = new Array();\n\t\twhile( nargs-- > 0 )\n\t\t\targs.push(unserialize());\n\t\treturn Type.createEnum(edecl,tag,args);\n\t}\n\n\t/**\n\t\tUnserializes the next part of `this` Unserializer instance and returns\n\t\tthe according value.\n\n\t\tThis function may call `this.resolver.resolveClass` to determine a\n\t\tClass from a String, and `this.resolver.resolveEnum` to determine an\n\t\tEnum from a String.\n\n\t\tIf `this` Unserializer instance contains no more or invalid data, an\n\t\texception is thrown.\n\n\t\tThis operation may fail on structurally valid data if a type cannot be\n\t\tresolved or if a field cannot be set. This can happen when unserializing\n\t\tStrings that were serialized on a different haxe target, in which the\n\t\tserialization side has to make sure not to include platform-specific\n\t\tdata.\n\n\t\tClasses are created from Type.createEmptyInstance, which means their\n\t\tconstructors are not called.\n\t**/\n \tpublic function unserialize() : Dynamic {\n \t\tswitch( get(pos++) ) {\n \t\tcase \"n\".code:\n \t\t\treturn null;\n \t\tcase \"t\".code:\n \t\t\treturn true;\n \t\tcase \"f\".code:\n \t\t\treturn false;\n \t\tcase \"z\".code:\n \t\t\treturn 0;\n \t\tcase \"i\".code:\n \t\t\treturn readDigits();\n \t\tcase \"d\".code:\n \t\t\treturn readFloat();\n\t\tcase \"y\".code:\n \t\t\tvar len = readDigits();\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n \t\t\t\tthrow \"Invalid string length\";\n\t\t\tvar s = buf.substr(pos,len);\n\t\t\tpos += len;\n\t\t\ts = StringTools.urlDecode(s);\n\t\t\tscache.push(s);\n\t\t\treturn s;\n \t\tcase \"k\".code:\n \t\t\treturn Math.NaN;\n \t\tcase \"m\".code:\n \t\t\treturn Math.NEGATIVE_INFINITY;\n \t\tcase \"p\".code:\n \t\t\treturn Math.POSITIVE_INFINITY;\n \t\tcase \"a\".code:\n\t\t\tvar buf = buf;\n \t\t\tvar a = new Array<Dynamic>();\n \t\t\tcache.push(a);\n \t\t\twhile( true ) {\n \t\t\t\tvar c = get(pos);\n \t\t\t\tif( c == \"h\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tbreak;\n\t\t\t\t}\n \t\t\t\tif( c == \"u\".code ) {\n\t\t\t\t\tpos++;\n \t\t\t\t\tvar n = readDigits();\n \t\t\t\t\ta[a.length+n-1] = null;\n \t\t\t\t} else\n \t\t\t\t\ta.push(unserialize());\n \t\t\t}\n \t\t\treturn a;\n \t\tcase \"o\".code:\n\t \t\tvar o = {};\n\t \t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n \t\tcase \"r\".code:\n \t\t\tvar n = readDigits();\n \t\t\tif( n < 0 || n >= cache.length )\n \t\t\t\tthrow \"Invalid reference\";\n \t\t\treturn cache[n];\n \t\tcase \"R\".code:\n\t\t\tvar n = readDigits();\n\t\t\tif( n < 0 || n >= scache.length )\n\t\t\t\tthrow \"Invalid string reference\";\n\t\t\treturn scache[n];\n \t\tcase \"x\".code:\n\t\t\tthrow unserialize();\n\t\tcase \"c\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\tunserializeObject(o);\n\t\t\treturn o;\n\t\tcase \"w\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tvar e = unserializeEnum(edecl, unserialize());\n\t\t\tcache.push(e);\n\t\t\treturn e;\n \t\tcase \"j\".code:\n\t\t\tvar name = unserialize();\n\t\t\tvar edecl = resolver.resolveEnum(name);\n\t\t\tif( edecl == null )\n\t\t\t\tthrow \"Enum not found \" + name;\n\t\t\tpos++; /* skip ':' */\n\t\t\tvar index = readDigits();\n\t\t\tvar tag = Type.getEnumConstructs(edecl)[index];\n\t\t\tif( tag == null )\n\t\t\t\tthrow \"Unknown enum index \"+name+\"@\"+index;\n\t\t\tvar e = unserializeEnum(edecl, tag);\n\t\t\tcache.push(e);\n\t\t\treturn e;\n\t\tcase \"l\".code:\n\t\t\tvar l = new List();\n\t\t\tcache.push(l);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code )\n\t\t\t\tl.add(unserialize());\n\t\t\tpos++;\n\t\t\treturn l;\n\t\tcase \"b\".code:\n\t\t\tvar h = new haxe.ds.StringMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"q\".code:\n\t\t\tvar h = new haxe.ds.IntMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\tvar c = get(pos++);\n\t\t\twhile( c == \":\".code ) {\n\t\t\t\tvar i = readDigits();\n\t\t\t\th.set(i,unserialize());\n\t\t\t\tc = get(pos++);\n\t\t\t}\n\t\t\tif( c != \"h\".code )\n\t\t\t\tthrow \"Invalid IntMap format\";\n\t\t\treturn h;\n\t\tcase \"M\".code:\n\t\t\tvar h = new haxe.ds.ObjectMap();\n\t\t\tcache.push(h);\n\t\t\tvar buf = buf;\n\t\t\twhile( get(pos) != \"h\".code ) {\n\t\t\t\tvar s = unserialize();\n\t\t\t\th.set(s,unserialize());\n\t\t\t}\n\t\t\tpos++;\n\t\t\treturn h;\n\t\tcase \"v\".code:\n\t\t\tvar d;\n\t\t\tif(\tget(pos) >= '0'.code && get(pos) <= '9'.code &&\n\t\t\t\tget(pos + 1) >= '0'.code && get(pos + 1) <= '9'.code &&\n\t\t\t\tget(pos + 2) >= '0'.code && get(pos + 2) <= '9'.code &&\n\t\t\t\tget(pos + 3) >= '0'.code && get(pos + 3) <= '9'.code &&\n\t\t\t\tget(pos + 4) == '-'.code\n\t\t\t\t) {\n\t\t\t\t// Included for backwards compatibility\n\t\t\t\td = Date.fromString(buf.substr(pos,19));\n\t\t\t\tpos += 19;\n\t\t\t} else\n\t\t\t\td = Date.fromTime(readFloat());\n\t\t\tcache.push(d);\n\t\t\treturn d;\n \t\tcase \"s\".code:\n \t\t\tvar len = readDigits();\n\t\t\tvar buf = buf;\n \t\t\tif( get(pos++) != \":\".code || length - pos < len )\n\t\t\t\tthrow \"Invalid bytes length\";\n\t\t\t#if neko\n\t\t\tvar bytes = haxe.io.Bytes.ofData( base_decode(untyped buf.substr(pos,len).__s,untyped BASE64.__s) );\n\t\t\t#else\n\t\t\tvar codes = CODES;\n\t\t\tif( codes == null ) {\n\t\t\t\tcodes = initCodes();\n\t\t\t\tCODES = codes;\n\t\t\t}\n\t\t\tvar i = pos;\n\t\t\tvar rest = len & 3;\n\t\t\tvar size = (len >> 2) * 3 + ((rest >= 2) ? rest - 1 : 0);\n\t\t\tvar max = i + (len - rest);\n\t\t\tvar bytes = haxe.io.Bytes.alloc(size);\n\t\t\tvar bpos = 0;\n\t\t\twhile( i < max ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\tvar c4 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c3 << 6) | c4);\n\t\t\t}\n\t\t\tif( rest >= 2 ) {\n\t\t\t\tvar c1 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tvar c2 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\tbytes.set(bpos++,(c1 << 2) | (c2 >> 4));\n\t\t\t\tif( rest == 3 ) {\n\t\t\t\t\tvar c3 = codes[StringTools.fastCodeAt(buf,i++)];\n\t\t\t\t\tbytes.set(bpos++,(c2 << 4) | (c3 >> 2));\n\t\t\t\t}\n\t\t\t}\n \t\t\t#end\n\t\t\tpos += len;\n\t\t\tcache.push(bytes);\n\t\t\treturn bytes;\n\t\tcase \"C\".code:\n\t \t\tvar name = unserialize();\n\t\t\tvar cl = resolver.resolveClass(name);\n\t\t\tif( cl == null )\n\t\t\t\tthrow \"Class not found \" + name;\n\t\t\tvar o : Dynamic = Type.createEmptyInstance(cl);\n\t\t\tcache.push(o);\n\t\t\to.hxUnserialize(this);\n\t\t\tif( get(pos++) != \"g\".code )\n\t\t\t\tthrow \"Invalid custom data\";\n\t\t\treturn o;\n \t\tdefault:\n \t\t}\n \t\tpos--;\n \t\tthrow (\"Invalid char \"+buf.charAt(pos)+\" at position \"+pos);\n \t}\n\n\t/**\n\t\tUnserializes `v` and returns the according value.\n\n\t\tThis is a convenience function for creating a new instance of\n\t\tUnserializer with `v` as buffer and calling its unserialize() method\n\t\tonce.\n\t**/\n\tpublic static function run( v : String ) : Dynamic {\n\t\treturn new Unserializer(v).unserialize();\n\t}\n\n\t#if neko\n\tstatic var base_decode = neko.Lib.load(\"std\",\"base_decode\",2);\n\t#end\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class IntMap<T> implements haxe.Constraints.IMap<Int,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : Int, value : T ) : Void {\n\t\tuntyped h[key] = value;\n\t}\n\n\tpublic function get( key : Int ) : Null<T> {\n\t\treturn untyped h[key];\n\t}\n\n\tpublic function exists( key : Int ) : Bool {\n\t\treturn untyped h.hasOwnProperty(key);\n\t}\n\n\tpublic function remove( key : Int ) : Bool {\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped  __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<Int> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key|0);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of h software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and h permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\npackage haxe.ds;\n\n@:coreApi\nclass ObjectMap<K:{ }, V> implements haxe.Constraints.IMap<K,V> {\n\n\tstatic var count = 0;\n\n\tstatic inline function assignId(obj: { } ):Int {\n\t\treturn untyped obj.__id__ = ++count;\n\t}\n\n\tstatic inline function getId(obj: { } ):Int {\n\t\treturn untyped obj.__id__;\n\t}\n\n\tvar h : { };\n\n\tpublic function new() : Void {\n\t\th = { };\n\t\tuntyped h.__keys__ = { };\n\t}\n\n\tpublic function set(key:K, value:V):Void untyped {\n\t\tvar id : Int = untyped key.__id__ || assignId(key);\n\t\th[id] = value;\n\t\th.__keys__[id] = key;\n\t}\n\n\tpublic inline function get(key:K):Null<V> {\n\t\treturn untyped h[getId(key)];\n\t}\n\n\tpublic inline function exists(key:K):Bool {\n\t\treturn untyped h.__keys__[getId(key)] != null;\n\t}\n\n\tpublic function remove( key : K ) : Bool {\n\t\tvar id = getId(key);\n\t\tif ( untyped h.__keys__[id] == null ) return false;\n\t\tuntyped  __js__(\"delete\")(h[id]);\n\t\tuntyped  __js__(\"delete\")(h.__keys__[id]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<K> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h.__keys__ ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(h.__keys__[key]);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<V> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[getId(i)]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(Std.string(i));\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\n\tpublic function new() : Void {\n\t\th = {};\n\t}\n\n\tpublic function set( key : String, value : T ) : Void {\n\t\tuntyped h[\"$\"+key] = value;\n\t}\n\n\tpublic function get( key : String ) : Null<T> {\n\t\treturn untyped h[\"$\"+key];\n\t}\n\n\tpublic function exists( key : String ) : Bool {\n\t\treturn untyped h.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tkey = \"$\"+key;\n\t\tif( untyped !h.hasOwnProperty(key) ) return false;\n\t\tuntyped __js__(\"delete\")(h[key]);\n\t\treturn true;\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\tvar a = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\ta.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn a.iterator();\n\t}\n\n\tpublic function iterator() : Iterator<T> {\n\t\treturn untyped {\n\t\t\tref : h,\n\t\t\tit : keys(),\n\t\t\thasNext : function() { return __this__.it.hasNext(); },\n\t\t\tnext : function() { var i = __this__.it.next(); return __this__.ref[\"$\"+i]; }\n\t\t};\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar it = keys();\n\t\tfor( i in it ) {\n\t\t\ts.add(i);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(i)));\n\t\t\tif( it.hasNext() )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.io;\nimport js.html.compat.Uint8Array;\n\n@:coreApi\nclass Bytes {\n\n\tpublic var length(default,null) : Int;\n\tvar b : BytesData;\n\tvar data : js.html.DataView;\n\n\tfunction new(length:Int,b:BytesData) {\n\t\tthis.length = length;\n\t\tthis.b = b;\n\t}\n\n\tpublic inline function get( pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n\tpublic inline function set( pos : Int, v : Int ) : Void {\n\t\tb[pos] = v & 0xFF; // the &0xFF is necessary for js.html.compat support\n\t}\n\n\tpublic function blit( pos : Int, src : Bytes, srcpos : Int, len : Int ) : Void {\n\t\tif( pos < 0 || srcpos < 0 || len < 0 || pos + len > length || srcpos + len > src.length ) throw Error.OutsideBounds;\n\t\tif( srcpos == 0 && len == src.length )\n\t\t\tb.set(src.b,pos);\n\t\telse\n\t\t\tb.set(src.b.subarray(srcpos,srcpos+len),pos);\n\t}\n\n\tpublic function fill( pos : Int, len : Int, value : Int ) : Void {\n\t\tfor( i in 0...len )\n\t\t\tset(pos++, value);\n\t}\n\n\tpublic function sub( pos : Int, len : Int ) : Bytes {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\treturn new Bytes(len,new BytesData(b.buffer.slice(pos+b.byteOffset,pos+b.byteOffset+len)));\n\t}\n\n\tpublic function compare( other : Bytes ) : Int {\n\t\tvar b1 = b;\n\t\tvar b2 = other.b;\n\t\tvar len = (length < other.length) ? length : other.length;\n\t\tfor( i in 0...len )\n\t\t\tif( b1[i] != b2[i] )\n\t\t\t\treturn b1[i] - b2[i];\n\t\treturn length - other.length;\n\t}\n\n\tinline function initData() : Void {\n\t\tif( data == null ) data = new js.html.DataView(b.buffer, b.byteOffset, b.byteLength);\n\t}\n\n\tpublic function getDouble( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat64(pos, true);\n\t}\n\n\tpublic function getFloat( pos : Int ) : Float {\n\t\tinitData();\n\t\treturn data.getFloat32(pos, true);\n\t}\n\n\tpublic function setDouble( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat64(pos, v, true);\n\t}\n\n\tpublic function setFloat( pos : Int, v : Float ) : Void {\n\t\tinitData();\n\t\tdata.setFloat32(pos, v, true);\n\t}\n\n\tpublic function getString( pos : Int, len : Int ) : String {\n\t\tif( pos < 0 || len < 0 || pos + len > length ) throw Error.OutsideBounds;\n\t\tvar s = \"\";\n\t\tvar b = b;\n\t\tvar fcc = String.fromCharCode;\n\t\tvar i = pos;\n\t\tvar max = pos+len;\n\t\t// utf8-decode and utf16-encode\n\t\twhile( i < max ) {\n\t\t\tvar c = b[i++];\n\t\t\tif( c < 0x80 ) {\n\t\t\t\tif( c == 0 ) break;\n\t\t\t\ts += fcc(c);\n\t\t\t} else if( c < 0xE0 )\n\t\t\t\ts += fcc( ((c & 0x3F) << 6) | (b[i++] & 0x7F) );\n\t\t\telse if( c < 0xF0 ) {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\ts += fcc( ((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (b[i++] & 0x7F) );\n\t\t\t} else {\n\t\t\t\tvar c2 = b[i++];\n\t\t\t\tvar c3 = b[i++];\n\t\t\t\tvar u = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (b[i++] & 0x7F);\n\t\t\t\t// surrogate pair\n\t\t\t\ts += fcc( (u >> 10) + 0xD7C0 );\n\t\t\t\ts += fcc( (u & 0x3FF) | 0xDC00 );\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t@:deprecated(\"readString is deprecated, use getString instead\")\n\t@:noCompletion\n\tpublic inline function readString(pos:Int, len:Int):String {\n\t\treturn getString(pos, len);\n\t}\n\n\tpublic function toString() : String {\n\t\treturn getString(0,length);\n\t}\n\n\tpublic function toHex() : String {\n\t\tvar s = new StringBuf();\n\t\tvar chars = [];\n\t\tvar str = \"0123456789abcdef\";\n\t\tfor( i in 0...str.length )\n\t\t\tchars.push(str.charCodeAt(i));\n\t\tfor( i in 0...length ) {\n\t\t\tvar c = get(i);\n\t\t\ts.addChar(chars[c >> 4]);\n\t\t\ts.addChar(chars[c & 15]);\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\tpublic inline function getData() : BytesData {\n\t\treturn b;\n\t}\n\n\tpublic static function alloc( length : Int ) : Bytes {\n\t\treturn new Bytes(length,new BytesData(length));\n\t}\n\n\tpublic static function ofString( s : String ) : Bytes {\n\t\tvar a = new Array();\n\t\t// utf16-decode and utf8-encode\n\t\tvar i = 0;\n\t\twhile( i < s.length ) {\n\t\t\tvar c : Int = StringTools.fastCodeAt(s,i++);\n\t\t\t// surrogate pair\n\t\t\tif( 0xD800 <= c && c <= 0xDBFF )\n\t\t\t    c = (c - 0xD7C0 << 10) | (StringTools.fastCodeAt(s,i++) & 0x3FF);\n\t\t\tif( c <= 0x7F )\n\t\t\t\ta.push(c);\n\t\t\telse if( c <= 0x7FF ) {\n\t\t\t\ta.push( 0xC0 | (c >> 6) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else if( c <= 0xFFFF ) {\n\t\t\t\ta.push( 0xE0 | (c >> 12) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t} else {\n\t\t\t\ta.push( 0xF0 | (c >> 18) );\n\t\t\t\ta.push( 0x80 | ((c >> 12) & 63) );\n\t\t\t\ta.push( 0x80 | ((c >> 6) & 63) );\n\t\t\t\ta.push( 0x80 | (c & 63) );\n\t\t\t}\n\t\t}\n\t\treturn new Bytes(a.length,new BytesData(a));\n\t}\n\n\tpublic static function ofData( b : BytesData ) : Bytes {\n\t\treturn new Bytes(b.length,b);\n\t}\n\n\tpublic inline static function fastGet( b : BytesData, pos : Int ) : Int {\n\t\treturn b[pos];\n\t}\n\n}\n","package howler;\n\n@:native(\"window.Howl\")\nextern class Howl {\n\tfunction new(options:HowlOptions):Void;\n\n\tfunction load():Howl;\n\n\t@:overload(function(urls:Array<String>):Howl {})\n\tfunction urls(urls:Array<String>):Array<String>;\n\n\tfunction play(?sprite:String, ?callBack:String -> Void):Howl;\n\n\tfunction pause(?id:String):Howl;\n\n\tfunction stop(?id:String):Howl;\n\n\tfunction mute(?id:String):Howl;\n\n\tfunction unmute(?id:String):Howl;\n\n\t@:overload(function(vol:Float, ?id:String):Howl {})\n\tfunction volume(vol:Float, ?id:String):Float;\n\n\t@:overload(function(loop:Bool):Howl {})\n\tfunction loop(loop:Bool):Bool;\n\n\t@:overload(function(sprite:SpriteParams):Howl {})\n\tfunction sprite(sprite:SpriteParams):Dynamic;\n\n\t@:overload(function(pos:Float, ?id:String):Howl {})\n\tfunction pos(pos:Float, ?id:String):Float;\n\n\t@:overload(function(x:Float, y:Float, z:Float, ?id:String):Howl {})\n\tfunction pos3d(x:Float, y:Float, z:Float, ?id:String):Array<Float>;\n\n\tfunction fade(f:Float, t:Float, len:Float, ?callBack:Void -> Void, ?id:String):Howl;\n\n\tfunction fadeIn(t:Float, len:Float, callBack:Void -> Void):Howl; // deprecated\n\n\tfunction fadeOut(t:Float, len:Float, callBack:Void -> Void, ?id:String):Howl; // deprecated\n\n\tfunction on(event:String, ?fn:Void -> Void):Howl;\n\n\tfunction off(event:String, ?fn:Void -> Void):Howl;\n\n\tfunction unload():Void;\n\n\t// Web Audio only\n\tfunction decodeAudioData(arraybuffer:js.html.ArrayBuffer, obj:Howl, url:String):String;\n\n\tfunction loadBuffer(obj:Howl, url:String):String;\n\n\tfunction loadSound(obj:Howl, buffer:js.html.audio.AudioBuffer):String;\n\n\tfunction refreshBuffer(obj:Howl, loop:Array<RefreshBufferLoopParams>, ?id:String):Void;\n}\n\ntypedef RefreshBufferLoopParams = { loop:Bool, pos:Float, duration:Float };\n\ntypedef SpriteParams = { offset:Int, duration:Int, ?loop:Bool }\n\nclass HowlOptions {\n\tpublic var autoplay:Bool = false;\n\tpublic var buffer:Bool = false;\n\tpublic var duration:Float;\n\tpublic var format:String = null;\n\tpublic var loop:Bool = false;\n\tpublic var sprite:Dynamic = {};\n\tpublic var src:String;\n\tpublic var pos3d:Array<Float>;\n\tpublic var volume:Float = 1;\n\tpublic var urls:Array<String> = [];\n\tpublic var rate:Float = 1;\n\tpublic var model:String = \"equalpower\";\n\tpublic var onload:Void -> Void;\n\tpublic var onloaderror:Void -> Void;\n\tpublic var onend:Void -> Void;\n\tpublic var onpause:Void -> Void;\n\tpublic var onplay:Void -> Void;\n\n\tpublic function new(?urls:Array<String>) {\n\t\tif (urls != null && urls.length > 0) this.urls = urls;\n\t}\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic inline function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"may_print_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class (with window or global):\n\tstatic function __resolveNativeClass(name:String) untyped {\n\t\tif (__js__(\"typeof window\") != \"undefined\")\n\t\t\treturn window[name];\n\t\telse\n\t\t\treturn global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\tpublic static var window(get, never):js.html.DOMWindow;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\tpublic static var document(get, never):js.html.Document;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tpublic static function get_supported() return untyped __js__(\"typeof window != \\\"undefined\\\"\");\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated, do not edit!\npackage js.html;\n\n/** DOM&nbsp;canvas elements expose the <code><a class=\"external\" href=\"http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement\" rel=\"external nofollow\" target=\"_blank\" title=\"http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement\">HTMLCanvasElement</a></code> interface, which provides properties and methods for manipulating the layout and presentation of canvas elements. The <code>HTMLCanvasElement</code> interface inherits the properties and methods of the <code><a rel=\"custom\" href=\"/api/js/html/Element\">element</a></code>\n object interface.<br><br>\nDocumentation for this class was provided by <a href=\"https://developer.mozilla.org/en/DOM/HTMLCanvasElement\">MDN</a>. */\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element\n{\n\t/** Reflects the \n\n<code><a rel=\"custom\" href=\"https://developer.mozilla.org/en/HTML/Element/canvas#attr-height\">height</a></code>\n HTML attribute, specifying the height of the coordinate space in CSS pixels. */\n\tvar height : Int;\n\n\t/** Reflects the \n\n<code><a rel=\"custom\" href=\"https://developer.mozilla.org/en/HTML/Element/canvas#attr-width\">width</a></code>\n HTML attribute, specifying the width of the coordinate space in CSS pixels. */\n\tvar width : Int;\n\n\tfunction getContext( contextId : String ) : Dynamic;\n\n\tfunction toDataURL( ?type : String ) : String;\n\n\t/** A typed shortcut for <code>getContext(\"2d\")</code>. */\n\tpublic inline function getContext2d() : CanvasRenderingContext2D { return cast getContext(\"2d\"); }\n\n\tpublic inline function getContextWebGL( ?attribs :js.html.webgl.ContextAttributes ) :js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :Dynamic ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = (untyped canvas).getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n@:keep\nclass ArrayBuffer {\n\n\tpublic var byteLength : Int;\n\tvar a : Array<Dynamic>;\n\t\n\tpublic function new( ?a : Dynamic ) {\n\t\tif( Std.is(a,Array) ) {\n\t\t\tthis.a = a;\n\t\t\tbyteLength = a.length;\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\t\n\tpublic function slice(begin,?end) {\n\t\treturn new ArrayBuffer(a.slice(begin,end));\n\t}\n\t\n\tstatic function sliceImpl(begin,?end) {\n\t\tvar u = new js.html.Uint8Array(untyped __js__('this'), begin, end == null ? null : end - begin);\n        var result = new js.html.ArrayBuffer(u.byteLength);\n        var resultArray = new js.html.Uint8Array(result);\n\t\tresultArray.set(u);\n        return result;\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar ArrayBuffer = __js__('typeof(window) != \"undefined\" && window.ArrayBuffer') || ArrayBuffer;\n\t\tif( ArrayBuffer.prototype.slice == null ) ArrayBuffer.prototype.slice = sliceImpl; // IE10\n\t}\n}","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js.html.compat;\n\n@:keep\nclass Uint8Array {\n\n\tstatic var BYTES_PER_ELEMENT = 1;\n\n\tstatic function _new( ?arg1 : Dynamic, ?offset : Int, ?length : Int ) {\n\t\tvar arr;\n\t\tif( untyped __typeof__(arg1) == 'number' ) {\n\t\t\tarr = new Array();\n\t\t\tfor( i in 0...arg1 )\n\t\t\t\tarr[i] = 0;\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else if( Std.is(arg1,ArrayBuffer) ) {\n\t\t\tvar buffer : ArrayBuffer = arg1;\n\t\t\tif( offset == null ) offset = 0;\n\t\t\tif( length == null ) length = buffer.byteLength - offset;\n\t\t\tif( offset == 0 )\n\t\t\t\tarr = cast @:privateAccess buffer.a;\n\t\t\telse\n\t\t\t\t// here we are losing the fact that we should reference the same data,\n\t\t\t\t// but I don't see another way to have this behaviour while keeping [] access\n\t\t\t\tarr = cast @:privateAccess buffer.a.slice(offset, offset+length);\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = offset;\n\t\t\t\tarr.buffer = buffer;\n\t\t\t}\n\t\t} else if( Std.is(arg1, Array) ) {\n\t\t\tarr = (arg1 : Array<Int>).copy();\n\t\t\tuntyped {\n\t\t\t\tarr.byteLength = arr.length;\n\t\t\t\tarr.byteOffset = 0;\n\t\t\t\tarr.buffer = new ArrayBuffer(arr);\n\t\t\t}\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t\tuntyped {\n\t\t\tarr.subarray = _subarray;\n\t\t\tarr.set = _set;\n\t\t}\n\t\treturn arr;\n\t}\n\n\tstatic function _set( ?arg : Dynamic, ?offset : Int ) {\n\t\tvar t : Dynamic = untyped __js__(\"this\");\n\t\tif( Std.is(arg.buffer,ArrayBuffer) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( arg.byteLength + offset > t.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...arg.byteLength )\n\t\t\t\tt[i + offset] = a[i];\n\t\t} else if( Std.is(arg,Array) ) {\n\t\t\tvar a : Array<Int> = arg;\n\t\t\tif( a.length + offset > t.byteLength )\n\t\t\t\tthrow \"set() outside of range\";\n\t\t\tfor( i in 0...a.length )\n\t\t\t\tt[i + offset] = a[i];\n\t\t} else\n\t\t\tthrow \"TODO\";\n\t}\n\n\tstatic function _subarray( start : Int, ?end : Int ) {\n\t\tvar t : Dynamic = untyped __js__(\"this\");\n\t\treturn _new(t.buffer, start + t.byteOffset, (end == null ? null : end - start));\n\t}\n\n\tstatic function __init__() untyped {\n\t\tvar Uint8Array = __js__('typeof(window) != \"undefined\" && window.Uint8Array') || _new;\n\t}\n\n}","package jsbox;\r\n\r\nimport box.gl.GL;\r\nimport js.html.CanvasElement;\r\n\r\nclass Window{\r\n\r\n        public var gl : GL;\r\n        var _canvas : CanvasElement;\r\n\r\n        public var width(get, null) : Float;\r\n        function get_width():Float{\r\n           return _canvas.clientWidth;\r\n        }\r\n        public var height(get, null) : Float;\r\n        function get_height():Float{\r\n           return _canvas.clientHeight;\r\n        }\r\n\r\n        static public function createWindow() : Window{\r\n        \treturn new Window();\r\n        }\r\n\r\n        public function resize(){\r\n            var width = _canvas.clientWidth;\r\n            var height = _canvas.clientHeight;\r\n            if (_canvas.width != width ||\r\n                _canvas.height != height) {\r\n                _canvas.width = width;\r\n                _canvas.height = height;\r\n            }\r\n        }\r\n\r\n        public function new(){\r\n        \t_canvas = js.Browser.document.createCanvasElement();\r\n\r\n        //assign the sizes\r\n        _canvas.style.width = \"100%\";\r\n        _canvas.style.height = \"100%\";\r\n\r\n        //make sure it displays nicely\r\n        _canvas.style.display = 'block';\r\n        _canvas.style.position = 'relative';\r\n        _canvas.style.margin = '0 auto 0 auto';\r\n        _canvas.style.background = '#000';\r\n\r\n        //add it to the document\r\n        js.Browser.document.body.appendChild(_canvas);\r\n        \tgl = new GL(_canvas.getContextWebGL({}));\r\n        }\r\n}","package jsbox.asset;\r\n\r\nimport box.asset.Image;\r\nimport js.html.Document;\r\n\r\n\r\n\r\nabstract Loader(Document){\r\n\t\r\n\tinline public function new(){\r\n\t\tthis = js.Browser.document;\r\n\t}\r\n\r\n\t//TODO macro embedding of Image ?\r\n\tinline public function loadImage(url : String, success : Image->Void, error : String -> Void):Void{\r\n\t\tvar image = new js.html.Image();\r\n\t\timage.onload = function(_){\r\n\t\t\tsuccess(image);\r\n\t\t}\r\n\t\timage.onerror = function(_){\r\n\t\t\terror(\"failed to load \" + url);\r\n\t\t}\r\n\t\timage.src = url;\r\n\t}\r\n\r\n\t//TODO macro embedding of Text\r\n\tinline public function loadText(url : String, success : String->Void, error : String -> Void):Void{\r\n\t\tvar http = new haxe.Http(url);\r\n\t\thttp.onData = success;\r\n\t\thttp.onError = error;\r\n\t\t//TODO ? http.onStatus = \r\n\t\thttp.request();\r\n\t}\r\n}","package jsbox.gl; \r\n\r\nimport box.asset.Image;\r\nimport js.html.webgl.RenderingContext;\r\n\r\nimport jsbox.util.ArrayBufferView;\r\nimport jsbox.util.Float32Array;\r\nimport jsbox.util.Int32Array;\r\n\r\n//TODO this file should be part of a library \"jsbox\" \r\n\r\ntypedef GLActiveInfo                = js.html.webgl.ActiveInfo;\r\ntypedef GLBuffer                    = js.html.webgl.Buffer;\r\ntypedef GLContextAttributes         = js.html.webgl.ContextAttributes;\r\ntypedef GLFramebuffer               = js.html.webgl.Framebuffer;\r\ntypedef GLProgram                   = js.html.webgl.Program;\r\ntypedef GLRenderbuffer              = js.html.webgl.Renderbuffer;\r\ntypedef GLShader                    = js.html.webgl.Shader;\r\ntypedef GLTexture                   = js.html.webgl.Texture;\r\ntypedef GLUniformLocation           = js.html.webgl.UniformLocation;\r\ntypedef GLShaderPrecisionFormat     = js.html.webgl.ShaderPrecisionFormat;\r\n\r\n\r\nabstract GL(RenderingContext) {\r\n\r\n\r\n\tinline public function new( webglCtx : RenderingContext){\r\n\t\tthis = webglCtx;\r\n\t}\r\n\r\n    /* ClearBufferMask */\r\n    public static inline var DEPTH_BUFFER_BIT               = 0x00000100;\r\n    public static inline var STENCIL_BUFFER_BIT             = 0x00000400;\r\n    public static inline var COLOR_BUFFER_BIT               = 0x00004000;\r\n\r\n    /* BeginMode */\r\n    public static inline var POINTS                         = 0x0000;\r\n    public static inline var LINES                          = 0x0001;\r\n    public static inline var LINE_LOOP                      = 0x0002;\r\n    public static inline var LINE_STRIP                     = 0x0003;\r\n    public static inline var TRIANGLES                      = 0x0004;\r\n    public static inline var TRIANGLE_STRIP                 = 0x0005;\r\n    public static inline var TRIANGLE_FAN                   = 0x0006;\r\n\r\n    /* AlphaFunction(not supported in ES20) */\r\n    /*      NEVER */\r\n    /*      LESS */\r\n    /*      EQUAL */\r\n    /*      LEQUAL */\r\n    /*      GREATER */\r\n    /*      NOTEQUAL */\r\n    /*      GEQUAL */\r\n    /*      ALWAYS */\r\n\r\n    /* BlendingFactorDest */\r\n    public static inline var ZERO                           = 0;\r\n    public static inline var ONE                            = 1;\r\n    public static inline var SRC_COLOR                      = 0x0300;\r\n    public static inline var ONE_MINUS_SRC_COLOR            = 0x0301;\r\n    public static inline var SRC_ALPHA                      = 0x0302;\r\n    public static inline var ONE_MINUS_SRC_ALPHA            = 0x0303;\r\n    public static inline var DST_ALPHA                      = 0x0304;\r\n    public static inline var ONE_MINUS_DST_ALPHA            = 0x0305;\r\n\r\n    /* BlendingFactorSrc */\r\n    /*      ZERO */\r\n    /*      ONE */\r\n    public static inline var DST_COLOR                      = 0x0306;\r\n    public static inline var ONE_MINUS_DST_COLOR            = 0x0307;\r\n    public static inline var SRC_ALPHA_SATURATE             = 0x0308;\r\n    /*      SRC_ALPHA */\r\n    /*      ONE_MINUS_SRC_ALPHA */\r\n    /*      DST_ALPHA */\r\n    /*      ONE_MINUS_DST_ALPHA */\r\n\r\n    /* BlendEquationSeparate */\r\n    public static inline var FUNC_ADD                       = 0x8006;\r\n    public static inline var BLEND_EQUATION                 = 0x8009;\r\n    public static inline var BLEND_EQUATION_RGB             = 0x8009;   /* same as BLEND_EQUATION */\r\n    public static inline var BLEND_EQUATION_ALPHA           = 0x883D;\r\n\r\n    /* BlendSubtract */\r\n    public static inline var FUNC_SUBTRACT                  = 0x800A;\r\n    public static inline var FUNC_REVERSE_SUBTRACT          = 0x800B;\r\n\r\n    /* Separate Blend Functions */\r\n    public static inline var BLEND_DST_RGB                  = 0x80C8;\r\n    public static inline var BLEND_SRC_RGB                  = 0x80C9;\r\n    public static inline var BLEND_DST_ALPHA                = 0x80CA;\r\n    public static inline var BLEND_SRC_ALPHA                = 0x80CB;\r\n    public static inline var CONSTANT_COLOR                 = 0x8001;\r\n    public static inline var ONE_MINUS_CONSTANT_COLOR       = 0x8002;\r\n    public static inline var CONSTANT_ALPHA                 = 0x8003;\r\n    public static inline var ONE_MINUS_CONSTANT_ALPHA       = 0x8004;\r\n    public static inline var BLEND_COLOR                    = 0x8005;\r\n\r\n    /* GLBuffer Objects */\r\n    public static inline var ARRAY_BUFFER                   = 0x8892;\r\n    public static inline var ELEMENT_ARRAY_BUFFER           = 0x8893;\r\n    public static inline var ARRAY_BUFFER_BINDING           = 0x8894;\r\n    public static inline var ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;\r\n\r\n    public static inline var STREAM_DRAW                    = 0x88E0;\r\n    public static inline var STATIC_DRAW                    = 0x88E4;\r\n    public static inline var DYNAMIC_DRAW                   = 0x88E8;\r\n\r\n    public static inline var BUFFER_SIZE                    = 0x8764;\r\n    public static inline var BUFFER_USAGE                   = 0x8765;\r\n\r\n    public static inline var CURRENT_VERTEX_ATTRIB          = 0x8626;\r\n\r\n    /* CullFaceMode */\r\n    public static inline var FRONT                          = 0x0404;\r\n    public static inline var BACK                           = 0x0405;\r\n    public static inline var FRONT_AND_BACK                 = 0x0408;\r\n\r\n    /* DepthFunction */\r\n    /*      NEVER */\r\n    /*      LESS */\r\n    /*      EQUAL */\r\n    /*      LEQUAL */\r\n    /*      GREATER */\r\n    /*      NOTEQUAL */\r\n    /*      GEQUAL */\r\n    /*      ALWAYS */\r\n\r\n    /* EnableCap */\r\n    /* TEXTURE_2D */\r\n    public static inline var CULL_FACE                      = 0x0B44;\r\n    public static inline var BLEND                          = 0x0BE2;\r\n    public static inline var DITHER                         = 0x0BD0;\r\n    public static inline var STENCIL_TEST                   = 0x0B90;\r\n    public static inline var DEPTH_TEST                     = 0x0B71;\r\n    public static inline var SCISSOR_TEST                   = 0x0C11;\r\n    public static inline var POLYGON_OFFSET_FILL            = 0x8037;\r\n    public static inline var SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;\r\n    public static inline var SAMPLE_COVERAGE                = 0x80A0;\r\n\r\n    /* ErrorCode */\r\n    public static inline var NO_ERROR                       = 0;\r\n    public static inline var INVALID_ENUM                   = 0x0500;\r\n    public static inline var INVALID_VALUE                  = 0x0501;\r\n    public static inline var INVALID_OPERATION              = 0x0502;\r\n    public static inline var OUT_OF_MEMORY                  = 0x0505;\r\n\r\n    /* FrontFaceDirection */\r\n    public static inline var CW                             = 0x0900;\r\n    public static inline var CCW                            = 0x0901;\r\n\r\n    /* GetPName */\r\n    public static inline var LINE_WIDTH                     = 0x0B21;\r\n    public static inline var ALIASED_POINT_SIZE_RANGE       = 0x846D;\r\n    public static inline var ALIASED_LINE_WIDTH_RANGE       = 0x846E;\r\n    public static inline var CULL_FACE_MODE                 = 0x0B45;\r\n    public static inline var FRONT_FACE                     = 0x0B46;\r\n    public static inline var DEPTH_RANGE                    = 0x0B70;\r\n    public static inline var DEPTH_WRITEMASK                = 0x0B72;\r\n    public static inline var DEPTH_CLEAR_VALUE              = 0x0B73;\r\n    public static inline var DEPTH_FUNC                     = 0x0B74;\r\n    public static inline var STENCIL_CLEAR_VALUE            = 0x0B91;\r\n    public static inline var STENCIL_FUNC                   = 0x0B92;\r\n    public static inline var STENCIL_FAIL                   = 0x0B94;\r\n    public static inline var STENCIL_PASS_DEPTH_FAIL        = 0x0B95;\r\n    public static inline var STENCIL_PASS_DEPTH_PASS        = 0x0B96;\r\n    public static inline var STENCIL_REF                    = 0x0B97;\r\n    public static inline var STENCIL_VALUE_MASK             = 0x0B93;\r\n    public static inline var STENCIL_WRITEMASK              = 0x0B98;\r\n    public static inline var STENCIL_BACK_FUNC              = 0x8800;\r\n    public static inline var STENCIL_BACK_FAIL              = 0x8801;\r\n    public static inline var STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;\r\n    public static inline var STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;\r\n    public static inline var STENCIL_BACK_REF               = 0x8CA3;\r\n    public static inline var STENCIL_BACK_VALUE_MASK        = 0x8CA4;\r\n    public static inline var STENCIL_BACK_WRITEMASK         = 0x8CA5;\r\n    public static inline var VIEWPORT                       = 0x0BA2;\r\n    public static inline var SCISSOR_BOX                    = 0x0C10;\r\n    /*      SCISSOR_TEST */\r\n    public static inline var COLOR_CLEAR_VALUE              = 0x0C22;\r\n    public static inline var COLOR_WRITEMASK                = 0x0C23;\r\n    public static inline var UNPACK_ALIGNMENT               = 0x0CF5;\r\n    public static inline var PACK_ALIGNMENT                 = 0x0D05;\r\n    public static inline var MAX_TEXTURE_SIZE               = 0x0D33;\r\n    public static inline var MAX_VIEWPORT_DIMS              = 0x0D3A;\r\n    public static inline var SUBPIXEL_BITS                  = 0x0D50;\r\n    public static inline var RED_BITS                       = 0x0D52;\r\n    public static inline var GREEN_BITS                     = 0x0D53;\r\n    public static inline var BLUE_BITS                      = 0x0D54;\r\n    public static inline var ALPHA_BITS                     = 0x0D55;\r\n    public static inline var DEPTH_BITS                     = 0x0D56;\r\n    public static inline var STENCIL_BITS                   = 0x0D57;\r\n    public static inline var POLYGON_OFFSET_UNITS           = 0x2A00;\r\n    /*      POLYGON_OFFSET_FILL */\r\n    public static inline var POLYGON_OFFSET_FACTOR          = 0x8038;\r\n    public static inline var TEXTURE_BINDING_2D             = 0x8069;\r\n    public static inline var SAMPLE_BUFFERS                 = 0x80A8;\r\n    public static inline var SAMPLES                        = 0x80A9;\r\n    public static inline var SAMPLE_COVERAGE_VALUE          = 0x80AA;\r\n    public static inline var SAMPLE_COVERAGE_INVERT         = 0x80AB;\r\n\r\n    /* GetTextureParameter */\r\n    /*      TEXTURE_MAG_FILTER */\r\n    /*      TEXTURE_MIN_FILTER */\r\n    /*      TEXTURE_WRAP_S */\r\n    /*      TEXTURE_WRAP_T */\r\n\r\n    public static inline var COMPRESSED_TEXTURE_FORMATS     = 0x86A3;\r\n\r\n    /* HintMode */\r\n    public static inline var DONT_CARE                      = 0x1100;\r\n    public static inline var FASTEST                        = 0x1101;\r\n    public static inline var NICEST                         = 0x1102;\r\n\r\n    /* HintTarget */\r\n    public static inline var GENERATE_MIPMAP_HINT            = 0x8192;\r\n\r\n    /* DataType */\r\n    public static inline var BYTE                           = 0x1400;\r\n    public static inline var UNSIGNED_BYTE                  = 0x1401;\r\n    public static inline var SHORT                          = 0x1402;\r\n    public static inline var UNSIGNED_SHORT                 = 0x1403;\r\n    public static inline var INT                            = 0x1404;\r\n    public static inline var UNSIGNED_INT                   = 0x1405;\r\n    public static inline var FLOAT                          = 0x1406;\r\n\r\n    /* PixelFormat */\r\n    public static inline var DEPTH_COMPONENT                = 0x1902;\r\n    public static inline var ALPHA                          = 0x1906;\r\n    public static inline var RGB                            = 0x1907;\r\n    public static inline var RGBA                           = 0x1908;\r\n    public static inline var LUMINANCE                      = 0x1909;\r\n    public static inline var LUMINANCE_ALPHA                = 0x190A;\r\n\r\n    /* PixelType */\r\n    /*      UNSIGNED_BYTE */\r\n    public static inline var UNSIGNED_SHORT_4_4_4_4         = 0x8033;\r\n    public static inline var UNSIGNED_SHORT_5_5_5_1         = 0x8034;\r\n    public static inline var UNSIGNED_SHORT_5_6_5           = 0x8363;\r\n\r\n    /* Shaders */\r\n    public static inline var FRAGMENT_SHADER                  = 0x8B30;\r\n    public static inline var VERTEX_SHADER                    = 0x8B31;\r\n    public static inline var MAX_VERTEX_ATTRIBS               = 0x8869;\r\n    public static inline var MAX_VERTEX_UNIFORM_VECTORS       = 0x8DFB;\r\n    public static inline var MAX_VARYING_VECTORS              = 0x8DFC;\r\n    public static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\r\n    public static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS   = 0x8B4C;\r\n    public static inline var MAX_TEXTURE_IMAGE_UNITS          = 0x8872;\r\n    public static inline var MAX_FRAGMENT_UNIFORM_VECTORS     = 0x8DFD;\r\n    public static inline var SHADER_TYPE                      = 0x8B4F;\r\n    public static inline var DELETE_STATUS                    = 0x8B80;\r\n    public static inline var LINK_STATUS                      = 0x8B82;\r\n    public static inline var VALIDATE_STATUS                  = 0x8B83;\r\n    public static inline var ATTACHED_SHADERS                 = 0x8B85;\r\n    public static inline var ACTIVE_UNIFORMS                  = 0x8B86;\r\n    public static inline var ACTIVE_ATTRIBUTES                = 0x8B89;\r\n    public static inline var SHADING_LANGUAGE_VERSION         = 0x8B8C;\r\n    public static inline var CURRENT_PROGRAM                  = 0x8B8D;\r\n\r\n    /* StencilFunction */\r\n    public static inline var NEVER                          = 0x0200;\r\n    public static inline var LESS                           = 0x0201;\r\n    public static inline var EQUAL                          = 0x0202;\r\n    public static inline var LEQUAL                         = 0x0203;\r\n    public static inline var GREATER                        = 0x0204;\r\n    public static inline var NOTEQUAL                       = 0x0205;\r\n    public static inline var GEQUAL                         = 0x0206;\r\n    public static inline var ALWAYS                         = 0x0207;\r\n\r\n    /* StencilOp */\r\n    /*      ZERO */\r\n    public static inline var KEEP                           = 0x1E00;\r\n    public static inline var REPLACE                        = 0x1E01;\r\n    public static inline var INCR                           = 0x1E02;\r\n    public static inline var DECR                           = 0x1E03;\r\n    public static inline var INVERT                         = 0x150A;\r\n    public static inline var INCR_WRAP                      = 0x8507;\r\n    public static inline var DECR_WRAP                      = 0x8508;\r\n\r\n    /* StringName */\r\n    public static inline var VENDOR                         = 0x1F00;\r\n    public static inline var RENDERER                       = 0x1F01;\r\n    public static inline var VERSION                        = 0x1F02;\r\n\r\n    /* TextureMagFilter */\r\n    public static inline var NEAREST                        = 0x2600;\r\n    public static inline var LINEAR                         = 0x2601;\r\n\r\n    /* TextureMinFilter */\r\n    /*      NEAREST */\r\n    /*      LINEAR */\r\n    public static inline var NEAREST_MIPMAP_NEAREST         = 0x2700;\r\n    public static inline var LINEAR_MIPMAP_NEAREST          = 0x2701;\r\n    public static inline var NEAREST_MIPMAP_LINEAR          = 0x2702;\r\n    public static inline var LINEAR_MIPMAP_LINEAR           = 0x2703;\r\n\r\n    /* TextureParameterName */\r\n    public static inline var TEXTURE_MAG_FILTER             = 0x2800;\r\n    public static inline var TEXTURE_MIN_FILTER             = 0x2801;\r\n    public static inline var TEXTURE_WRAP_S                 = 0x2802;\r\n    public static inline var TEXTURE_WRAP_T                 = 0x2803;\r\n\r\n    /* TextureTarget */\r\n    public static inline var TEXTURE_2D                     = 0x0DE1;\r\n    public static inline var TEXTURE                        = 0x1702;\r\n\r\n    public static inline var TEXTURE_CUBE_MAP               = 0x8513;\r\n    public static inline var TEXTURE_BINDING_CUBE_MAP       = 0x8514;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;\r\n    public static inline var MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;\r\n\r\n    /* TextureUnit */\r\n    public static inline var TEXTURE0                       = 0x84C0;\r\n    public static inline var TEXTURE1                       = 0x84C1;\r\n    public static inline var TEXTURE2                       = 0x84C2;\r\n    public static inline var TEXTURE3                       = 0x84C3;\r\n    public static inline var TEXTURE4                       = 0x84C4;\r\n    public static inline var TEXTURE5                       = 0x84C5;\r\n    public static inline var TEXTURE6                       = 0x84C6;\r\n    public static inline var TEXTURE7                       = 0x84C7;\r\n    public static inline var TEXTURE8                       = 0x84C8;\r\n    public static inline var TEXTURE9                       = 0x84C9;\r\n    public static inline var TEXTURE10                      = 0x84CA;\r\n    public static inline var TEXTURE11                      = 0x84CB;\r\n    public static inline var TEXTURE12                      = 0x84CC;\r\n    public static inline var TEXTURE13                      = 0x84CD;\r\n    public static inline var TEXTURE14                      = 0x84CE;\r\n    public static inline var TEXTURE15                      = 0x84CF;\r\n    public static inline var TEXTURE16                      = 0x84D0;\r\n    public static inline var TEXTURE17                      = 0x84D1;\r\n    public static inline var TEXTURE18                      = 0x84D2;\r\n    public static inline var TEXTURE19                      = 0x84D3;\r\n    public static inline var TEXTURE20                      = 0x84D4;\r\n    public static inline var TEXTURE21                      = 0x84D5;\r\n    public static inline var TEXTURE22                      = 0x84D6;\r\n    public static inline var TEXTURE23                      = 0x84D7;\r\n    public static inline var TEXTURE24                      = 0x84D8;\r\n    public static inline var TEXTURE25                      = 0x84D9;\r\n    public static inline var TEXTURE26                      = 0x84DA;\r\n    public static inline var TEXTURE27                      = 0x84DB;\r\n    public static inline var TEXTURE28                      = 0x84DC;\r\n    public static inline var TEXTURE29                      = 0x84DD;\r\n    public static inline var TEXTURE30                      = 0x84DE;\r\n    public static inline var TEXTURE31                      = 0x84DF;\r\n    public static inline var ACTIVE_TEXTURE                 = 0x84E0;\r\n\r\n    /* TextureWrapMode */\r\n    public static inline var REPEAT                         = 0x2901;\r\n    public static inline var CLAMP_TO_EDGE                  = 0x812F;\r\n    public static inline var MIRRORED_REPEAT                = 0x8370;\r\n\r\n    /* Uniform Types */\r\n    public static inline var FLOAT_VEC2                     = 0x8B50;\r\n    public static inline var FLOAT_VEC3                     = 0x8B51;\r\n    public static inline var FLOAT_VEC4                     = 0x8B52;\r\n    public static inline var INT_VEC2                       = 0x8B53;\r\n    public static inline var INT_VEC3                       = 0x8B54;\r\n    public static inline var INT_VEC4                       = 0x8B55;\r\n    public static inline var BOOL                           = 0x8B56;\r\n    public static inline var BOOL_VEC2                      = 0x8B57;\r\n    public static inline var BOOL_VEC3                      = 0x8B58;\r\n    public static inline var BOOL_VEC4                      = 0x8B59;\r\n    public static inline var FLOAT_MAT2                     = 0x8B5A;\r\n    public static inline var FLOAT_MAT3                     = 0x8B5B;\r\n    public static inline var FLOAT_MAT4                     = 0x8B5C;\r\n    public static inline var SAMPLER_2D                     = 0x8B5E;\r\n    public static inline var SAMPLER_CUBE                   = 0x8B60;\r\n\r\n    /* Vertex Arrays */\r\n    public static inline var VERTEX_ATTRIB_ARRAY_ENABLED        = 0x8622;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_SIZE           = 0x8623;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_STRIDE         = 0x8624;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_TYPE           = 0x8625;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED     = 0x886A;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_POINTER        = 0x8645;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\r\n\r\n    /* Point Size */\r\n    public static inline var VERTEX_PROGRAM_POINT_SIZE       = 0x8642;\r\n    public static inline var POINT_SPRITE                    = 0x8861;\r\n\r\n    /* GLShader Source */\r\n    public static inline var COMPILE_STATUS                 = 0x8B81;\r\n\r\n    /* GLShader Precision-Specified Types */\r\n    public static inline var LOW_FLOAT                      = 0x8DF0;\r\n    public static inline var MEDIUM_FLOAT                   = 0x8DF1;\r\n    public static inline var HIGH_FLOAT                     = 0x8DF2;\r\n    public static inline var LOW_INT                        = 0x8DF3;\r\n    public static inline var MEDIUM_INT                     = 0x8DF4;\r\n    public static inline var HIGH_INT                       = 0x8DF5;\r\n\r\n    /* GLFramebuffer Object. */\r\n    public static inline var FRAMEBUFFER                    = 0x8D40;\r\n    public static inline var RENDERBUFFER                   = 0x8D41;\r\n\r\n    public static inline var RGBA4                          = 0x8056;\r\n    public static inline var RGB5_A1                        = 0x8057;\r\n    public static inline var RGB565                         = 0x8D62;\r\n    public static inline var DEPTH_COMPONENT16              = 0x81A5;\r\n    public static inline var STENCIL_INDEX                  = 0x1901;\r\n    public static inline var STENCIL_INDEX8                 = 0x8D48;\r\n    public static inline var DEPTH_STENCIL                  = 0x84F9;\r\n\r\n    public static inline var RENDERBUFFER_WIDTH             = 0x8D42;\r\n    public static inline var RENDERBUFFER_HEIGHT            = 0x8D43;\r\n    public static inline var RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;\r\n    public static inline var RENDERBUFFER_RED_SIZE          = 0x8D50;\r\n    public static inline var RENDERBUFFER_GREEN_SIZE        = 0x8D51;\r\n    public static inline var RENDERBUFFER_BLUE_SIZE         = 0x8D52;\r\n    public static inline var RENDERBUFFER_ALPHA_SIZE        = 0x8D53;\r\n    public static inline var RENDERBUFFER_DEPTH_SIZE        = 0x8D54;\r\n    public static inline var RENDERBUFFER_STENCIL_SIZE      = 0x8D55;\r\n\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           = 0x8CD0;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           = 0x8CD1;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         = 0x8CD2;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\r\n\r\n    public static inline var COLOR_ATTACHMENT0              = 0x8CE0;\r\n    public static inline var DEPTH_ATTACHMENT               = 0x8D00;\r\n    public static inline var STENCIL_ATTACHMENT             = 0x8D20;\r\n    public static inline var DEPTH_STENCIL_ATTACHMENT       = 0x821A;\r\n\r\n    public static inline var NONE                           = 0;\r\n\r\n    public static inline var FRAMEBUFFER_COMPLETE                      = 0x8CD5;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT         = 0x8CD6;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS         = 0x8CD9;\r\n    public static inline var FRAMEBUFFER_UNSUPPORTED                   = 0x8CDD;\r\n\r\n    public static inline var FRAMEBUFFER_BINDING            = 0x8CA6;\r\n    public static inline var RENDERBUFFER_BINDING           = 0x8CA7;\r\n    public static inline var MAX_RENDERBUFFER_SIZE          = 0x84E8;\r\n\r\n    public static inline var INVALID_FRAMEBUFFER_OPERATION  = 0x0506;\r\n\r\n    /* WebGL-specific enums */\r\n    public static inline var UNPACK_FLIP_Y_WEBGL            = 0x9240;\r\n    public static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\r\n    public static inline var CONTEXT_LOST_WEBGL             = 0x9242;\r\n    public static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\r\n    public static inline var BROWSER_DEFAULT_WEBGL          = 0x9244;\r\n\r\n\r\n    public static var version(get_version, null):Int;\r\n    static function get_version():Int { return RenderingContext.VERSION; }\r\n    \r\n\r\n    public inline function versionString():String {\r\n\r\n        var ver = this.getParameter(VERSION);\r\n        var slver = this.getParameter(SHADING_LANGUAGE_VERSION);\r\n        var ren = this.getParameter(RENDERER);\r\n        var ven = this.getParameter(VENDOR);\r\n\r\n        return \"/ \" + ver + \" / \" + slver + \" / \" + ren + \" / \" + ven + \" /\";\r\n    }\r\n\r\n\r\n    public inline function activeTexture(texture:Int):Void {\r\n\r\n        this.activeTexture(texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function attachShader(program:GLProgram, shader:GLShader):Void {\r\n\r\n        this.attachShader(program, shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindAttribLocation(program:GLProgram, index:Int, name:String):Void {\r\n\r\n        this.bindAttribLocation(program, index, name);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindBuffer(target:Int, buffer:GLBuffer):Void {\r\n\r\n        this.bindBuffer(target, buffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindFramebuffer(target:Int, framebuffer:GLFramebuffer):Void {\r\n\r\n        this.bindFramebuffer(target, framebuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindRenderbuffer(target:Int, renderbuffer:GLRenderbuffer):Void {\r\n\r\n        this.bindRenderbuffer(target, renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindTexture(target:Int, texture:GLTexture):Void {\r\n\r\n        this.bindTexture(target, texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendColor(red:Float, green:Float, blue:Float, alpha:Float):Void {\r\n\r\n        this.blendColor(red, green, blue, alpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendEquation(mode:Int):Void {\r\n\r\n        this.blendEquation(mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendEquationSeparate(modeRGB:Int, modeAlpha:Int):Void {\r\n\r\n        this.blendEquationSeparate(modeRGB, modeAlpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendFunc(sfactor:Int, dfactor:Int):Void {\r\n\r\n        this.blendFunc(sfactor, dfactor);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\r\n\r\n        this.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\r\n    }\r\n\r\n\r\n    //public inline function bufferData(target:Int, data:IMemoryRange, usage:Int):Void {\r\n    public inline function bufferData(target:Int, data:ArrayBufferView, usage:Int):Void {\r\n\r\n        this.bufferData(target, data, usage);\r\n\r\n    }\r\n\r\n\r\n    public inline function bufferSubData(target:Int, offset:Int, data:ArrayBufferView):Void {\r\n\r\n        this.bufferSubData(target, offset, data);\r\n\r\n    }\r\n\r\n\r\n    public inline function checkFramebufferStatus(target:Int):Int {\r\n\r\n        return this.checkFramebufferStatus(target);\r\n\r\n    }\r\n\r\n\r\n    public inline function clear(mask:Int):Void {\r\n\r\n        this.clear(mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function clearColor(red:Float, green:Float, blue:Float, alpha:Float):Void {\r\n\r\n        this.clearColor(red, green, blue, alpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function clearDepth(depth:Float):Void {\r\n\r\n        this.clearDepth(depth);\r\n\r\n    }\r\n\r\n\r\n    public inline function clearStencil(s:Int):Void {\r\n\r\n        this.clearStencil(s);\r\n\r\n    }\r\n\r\n\r\n    public inline function colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\r\n\r\n        this.colorMask(red, green, blue, alpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function compileShader(shader:GLShader):Void {\r\n\r\n        this.compileShader(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void {\r\n\r\n        this.compressedTexImage2D(target, level, internalformat, width, height, border, data);\r\n\r\n    }\r\n\r\n\r\n    public inline function compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void {\r\n\r\n        this.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data);\r\n\r\n    }\r\n\r\n\r\n    public inline function copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\r\n\r\n        this.copyTexImage2D(target, level, internalformat, x, y, width, height, border);\r\n\r\n    }\r\n\r\n\r\n    public inline function copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\r\n\r\n        this.copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\r\n\r\n    }\r\n\r\n\r\n    public inline function createBuffer():GLBuffer {\r\n\r\n        return this.createBuffer();\r\n\r\n    }\r\n\r\n\r\n    public inline function createFramebuffer():GLFramebuffer {\r\n\r\n        return this.createFramebuffer();\r\n\r\n    }\r\n\r\n\r\n    public inline function createProgram():GLProgram {\r\n\r\n        return this.createProgram();\r\n\r\n    }\r\n\r\n\r\n    public inline function createRenderbuffer():GLRenderbuffer {\r\n\r\n        return this.createRenderbuffer();\r\n\r\n    }\r\n\r\n\r\n    public inline function createShader(type:Int):GLShader {\r\n\r\n        return this.createShader(type);\r\n\r\n    }\r\n\r\n\r\n    public inline function createTexture():GLTexture {\r\n\r\n        return this.createTexture();\r\n\r\n    }\r\n\r\n\r\n    public inline function cullFace(mode:Int):Void {\r\n\r\n        this.cullFace(mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteBuffer(buffer:GLBuffer):Void {\r\n\r\n        this.deleteBuffer(buffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteFramebuffer(framebuffer:GLFramebuffer):Void {\r\n\r\n        this.deleteFramebuffer(framebuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteProgram(program:GLProgram):Void {\r\n\r\n        this.deleteProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteRenderbuffer(renderbuffer:GLRenderbuffer):Void {\r\n\r\n        this.deleteRenderbuffer(renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteShader(shader:GLShader):Void {\r\n\r\n        this.deleteShader(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteTexture(texture:GLTexture):Void {\r\n\r\n        this.deleteTexture(texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function depthFunc(func:Int):Void {\r\n\r\n        this.depthFunc(func);\r\n\r\n    }\r\n\r\n\r\n    public inline function depthMask(flag:Bool):Void {\r\n\r\n        this.depthMask(flag);\r\n\r\n    }\r\n\r\n\r\n    public inline function depthRange(zNear:Float, zFar:Float):Void {\r\n\r\n        this.depthRange(zNear, zFar);\r\n\r\n    }\r\n\r\n\r\n    public inline function detachShader(program:GLProgram, shader:GLShader):Void {\r\n\r\n        this.detachShader(program, shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function disable(cap:Int):Void {\r\n\r\n        this.disable(cap);\r\n\r\n    }\r\n\r\n\r\n    public inline function disableVertexAttribArray(index:Int):Void {\r\n\r\n        this.disableVertexAttribArray(index);\r\n\r\n    }\r\n\r\n\r\n    public inline function drawArrays(mode:Int, first:Int, count:Int):Void {\r\n\r\n        this.drawArrays(mode, first, count);\r\n\r\n    }\r\n\r\n\r\n    public inline function drawElements(mode:Int, count:Int, type:Int, offset:Int):Void {\r\n\r\n        this.drawElements(mode, count, type, offset);\r\n\r\n    }\r\n\r\n\r\n    public inline function enable(cap:Int):Void {\r\n\r\n        this.enable(cap);\r\n\r\n    }\r\n\r\n\r\n    public inline function enableVertexAttribArray(index:Int):Void {\r\n\r\n        this.enableVertexAttribArray(index);\r\n\r\n    }\r\n\r\n\r\n    public inline function finish():Void {\r\n\r\n        this.finish();\r\n\r\n    }\r\n\r\n\r\n    public inline function flush():Void {\r\n\r\n        this.flush();\r\n\r\n    }\r\n\r\n\r\n    public inline function framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\r\n\r\n        this.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\r\n\r\n        this.framebufferTexture2D(target, attachment, textarget, texture, level);\r\n\r\n    }\r\n\r\n\r\n    public inline function frontFace(mode:Int):Void {\r\n\r\n        this.frontFace(mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function generateMipmap(target:Int):Void {\r\n\r\n        this.generateMipmap(target);\r\n\r\n    }\r\n\r\n\r\n    public inline function getActiveAttrib(program:GLProgram, index:Int):GLActiveInfo {\r\n\r\n        return this.getActiveAttrib(program, index);\r\n\r\n    }\r\n\r\n\r\n    public inline function getActiveUniform(program:GLProgram, index:Int):GLActiveInfo {\r\n\r\n        return this.getActiveUniform(program, index);\r\n\r\n    }\r\n\r\n\r\n    public inline function getAttachedShaders(program:GLProgram):Array<GLShader> {\r\n\r\n        return this.getAttachedShaders(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function getAttribLocation(program:GLProgram, name:String):Int {\r\n\r\n        return this.getAttribLocation(program, name);\r\n\r\n    }\r\n\r\n\r\n    public inline function getBufferParameter(target:Int, pname:Int):Dynamic {\r\n\r\n        return this.getBufferParameter(target, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getContextAttributes():GLContextAttributes {\r\n\r\n        return this.getContextAttributes();\r\n\r\n    }\r\n\r\n\r\n    public inline function getError():Int {\r\n\r\n        return this.getError();\r\n\r\n    }\r\n\r\n\r\n    public inline function getExtension(name:String):Dynamic {\r\n\r\n        return this.getExtension(name);\r\n\r\n    }\r\n\r\n\r\n    public inline function getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int):Dynamic {\r\n\r\n        return this.getFramebufferAttachmentParameter(target, attachment, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getParameter(pname:Int):Dynamic {\r\n\r\n        return this.getParameter(pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getProgramInfoLog(program:GLProgram):String {\r\n\r\n        return this.getProgramInfoLog(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function getProgramParameter(program:GLProgram, pname:Int):Int {\r\n\r\n        return this.getProgramParameter(program, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getRenderbufferParameter(target:Int, pname:Int):Dynamic {\r\n\r\n        return this.getRenderbufferParameter(target, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderInfoLog(shader:GLShader):String {\r\n\r\n        return this.getShaderInfoLog(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderParameter(shader:GLShader, pname:Int):Int {\r\n\r\n        return this.getShaderParameter(shader, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderPrecisionFormat(shadertype:Int, precisiontype:Int) : GLShaderPrecisionFormat {\r\n\r\n        return this.getShaderPrecisionFormat(shadertype, precisiontype);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderSource(shader:GLShader):String {\r\n\r\n        return this.getShaderSource(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function getSupportedExtensions() : Array<String> {\r\n\r\n        return this.getSupportedExtensions();\r\n\r\n    }\r\n\r\n\r\n    public inline function getTexParameter(target:Int, pname:Int):Dynamic {\r\n\r\n        return this.getTexParameter(target, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getUniform(program:GLProgram, location:GLUniformLocation):Dynamic {\r\n\r\n        return this.getUniform(program, location);\r\n\r\n    }\r\n\r\n\r\n    public inline function getUniformLocation(program:GLProgram, name:String):GLUniformLocation {\r\n\r\n        return this.getUniformLocation(program, name);\r\n\r\n    }\r\n\r\n\r\n    public inline function getVertexAttrib(index:Int, pname:Int):Dynamic {\r\n\r\n        return this.getVertexAttrib(index, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getVertexAttribOffset(index:Int, pname:Int):Int {\r\n\r\n        return this.getVertexAttribOffset(index, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function hint(target:Int, mode:Int):Void {\r\n\r\n        this.hint(target, mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function isBuffer(buffer:GLBuffer):Bool {\r\n\r\n        return this.isBuffer(buffer);\r\n\r\n    }\r\n\r\n\r\n    //public inline function isContextLost():Bool { return false; }\r\n\r\n\r\n    public inline function isEnabled(cap:Int):Bool {\r\n\r\n        return this.isEnabled(cap);\r\n\r\n    }\r\n\r\n\r\n    public inline function isFramebuffer(framebuffer:GLFramebuffer):Bool {\r\n\r\n        return this.isFramebuffer(framebuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function isProgram(program:GLProgram):Bool {\r\n\r\n        return this.isProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function isRenderbuffer(renderbuffer:GLRenderbuffer):Bool {\r\n\r\n        return this.isRenderbuffer(renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function isShader(shader:GLShader):Bool {\r\n\r\n        return this.isShader(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function isTexture(texture:GLTexture):Bool {\r\n\r\n        return this.isTexture(texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function lineWidth(width:Float):Void {\r\n\r\n        this.lineWidth(width);\r\n\r\n    }\r\n\r\n\r\n    public inline function linkProgram(program:GLProgram):Void {\r\n\r\n        this.linkProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function pixelStorei(pname:Int, param:Int):Void {\r\n\r\n        this.pixelStorei(pname, param);\r\n\r\n    }\r\n\r\n\r\n    public inline function polygonOffset(factor:Float, units:Float):Void {\r\n\r\n        this.polygonOffset(factor, units);\r\n\r\n    }\r\n\r\n\r\n    public inline function readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\r\n\r\n        // TODO: pixels? May need setting to work (canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});)\r\n\r\n        this.readPixels(x, y, width, height, format, type, pixels);\r\n\r\n    }\r\n\r\n\r\n    public inline function renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int):Void {\r\n\r\n        this.renderbufferStorage(target, internalformat, width, height);\r\n\r\n    }\r\n\r\n\r\n    public inline function sampleCoverage(value:Float, invert:Bool):Void {\r\n\r\n        this.sampleCoverage(value, invert);\r\n\r\n    }\r\n\r\n\r\n    public inline function scissor(x:Int, y:Int, width:Int, height:Int):Void {\r\n\r\n        this.scissor(x, y, width, height);\r\n\r\n    }\r\n\r\n\r\n    public inline function shaderSource(shader:GLShader, source:String):Void {\r\n\r\n        this.shaderSource(shader, source);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilFunc(func:Int, ref:Int, mask:Int):Void {\r\n\r\n        this.stencilFunc(func, ref, mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int):Void {\r\n\r\n        this.stencilFuncSeparate(face, func, ref, mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilMask(mask:Int):Void {\r\n\r\n        this.stencilMask(mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilMaskSeparate(face:Int, mask:Int):Void {\r\n\r\n        this.stencilMaskSeparate(face, mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilOp(fail:Int, zfail:Int, zpass:Int):Void {\r\n\r\n        this.stencilOp(fail, zfail, zpass);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int):Void {\r\n\r\n        this.stencilOpSeparate(face, fail, zfail, zpass);\r\n\r\n    }\r\n\r\n\r\n    public inline function texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\r\n\r\n        this.texImage2D(target, level, internalformat, width, height, border, format, type, pixels);\r\n\r\n    }\r\n\r\n    public inline function texImage2DViaImage(target: Int, level : Int, internalformat:Int, format:Int, type:Int, image : Image) : Void{\r\n        this.texImage2D(target, level, internalformat, format, type, image);\r\n    }\r\n\r\n\r\n    public inline function texParameterf(target:Int, pname:Int, param:Float):Void {\r\n\r\n        this.texParameterf(target, pname, param);\r\n\r\n    }\r\n\r\n\r\n    public inline function texParameteri(target:Int, pname:Int, param:Int):Void {\r\n\r\n        this.texParameteri(target, pname, param);\r\n\r\n    }\r\n\r\n\r\n    public inline function texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\r\n\r\n        this.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1f(location:GLUniformLocation, x:Float):Void {\r\n\r\n        this.uniform1f(location, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1fv(location:GLUniformLocation, x:Float32Array):Void {\r\n\r\n        this.uniform1fv(location, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1i(location:GLUniformLocation, x:Int):Void {\r\n\r\n        this.uniform1i(location, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform1iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2f(location:GLUniformLocation, x:Float, y:Float):Void {\r\n\r\n        this.uniform2f(location, x, y);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2fv(location:GLUniformLocation, v:Float32Array):Void {\r\n\r\n        this.uniform2fv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2i(location:GLUniformLocation, x:Int, y:Int):Void {\r\n\r\n        this.uniform2i(location, x, y);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform2iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3f(location:GLUniformLocation, x:Float, y:Float, z:Float):Void {\r\n\r\n        this.uniform3f(location, x, y, z);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3fv(location:GLUniformLocation, v:Float32Array):Void {\r\n\r\n        this.uniform3fv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3i(location:GLUniformLocation, x:Int, y:Int, z:Int):Void {\r\n\r\n        this.uniform3i(location, x, y, z);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform3iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4f(location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void {\r\n\r\n        this.uniform4f(location, x, y, z, w);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4fv(location:GLUniformLocation, v:Float32Array):Void {\r\n\r\n        this.uniform4fv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4i(location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void {\r\n\r\n        this.uniform4i(location, x, y, z, w);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform4iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniformMatrix2fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\r\n\r\n        this.uniformMatrix2fv(location, transpose, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniformMatrix3fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\r\n\r\n        this.uniformMatrix3fv(location, transpose, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniformMatrix4fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\r\n\r\n        this.uniformMatrix4fv(location, transpose, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function useProgram(program:GLProgram):Void {\r\n\r\n        this.useProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function validateProgram(program:GLProgram):Void {\r\n\r\n        this.validateProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib1f(indx:Int, x:Float):Void {\r\n\r\n        this.vertexAttrib1f(indx, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib1fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib1fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib2f(indx:Int, x:Float, y:Float):Void {\r\n\r\n        this.vertexAttrib2f(indx, x, y);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib2fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib2fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float):Void {\r\n\r\n        this.vertexAttrib3f(indx, x, y, z);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib3fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib3fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float):Void {\r\n\r\n        this.vertexAttrib4f(indx, x, y, z, w);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib4fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib4fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void {\r\n\r\n        this.vertexAttribPointer(indx, size, type, normalized, stride, offset);\r\n\r\n    }\r\n\r\n\r\n    public inline function viewport(x:Int, y:Int, width:Int, height:Int):Void {\r\n\r\n        this.viewport(x, y, width, height);\r\n\r\n    }\r\n\r\n\r\n}\r\n","package korrigan;\r\n\r\n@shaders({vertex:\"korrigan/shaders/vshader.glsl\", fragment:\"korrigan/shaders/normal_fshader.glsl\"})\r\nclass NormalTexturedProgram implements glow.GPUProgram{\r\n\t\r\n}","package glow.macro;\r\n\r\nimport glow.GLSL.AttributeType;\r\nimport glow.GLSL.UniformType;\r\nimport glow.GLSLShaderGroup;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\nimport tink.macro.ClassBuilder;\r\nimport tink.macro.Member;\r\n\r\nusing tink.MacroApi;\r\n\r\nusing belt.MacroUtils;\r\n\r\nclass GPUProgramMacro{\r\n\r\n\r\n\tmacro static public function apply() : Array<Field>{\r\n\t\t\r\n        return ClassBuilder.run([generateFieldsFromShaders], false); //true for debug\r\n\r\n    }\r\n\r\n    static private function generateFieldsFromShaders(classBuilder : ClassBuilder):Void{\r\n\r\n        var pos = Context.currentPos();\r\n\r\n        var target = classBuilder.target;\r\n        if (target.isInterface){\r\n            return;\r\n        }\r\n\r\n        \r\n\t\t\r\n\r\n        var targetPath = {pack:target.pack, name: target.name};\r\n\r\n\r\n        var metadata = target.meta.get();\r\n\r\n        var shaderGroup = getShaderGroupFromMetadata(metadata);\r\n\r\n        var glMember = {\r\n                        name: \"_gl\",\r\n                        pos: pos,\r\n                        access: [APrivate],\r\n                        kind: FVar(macro : box.gl.GL,macro null),\r\n                        };\r\n        classBuilder.addMember(glMember);\r\n\r\n        var nativeProgramMember = {\r\n                        name: \"_nativeProgram\",\r\n                        pos: pos,\r\n                        access: [APrivate],\r\n                        kind: FVar(macro : box.gl.GL.GLProgram,macro null),\r\n                        };\r\n        classBuilder.addMember(nativeProgramMember);\r\n\r\n        var constructor = classBuilder.getConstructor();\r\n        constructor.isPublic = false;\r\n        constructor.addArg(\"gl\",macro : box.gl.GL);\r\n        constructor.addArg(\"nativeProgram\",macro : box.gl.GL.GLProgram);\r\n        constructor.addStatement(macro _nativeProgram = nativeProgram);\r\n        constructor.addStatement(macro _gl = gl);\r\n        \r\n\r\n        var assignExpr : Expr = macro var program = glow.GPUPorgramUtil.GPUProgramUtil.upload(gpu.gl,$v{shaderGroup.vertexShaderSrc},$v{shaderGroup.fragmentShaderSrc});\r\n        var uploadBody : Expr = [\r\n            assignExpr,\r\n            {pos:pos, expr : EReturn({pos:pos,expr:ENew(targetPath,[\r\n                macro gpu.gl,\r\n                macro program\r\n                ])})}\r\n        ].toBlock();\r\n        \r\n        var arguments = [Functions.toArg(\"gpu\",macro : glow.GPU)];\r\n        var uploadMember = Member.method(\"upload\",Functions.func(\r\n            uploadBody, \r\n            arguments,\r\n            TPath(targetPath),\r\n            null,\r\n            false));\r\n        uploadMember.isStatic = true;\r\n        classBuilder.addMember(uploadMember);\r\n\r\n\r\n        \r\n\r\n\r\n        var numTexture = 0;\r\n        for (uniform in shaderGroup.uniforms){\r\n            var uniformName = uniform.name;\r\n            var uniformLocationVariableName = \"_\" + uniformName + \"_shaderLocation\";\r\n\r\n            classBuilder.addMember({\r\n                name: uniformLocationVariableName,\r\n                pos: pos,\r\n                access: [APrivate],\r\n                kind: FVar(macro : box.gl.GL.GLUniformLocation,macro null), \r\n                });\r\n\r\n\r\n            constructor.addStatement(macro $i{uniformLocationVariableName} =  _gl.getUniformLocation(_nativeProgram,$v{uniformName}));\r\n\r\n            var arguments = [];\r\n\r\n            var body : Expr = macro _gl.useProgram(_nativeProgram); //TODO do it in draw and save the data to be uploaded\r\n            switch (uniform.type){\r\n                case UniformType.Vec2:\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"y\", macro : Float));\r\n                    body.append(macro _gl.uniform2f($i{uniformLocationVariableName}, x, y));\r\n                case UniformType.Vec3:\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"y\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"z\", macro : Float));\r\n                    body.append(macro _gl.uniform3f($i{uniformLocationVariableName}, x, y, z));\r\n                case UniformType.Vec4:\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"y\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"z\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"w\", macro : Float));\r\n                    body.append(macro _gl.uniform4f($i{uniformLocationVariableName}, x, y, z, w));\r\n                case UniformType.Int:\r\n                    arguments.push(Functions.toArg(\"x\", macro : Int));\r\n                    body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, x));\r\n                case UniformType.Float:\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    body.append(macro _gl.uniform1f($i{uniformLocationVariableName}, x));\r\n                case UniformType.Matrix:\r\n                    arguments.push(Functions.toArg(\"mat\", macro : box.util.Float32Array));\r\n                    body.append(macro _gl.uniformMatrix4fv($i{uniformLocationVariableName}, false, mat));\r\n                case UniformType.Sampler2D:\r\n                    arguments.push(Functions.toArg(\"texture\", macro : glow.GPUTexture));\r\n                    body.append(macro _gl.activeTexture (box.gl.GL.TEXTURE0 + $v{numTexture})); //TODO store texture index\r\n                    body.append(macro _gl.bindTexture (box.gl.GL.TEXTURE_2D, texture.nativeTexture));\r\n                    body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, $v{numTexture}));//TODO store texture index\r\n                    numTexture ++;\r\n                default :\r\n                    throw \"\" + uniform.type + \" not supported yet\";\r\n            }\r\n\r\n            var member = Member.method(\"set_\" + uniform.name,Functions.func(body, arguments,null,null,false));\r\n            classBuilder.addMember(member);\r\n            \r\n        }\r\n\r\n\r\n        var attributes = shaderGroup.attributes;\r\n\r\n        //TODO remove duplication (see GPUBufferMacro)\r\n        var totalStride : Int = 0;\r\n        for (attribute in attributes){\r\n            var numValues = switch(attribute.type){\r\n                case Vec(_,num):num;\r\n                case Float:1;\r\n            }\r\n            totalStride+= numValues; //work for samme types attributes //TODO make it work for mixed types Int/Float...\r\n        }         \r\n\r\n\r\n        var drawBody =  macro _gl.useProgram(_nativeProgram);\r\n        drawBody.append(macro _gl.bindBuffer(box.gl.GL.ARRAY_BUFFER,buffer.nativeBuffer));\r\n\r\n        //TODO remove duplication (see GPUBufferMacro)\r\n        var stride = 0;   \r\n        for (attribute in attributes){\r\n            var attributeName = attribute.name;\r\n            var attributeLocationVariableName = \"_\" + attributeName + \"_shaderLocation\";\r\n\r\n            var numValues = switch(attribute.type){\r\n                case Vec(_,num):num;\r\n                case Float:1;\r\n            }\r\n\r\n            classBuilder.addMember({\r\n                name: attributeLocationVariableName,\r\n                pos: pos,\r\n                access: [APrivate],\r\n                kind: FVar(macro : Int,macro 0), //TODO -1 or 0 ? \r\n                });\r\n\r\n            constructor.addStatement(macro $i{attributeLocationVariableName} = _gl.getAttribLocation(_nativeProgram,$v{attributeName}));\r\n            drawBody.append(macro _gl.enableVertexAttribArray($i{attributeLocationVariableName}));\r\n            drawBody.append(macro _gl.vertexAttribPointer ($i{attributeLocationVariableName}, $v{numValues}, box.gl.GL.FLOAT, false, $v{totalStride} * 4, $v{stride} * 4)); //TODO only FLOAT need Int...\r\n\r\n            stride += numValues;\r\n        }\r\n\r\n        drawBody.append(macro if (!buffer.uploaded){buffer.upload();});\r\n        drawBody.append(macro _gl.bindBuffer (box.gl.GL.ARRAY_BUFFER, buffer.nativeBuffer));\r\n        drawBody.append(macro _gl.drawArrays(box.gl.GL.TRIANGLES, 0, buffer.getNumVerticesWritten()));//Std.int(buffer.numVertices/2))); // TODO use index, else have to specify number of triangles\r\n\r\n        drawBody.append(macro  _gl.useProgram(null));\r\n        //trace(\"--------------------DRAW BODY -----------------------\");\r\n        //trace(drawBody.toString());\r\n\r\n        var bufferClass = glow.macro.GPUBufferMacro.getBufferClassFromAttributes(shaderGroup.attributes);\r\n        var arguments = [Functions.toArg(\"buffer\",bufferClass)];\r\n        var drawMember = Member.method(\"draw\",Functions.func(\r\n            drawBody, \r\n            arguments,\r\n            null,\r\n            null,\r\n            false));\r\n        classBuilder.addMember(drawMember);\r\n\r\n\t}\r\n\r\n    static public function getShaderGroupFromMetadata(metadata : Metadata) : GLSLShaderGroup{\r\n        var pos = Context.currentPos();\r\n\r\n        var vertexShaderFilePath : String = null;\r\n        var fragmentShaderFilePath : String = null;\r\n\r\n        var metadataValues = metadata.getValues(\"shaders\");\r\n        if(metadataValues.length != 1){\r\n            Context.error(\"There should be exactly 1 shader pair\", pos); \r\n            return null;\r\n        }\r\n\r\n        var value = metadataValues[0][0];\r\n\r\n\r\n        switch(value.expr){\r\n            case EObjectDecl(values) :\r\n                for (value in values){\r\n                    switch (value.field){\r\n                        case \"vertex\" : \r\n                            vertexShaderFilePath = extractShaderMetdata(value.expr);\r\n                        case \"fragment\" : \r\n                            fragmentShaderFilePath = extractShaderMetdata(value.expr);\r\n                        default : \r\n                            Context.warning(\"field \" + value.field + \" not supported for @shaders metadata\", pos);\r\n                    }\r\n                }\r\n\r\n            default : Context.error(\"The metadata should be an object declaration\", pos); return null;\r\n        }\r\n\r\n        return GLSLShaderGroup.get(vertexShaderFilePath, fragmentShaderFilePath);\r\n    }\r\n\r\n\r\n\tstatic function extractShaderMetdata(expr : Expr) : String{\r\n\t\tvar pos = Context.currentPos();\r\n\t\treturn switch (expr.expr){\r\n    \t\tcase EConst(c) :\r\n                switch (c){\r\n                    case CString(s): s;\r\n                    default : Context.error(\"The shader value should be a String\", pos); null;\r\n                }\r\n            default: Context.error(\"The shader value should be a Constant\", pos); null;\r\n        }\r\n\t}\r\n}","package korrigan;\r\n\r\n@shaders({vertex:\"korrigan/shaders/vshader.glsl\", fragment:\"korrigan/shaders/simple_fshader.glsl\"})\r\nclass SimpleTexturedProgram implements glow.GPUProgram{\r\n\t\r\n}","package korrigan;\r\n\r\nimport korrigan.TextureAtlas.CutOut;\r\n\r\ntypedef TexturedQuadMeshData =  {x1:Float,y1:Float, x2:Float,y2:Float,u1:Float,v1:Float, u2:Float,v2:Float, refX : Float, refY : Float};\r\ntypedef FrameData = {textureCutOut : String, ?meshData : TexturedQuadMeshData, ?scaleX : Float, ?scaleY : Float};\r\ntypedef AnimationData = Array<FrameData>; //TODO add timing....\r\ntypedef SpriteData = Map<String,AnimationData>;\r\ntypedef SpriteDataSet = Map<String,SpriteData>;\r\n\r\ntypedef TexturePlacement = {\r\n\t//textureId :textureCutOut.textureId,\r\n    srcX1 : Float,\r\n    srcY1 : Float,\r\n    srcX2 : Float,\r\n    srcY2 : Float,\r\n    dstX1 : Float,\r\n    dstY1 : Float,\r\n    dstX2 : Float,\r\n    dstY2 : Float,\r\n    dstX3 : Float,\r\n    dstY3 : Float,\r\n    dstX4 : Float,\r\n    dstY4 : Float,\r\n    dstZ : Float,\r\n}\r\n\r\nclass TexturedQuadMesh{\r\n\r\n\t//TODO public var textureId ?\r\n\tpublic var x1(default,null): Float;\r\n\tpublic var y1(default,null): Float;\r\n\tpublic var x2(default,null): Float;\r\n\tpublic var y2(default,null): Float;\r\n    public var u1(default,null): Float;\r\n    public var v1(default,null): Float;\r\n    public var u2(default,null): Float;\r\n    public var v2(default,null): Float;\r\n\tpublic var refX(default,null): Float;\r\n\tpublic var refY(default,null): Float;\r\n\r\n\tpublic function new(meshData : TexturedQuadMeshData){\r\n        x1 = meshData.x1;\r\n        y1 = meshData.y1;\r\n        x2 = meshData.x2;\r\n        y2 = meshData.y2;\r\n\t\tu1 = meshData.u1;\r\n\t\tv1 = meshData.v1;\r\n\t\tu2 = meshData.u2;\r\n\t\tv2 = meshData.v2;\r\n\t\trefX = meshData.refX;\r\n\t\trefY = meshData.refY;\r\n\t}\r\n}\r\n\r\nclass Frame{\r\n\tpublic var index(default, null) : Int;\r\n\tpublic var mesh(default, null) : TexturedQuadMesh; // could use type parameter\r\n\tpublic var scaleX(default, null) : Float;\r\n\tpublic var scaleY(default, null) : Float;\r\n\r\n\tpublic function new(index : Int, frameData : FrameData){\r\n\t\tthis.index = index;\r\n\t\t//TODO if frameData.meshData == null\r\n\t\tthis.mesh = new TexturedQuadMesh(frameData.meshData);\r\n\t\tif (Reflect.hasField(frameData,\"scaleX\")){\r\n\t\t\tthis.scaleX = frameData.scaleX;\t\r\n\t\t}else{\r\n\t\t\tthis.scaleX = 1;\r\n\t\t}\r\n\t\t\r\n\t\tif (Reflect.hasField(frameData,\"scaleY\")){\r\n\t\t\tthis.scaleY = frameData.scaleY;\t\r\n\t\t}else{\r\n\t\t\tthis.scaleY = 1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nclass FrameAnimation{\r\n\tpublic var id(default, null) : String;\r\n    var frames : Array<Frame>;\r\n\r\n    public function new(id : String, frames : Array<FrameData>){\r\n    \tthis.frames = new Array();\r\n    \tvar i = 0;\r\n        for (frame in frames){\r\n            this.frames.push(new Frame(i,frame));\r\n            i++;\r\n        }\r\n    }\r\n\r\n    public function getFrame(elapsedTime : Float){\r\n    \treturn frames[0]; //TODO\r\n    }\r\n}\r\n\r\nclass Sprite{\r\n\tpublic var id(default, null) : String;\r\n\tvar animations : Map<String,FrameAnimation>;\r\n\r\n\tpublic function new(id : String, spriteData : SpriteData){\r\n\t\tthis.animations = new Map();\r\n\t\tfor (animationId in Reflect.fields(spriteData)){\r\n\t\t\tthis.animations[animationId] = new FrameAnimation(animationId, Reflect.field(spriteData, animationId));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function getFrame(animationId : String, elapsedTime : Float){\r\n\t\tvar animation = animations[animationId];\r\n\t\tif(animation != null){\r\n\t\t\treturn animation.getFrame(elapsedTime);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nclass SpriteLibrary{\r\n\tvar _sprites : Map<String,Sprite>;\r\n\r\n\tpublic function new(){\r\n\t\t_sprites = new Map();\r\n\t}\r\n\r\n\tpublic function loadSprites(spriteSet : SpriteDataSet, textureAtlas : TextureAtlas){\r\n\t\tfor(spriteId in Reflect.fields(spriteSet)){\r\n\t\t\tvar spriteData : SpriteData = Reflect.field(spriteSet,spriteId);\r\n\t\t\tfor (animationId in Reflect.fields(spriteData)){\r\n\t\t\t\tvar animationData : AnimationData = Reflect.field(spriteData, animationId);\r\n\t\t\t\tfor(frameData in animationData){\r\n\t\t\t\t\tvar originalCutOut : CutOut = Reflect.field(textureAtlas.cutOuts,frameData.textureCutOut);\r\n\t\t            var uRatio = 1 / textureAtlas.width;\r\n\t\t            var vRatio = 1 / textureAtlas.height;\r\n\t\t            frameData.meshData = {\r\n                        x1: originalCutOut.x1,\r\n                        y1: originalCutOut.y1,\r\n                        x2: originalCutOut.x2,\r\n                        y2: originalCutOut.y2,\r\n\t\t            \tu1: originalCutOut.x1 * uRatio,\r\n\t\t            \tv1: originalCutOut.y1 * vRatio,\r\n\t\t            \tu2: originalCutOut.x2 * uRatio,\r\n\t\t            \tv2: originalCutOut.y2 * vRatio,\r\n\t\t            \trefX: originalCutOut.refX,\r\n\t\t            \trefY: originalCutOut.refY,\r\n\t\t            \t//textureId : textureAtlas.bitmapId\r\n\t\t            };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n            var sprite = new Sprite(spriteId, spriteData);\r\n            _sprites[spriteId] = sprite;\r\n        }\r\n\t}\r\n\r\n\tpublic function draw(buffer : glow.GPUBuffer<NormalTexturedProgram>, context : korrigan.TransformationContext, spriteId : String, animationName : String, elapsedTime : Float, x : Float, y : Float, z : Float, ?width : Float = 0, ?height : Float = 0, ?keepRatio : Bool = true) : Void{\r\n\t\tvar placement = getTexturePlacement(context, spriteId, animationName, elapsedTime,x,y,z,width,height,keepRatio);\r\n\t\tbuffer.write_position(placement.dstX1, placement.dstY1, z);\t\r\n\t\tbuffer.write_position(placement.dstX3, placement.dstY3, z);\r\n\t\tbuffer.write_position(placement.dstX2, placement.dstY2, z);\r\n\t\tbuffer.write_position(placement.dstX4, placement.dstY4, z);\r\n        buffer.write_position(placement.dstX2, placement.dstY2, z);\r\n        buffer.write_position(placement.dstX3, placement.dstY3, z);\r\n\t\t\r\n        buffer.write_alpha(context.alpha);\r\n        buffer.write_alpha(context.alpha);\r\n        buffer.write_alpha(context.alpha);\r\n        buffer.write_alpha(context.alpha);\r\n        buffer.write_alpha(context.alpha);\r\n        buffer.write_alpha(context.alpha);\r\n\r\n\t\t\r\n\t\tbuffer.write_texCoords(placement.srcX1, placement.srcY1);\r\n\t\tbuffer.write_texCoords(placement.srcX1, placement.srcY2);\r\n\t\tbuffer.write_texCoords(placement.srcX2, placement.srcY1);\r\n\t\tbuffer.write_texCoords(placement.srcX2, placement.srcY2);\r\n        buffer.write_texCoords(placement.srcX2, placement.srcY1);\r\n        buffer.write_texCoords(placement.srcX1, placement.srcY2);\r\n\t}\r\n\r\n\tpublic function getTexturePlacement(context : korrigan.TransformationContext, spriteId : String, animationName : String, elapsedTime : Float, x : Float, y : Float, z : Float, ?width : Float = 0, ?height : Float = 0, ?keepRatio : Bool = true) : TexturePlacement{\r\n\t\tvar sprite = _sprites[spriteId];\r\n\t    \r\n\t    var frame : Frame = null;\r\n\t    var error = false;\r\n        //TODO always upload an error texture (in debug mode only ?)\r\n        if (sprite == null) {\r\n            trace(\"no sprite with id : \" + spriteId);\r\n            error = true;\r\n        }else{\r\n            frame = sprite.getFrame(animationName, elapsedTime);\r\n            if (frame == null) {\r\n                error = true;\r\n                trace(\"no frame for animation : \" + animationName);\r\n            }\r\n        }\r\n\r\n\r\n        if(error){\r\n            width = width == 0 ? 100 : width;\r\n            height = height == 0 ? 100 : height; \r\n            return null;\r\n//                {\r\n//                    textureId : \"error\",\r\n//                    srcX1 : 0,\r\n//                    srcY1 : 0,\r\n//                    srcX2 : 100,\r\n//                    srcY2 : 100,\r\n//                    dstX1 : x,\r\n//                    dstY1 : y,\r\n//                    dstZ : z,\r\n//                    dstX2 : x + 100 * width /100,\r\n//                    dstY2 : y + 100 * height /100\r\n//                };\r\n        }else{\r\n            var mesh = frame.mesh;\r\n\r\n            var meshWidth = mesh.x2 - mesh.x1;\r\n            var meshHeight = mesh.y2 - mesh.y1;\r\n            if(width == 0){\r\n                width = meshWidth;\r\n            }\r\n            if(height == 0){\r\n                height = meshHeight;\r\n            }\r\n\r\n            var scaleX = width / meshWidth;\r\n            var scaleY = height / meshHeight;\r\n\r\n            if(keepRatio){\r\n                scaleX = scaleY = Math.min(scaleX,scaleY);\r\n            }\r\n\r\n            var offsetX = mesh.refX * frame.scaleX;\r\n            var offsetY = mesh.refY * frame.scaleY;\r\n\r\n            var targetX = x - (offsetX * scaleX);\r\n            var targetY = y - (offsetY * scaleY);\r\n\r\n            var rectX1 = targetX;\r\n            var rectY1 = targetY;\r\n            var rectX2 = targetX + meshWidth * scaleX;\r\n            var rectY2 = targetY + meshHeight * scaleY;\r\n\r\n            var vec = new num.Vector();\r\n            vec.x = rectX1;\r\n            vec.y = rectY1;\r\n            vec.z = z;\r\n            vec.w = 1;\r\n            context.transform(vec);\r\n            var dstX1 = vec.x;\r\n            var dstY1 = vec.y;\r\n\r\n            vec.x = rectX2;\r\n            vec.y = rectY1;\r\n            vec.z = z;\r\n            vec.w = 1;\r\n            context.transform(vec);\r\n            var dstX2 = vec.x;\r\n            var dstY2 = vec.y;\r\n\r\n            vec.x = rectX1;\r\n            vec.y = rectY2;\r\n            vec.z = z;\r\n            vec.w = 1;\r\n            context.transform(vec);\r\n            var dstX3 = vec.x;\r\n            var dstY3 = vec.y;\r\n\r\n            vec.x = rectX2;\r\n            vec.y = rectY2;\r\n            vec.z = z;\r\n            vec.w = 1;\r\n            context.transform(vec);\r\n            var dstX4 = vec.x;\r\n            var dstY4 = vec.y;\r\n\r\n            return {\r\n                //textureId :textureCutOut.textureId,\r\n                srcX1 : mesh.u1,\r\n                srcY1 : mesh.v1,\r\n                srcX2 : mesh.u2,\r\n                srcY2 : mesh.v2,\r\n                dstX1 : dstX1,\r\n                dstY1 : dstY1,\r\n                dstX2 : dstX2,\r\n                dstY2 : dstY2,\r\n                dstX3 : dstX3,\r\n                dstY3 : dstY3,\r\n                dstX4 : dstX4,\r\n                dstY4 : dstY4,\r\n                dstZ : z,\r\n           };\r\n        }\r\n\r\n\r\n\t}\r\n\r\n}","package korrigan;\r\n\r\nusing num.Matrix;\r\n\r\nclass TransformationContext{\r\n\r\n\tprivate static var _scratchMatrix3D = new Matrix();\r\n\t//private static var _scratchClipVector = new Vector<Float>(2*3, true);\r\n\t//private static var _scratchQuadVector = new Vector<Float>(4*3, true);\r\n\t\r\n\t//private var _inverseProjection :Matrix3D;\r\n\tprivate var _stateList :TransformationState;\r\n\r\n\tpublic var alpha(get,null):Float;\r\n\tfunction get_alpha():Float{\r\n\t\treturn getTopState().alpha;\r\n\t}\r\n\r\n\tpublic function new(){\r\n\t\t_stateList = new TransformationState();\r\n\t}\r\n\r\n\tpublic function save (){\r\n\t\tvar current = _stateList;\r\n\t\tvar state = _stateList.next;\r\n\t\t\r\n\t\tif (state == null) {\r\n\t\t\t// Grow the list\r\n\t\t\tstate = new TransformationState();\r\n\t\t\tstate.prev = current;\r\n\t\t\tcurrent.next = state;\r\n\t\t}\r\n\r\n\t\tstate.matrix.copyFrom(current.matrix);\r\n\t\t\r\n\t\tstate.alpha = current.alpha;\r\n\r\n\t\t//state.scissorEnabled = current.scissorEnabled;\r\n\t\t// if (state.scissorEnabled) {\r\n\t\t// \tstate.scissor.copyFrom(current.scissor);\r\n\t\t// }\r\n\r\n\t\t_stateList = state;\r\n\t}\r\n\r\n\tpublic function translate (x :Float, y :Float){\r\n\t\tvar state = getTopState();\r\n\t\tstate.matrix.translate(state.matrix, x, y, 0);\r\n\t}\r\n\r\n\tpublic function scale (x :Float, y :Float){\r\n\t\tif (x == 0 || y == 0) {\r\n\t\t\treturn; // Flash throws an undocumented error if appendScale params are zero\r\n\t\t}\r\n\t\tvar state = getTopState();\r\n\t\tstate.matrix.scale(state.matrix, x, y, 1);\r\n\t}\r\n\r\n\tpublic function rotate (rotation :Float){\r\n\t\tvar state = getTopState();\r\n\t\t//TODO state.matrix.prependRotation(rotation, Vector3D.Z_AXIS);\r\n\t}\r\n\r\n\tpublic function multiplyAlpha (factor :Float)\r\n\t{\r\n\t\tgetTopState().alpha *= factor;\r\n\t}\r\n\tpublic function setAlpha (alpha :Float)\r\n\t{\r\n\t\tgetTopState().alpha = alpha;\r\n\t}\r\n\r\n\tpublic function ortho( left : Float , right : Float , bottom : Float , top : Float , near : Float , far : Float ):Void{\r\n\t\tgetTopState().matrix.ortho(left,right,bottom,top,near,far);\r\n\t}\r\n\r\n\t// public function transform (m00 :Float, m10 :Float, m01 :Float, m11 :Float, m02 :Float, m12 :Float){\r\n\t// \tvar state = getTopState();\r\n\t// \tvar scratch = _scratchTransformVector;\r\n\t// \tscratch[0*4 + 0] = m00;\r\n\t// \tscratch[0*4 + 1] = m10;\r\n\t// \tscratch[1*4 + 0] = m01;\r\n\t// \tscratch[1*4 + 1] = m11;\r\n\t// \tscratch[3*4 + 0] = m02;\r\n\t// \tscratch[3*4 + 1] = m12;\r\n\t// \t_scratchMatrix3D.copyRawDataFrom(scratch);\r\n\t// \tstate.matrix.prepend(_scratchMatrix3D);\r\n\t// }\r\n\r\n\tpublic function restore (){\r\n\t\t//TODO Assert.that(_stateList.prev != null, \"Can't restore without a previous save\");\r\n\t\t_stateList = _stateList.prev;\r\n\t}\r\n\r\n\t//TODO ?\r\n\t// public function onResize (width :Int, height :Int){\r\n\t// \tvar ortho = new Matrix3D(Vector.ofArray([\r\n\t// \t2/width, 0, 0, 0,\r\n\t// \t0, -2/height, 0, 0,\r\n\t// \t0, 0, -1, 0,\r\n\t// \t-1, 1, 0, 1,\r\n\t// \t]));\r\n\t// \t// Reinitialize the stack from an orthographic projection matrix\r\n\t// \t_stateList = new DrawingState();\r\n\t// \t_stateList.matrix = ortho;\r\n\t// \t// May be used to transform back into screen coordinates\r\n\t// \t_inverseProjection = ortho.clone();\r\n\t// \t_inverseProjection.invert();\r\n\t// }\r\n\r\n\tinline private function getTopState () : TransformationState{\r\n\t\treturn _stateList;\r\n\t}\r\n\r\n\r\n\r\n\t//TODO?\r\n\t// private function transformQuad (x :Float, y :Float, width :Float, height :Float) :Vector<Float>{\r\n\t// \tvar x2 = x + width;\r\n\t// \tvar y2 = y + height;\r\n\t// \tvar pos = _scratchQuadVector;\r\n\t// \tpos[0] = x;\r\n\t// \tpos[1] = y;\r\n\t// \t// pos[2] = 0;\r\n\t// \tpos[3] = x2;\r\n\t// \tpos[4] = y;\r\n\t// \t// pos[5] = 0;\r\n\t// \tpos[6] = x2;\r\n\t// \tpos[7] = y2;\r\n\t// \t// pos[8] = 0;\r\n\t// \tpos[9] = x;\r\n\t// \tpos[10] = y2;\r\n\t// \t// pos[11] = 0;\r\n\t// \tgetTopState().matrix.transformVectors(pos, pos);\r\n\t// \treturn pos;\r\n\t// }\r\n\r\n\tpublic function transform(vec : num.Vector):Void{\r\n\t\tvec.transformMat4(vec, getTopState().matrix);\r\n\t}\r\n}\r\n\r\n\r\nclass TransformationState{\r\n\tpublic var matrix :num.Matrix;\r\n\tpublic var alpha :Float;\r\n\r\n\t//public var scissor :Rectangle;\r\n\t//public var scissorEnabled :Bool;\r\n\tpublic var prev :TransformationState;\r\n\tpublic var next :TransformationState;\r\n\t\r\n\tpublic function new (){\r\n\t\tmatrix = new Matrix();\r\n\t\talpha = 1;\r\n\t\t//scissor = new Rectangle();\r\n\t}\r\n\r\n\t// public function getScissor () :Rectangle{\r\n\t// \treturn scissorEnabled ? scissor : null;\r\n\t// }\r\n\r\n\t// public function applyScissor (x :Float, y :Float, width :Float, height :Float){\r\n\t// \tif (scissorEnabled) {\r\n\t// \t\t// Intersection with the previous scissor rectangle\r\n\t// \t\tvar x1 = FMath.max(scissor.x, x);\r\n\t// \t\tvar y1 = FMath.max(scissor.y, y);\r\n\t// \t\tvar x2 = FMath.min(scissor.x + scissor.width, x + width);\r\n\t// \t\tvar y2 = FMath.min(scissor.y + scissor.height, y + height);\r\n\t// \t\tx = x1;\r\n\t// \t\ty = y1;\r\n\t// \t\twidth = x2 - x1;\r\n\t// \t\theight = y2 - y1;\r\n\t// \t}\r\n\t// \tscissor.setTo(x, y, width, height);\r\n\t// \tscissorEnabled = true;\r\n\t// }\r\n\r\n\t/**\r\n\t* Whether the scissor region is empty. Calling Context3D.setScissorRectangle with an empty\r\n\t* rectangle actually disables scissor testing, so this needs to be queried before every draw\r\n\t* method.\r\n\t*/\r\n\t// public function emptyScissor () :Bool\r\n\t// {\r\n\t// \treturn scissorEnabled && (scissor.width < 0.5 || scissor.height < 0.5);\r\n\t// }\r\n}","package ld31;\r\n\r\nimport haxe.Json;\r\nimport korrigan.SpriteLibrary;\r\nimport snail.Screen;\r\nimport snail.Shell;\r\n\r\nimport wax.system.ModelComponent;\r\nimport wax.system.Model;\r\n\r\nimport wax.system.EntityType;\r\n\r\nimport ld31.view.Presenter;\r\nimport howler.Howl;\r\nimport howler.Howler;\r\n\r\n\r\nimport ld31.model.GridSystem;\r\nimport ld31.model.PlayerSystem;\r\nimport ld31.model.GestionDynamicSystem;\r\nimport ld31.model.GestionForceSystem;\r\nimport ld31.model.CameraSystem;\r\nimport ld31.model.GestionLevelSystem;\r\nimport ld31.model.AISystem;\r\nimport ld31.model.DoorSystem;\r\n\r\n\r\nimport ld31.model.PlayerTypeComponent;\r\nimport ld31.model.AITypeComponent;\r\nimport ld31.view.Presenter;\r\nimport ld31.controller.ControllerKey;\r\n\r\nimport box.asset.Image;\r\n\r\nclass GameScreen implements Screen<ShellData>{\r\n\r\n\r\n    private var worldModel : Model;\r\n    private var typelibrary:Map<String,EntityType>;\r\n\r\n\tvar _bgSound : Howl;\r\n\r\n\tvar _shell : Shell<ShellData>;\r\n\tvar spriteLibrary : SpriteLibrary;\r\n\r\n\tvar _image : Image;\r\n\tvar _normal : Image;\r\n\r\n\tvar presenter : Presenter;\r\n\r\n\tvar _done : Bool = false;\r\n\tvar _finished : Bool = false;\r\n\r\n\tpublic function new(){\r\n\r\n\t}\r\n\r\n\tpublic function enter(shell : Shell<ShellData>, now : Float) : Void{\r\n\t\t//TODO remove statics\r\n\t\tMain.exitconditionfullfil = false;\r\n\t\t_shell = shell;\r\n\t\t_done = false;\r\n\t\t_finished = false;\r\n\t\t_bgSound = _setupSound(\"output.mp3\");\r\n\r\n        _bgSound.loop(true);\r\n        _bgSound.play();\r\n        Howler.volume(0.1);\r\n\r\n        var texts = shell.data.assets.texts;\r\n        var images = shell.data.assets.images;\r\n\r\n\t\tvar textureAtlas = Json.parse(texts.get(\"img/texture.json\"));\r\n        var json : SpriteDataSet = Json.parse(texts.get(\"img/sprites.json\"));\r\n        spriteLibrary = new SpriteLibrary();\r\n        spriteLibrary.loadSprites(json,textureAtlas);  \r\n\t\t_image= images.get(\"img/colors.png\");\r\n        _normal = images.get(\"img/normals.png\");\r\n        var tiledmap = shell.data.tiledmap;\r\n\t\tpresenter = new Presenter(shell.data.window, spriteLibrary, shell.data.gpu,_image, _normal,tiledmap);\r\n\r\n\t\tvar typeplayer= new EntityType();\r\n        typeplayer.setup([new PlayerTypeComponent()]);\r\n\r\n        var typeai=new EntityType();\r\n        typeai.setup([new AITypeComponent()]);\r\n\r\n        typelibrary = new Map();\r\n        typelibrary.set(\"player\",typeplayer);\r\n        typelibrary.set(\"ai\",typeai);\r\n\r\n\r\n        var systems : Array<ModelComponent> =[ new AISystem(typelibrary,tiledmap),\r\n        new DoorSystem(typelibrary,tiledmap),new PlayerSystem(typelibrary),\r\n         new GestionLevelSystem(typelibrary,tiledmap),\r\n        new ControllerKey(typelibrary),new GestionForceSystem(typelibrary),\r\n        new GestionDynamicSystem(typelibrary), new GridSystem(typelibrary,tiledmap),\r\n        new CameraSystem(typelibrary)];\r\n        worldModel= new Model();\r\n        worldModel.setup(systems);\r\n\r\n        presenter.present(worldModel);\r\n\t}\r\n\r\n\tprivate  function _setupSound(url:String) {\r\n        var options= new HowlOptions();\r\n        options.urls = [url];\r\n        options.autoplay = false;\r\n        var snd = new Howl(options);\r\n        return snd;\r\n    }\r\n\r\n    public function update(now : Float, dt : Float) : Bool{\r\n\r\n    \t\t//TODO remove statics access\r\n    \tif (worldModel != null && Main.exitconditionfullfil==false  && (Main.gameover==false /*|| Main.gameover==true*/)){\r\n            worldModel.update(dt,now);\r\n\r\n            presenter.update(dt,now);\r\n        }\r\n\r\n        if(!_finished && (Main.exitconditionfullfil || Main.gameover))\t{\r\n        \t_finished = true;\r\n        \tjs.Browser.document.addEventListener(\"keydown\",keyDownHandler, false);\r\n        }\r\n\r\n    \treturn _done;\r\n    }\r\n\r\n    public function quit(now : Float) : Void{\r\n    \t_bgSound.stop();\r\n    }\r\n\r\n     public function keyDownHandler(event){\r\n\r\n        var keyPressed = event.keyCode;\r\n\r\n\r\n        if (keyPressed == \"32\")\r\n        {\r\n\r\n            _done = true;\r\n        }\r\n\r\n        js.Browser.document.removeEventListener(\"keydown\",keyDownHandler, false);\r\n       \r\n\r\n\t}\r\n}\r\n\r\n","package ld31;\n\n\n\nimport box.Window;\nimport egg.Assets;\nimport egg.Batch;\nimport box.asset.Image;\nimport haxe.Json;\nimport korrigan.SpriteLibrary;\nimport korrigan.TextureAtlas;\nimport ld31.ShellData;\nimport ld31.StartScreen;\nimport run.Runnable;\n\nimport egg.TextLoader;\nimport run.Runner;\n\nimport egg.ImageLoader;\nimport haxe.Timer;\n\n\nimport snail.Shell;\n\nimport glow.GPU;\n\nclass Main {\n\n    static public var HEIGHT:Int;\n    static public var WIDTH:Int;\n\n    static public var WINDOWHEIGHT:Int;\n    static public var WINDOWWIDTH:Int;\n\n    static public var exitconditionfullfil:Bool=false;\n    static public var gameover:Bool=false;\n\n    static public function main() {\n        new Main();\n    }\n\n    var shell : Shell<ShellData>;\n\n    public function new(){\n       \n       Assets.load([\"img/texture.json\",\"img/sprites.json\", \"img/map-complex.json\"],[\"img/start.png\",\"img/colors.png\",\"img/normals.png\"]).handle(assetsLoaded);\n    }\n\n    function assetsLoaded(outcome : AssetsOutcome){\n        switch(outcome){\n            case Failure(error):trace(error);\n            case Success(assets):\n                js.Browser.document.getElementById(\"loading\").remove();\n                \n                var window = Window.createWindow();\n                var gpu = new GPU(window.gl);\n\n                this.shell = new Shell({\n                        window : window,\n                        gpu : gpu,\n                        assets : null,\n                        tiledmap : null,\n                        startImage:null\n                    },\n                    [\n                        new StartScreen(), \n                        new GameScreen()\n                    ]);\n                \n                \n                shell.data.assets = assets;\n                var runner = new Runner(shell);\n                runner.start();\n        }\n    }\n\n\n\n}\n\n","package ld31;\r\n\r\nimport box.Window;\r\nimport egg.Assets;\r\nimport glow.GPUBuffer;\r\nimport glow.GPUTexture;\r\nimport korrigan.SimpleTexturedProgram;\r\nimport korrigan.TransformationContext;\r\nimport snail.Screen;\r\nimport snail.Shell;\r\n\r\nimport glow.GPU;\r\n\r\n\r\ntypedef MyFormat = {\r\nheight:Int,\r\nlayers:Array<CutOut>\r\n}\r\n\r\ntypedef CutOut = {\r\ndata1:Array<Int>,\r\ndata2:Array<Int>,\r\ndata3:Array<Int>\r\n\r\n}\r\n\r\nclass StartScreen implements Screen<ShellData>{\r\n\r\n\tvar _shell : Shell<ShellData>;\r\n\tvar _done : Bool = false;\r\n\r\n\tvar program : SimpleTexturedProgram;\r\n\tvar buffer  : GPUBuffer<SimpleTexturedProgram>;\r\n\tvar _texture : GPUTexture;\r\n\tvar window : Window;\r\n\tvar gpu : GPU;\r\n\r\n\tpublic function new(){}\r\n\r\n\tpublic function enter(shell : Shell<ShellData>, now : Float) : Void{\r\n\r\n\t\twindow = shell.data.window;\r\n\t\tgpu = shell.data.gpu;\r\n\t\t_texture = gpu.uploadTexture(shell.data.assets.images.get(\"img/start.png\"));\r\n\t\tprogram = SimpleTexturedProgram.upload(gpu);\t\t\r\n\t\tprogram.set_tex(_texture);\r\n\t\tbuffer = new GPUBuffer<SimpleTexturedProgram>(gpu, box.gl.GL.STATIC_DRAW);\r\n\t\tbuffer.write_position(-1, -1, 0);\t\r\n\t\tbuffer.write_position(-1, 1, 0);\r\n\t\tbuffer.write_position(1, -1, 0);\r\n\t\tbuffer.write_position(1, 1, 0);\r\n        buffer.write_position(1, -1, 0);\r\n        buffer.write_position(-1, 1, 0);\r\n\t\t\r\n        buffer.write_alpha(1);\r\n        buffer.write_alpha(1);\r\n        buffer.write_alpha(1);\r\n        buffer.write_alpha(1);\r\n        buffer.write_alpha(1);\r\n        buffer.write_alpha(1);\r\n\r\n\t\t\r\n\t\tbuffer.write_texCoords(0, 1);\r\n\t\tbuffer.write_texCoords(0, 0);\r\n\t\tbuffer.write_texCoords(1, 1);\r\n\t\tbuffer.write_texCoords(1, 0);\r\n        buffer.write_texCoords(1, 1);\r\n        buffer.write_texCoords(0, 0);\r\n\r\n\t\t_shell = shell;\r\n\t\t_done = false;\r\n\t\t\r\n\t    _shell.data.tiledmap = parseTiledMap(_shell.data.assets.texts.get(\"img/map-complex.json\"));\r\n        js.Browser.document.addEventListener(\"keydown\",keyDownHandler, false);\r\n\t}\r\n\r\n\r\n\tprivate function parseTiledMap(data : String) : Array<Array<Array<Int>>>{\r\n        var res:MyFormat= haxe.Json.parse(data);\r\n        var n=0;\r\n        var k=0;\r\n        var l=0;\r\n        //TODO do not set statics and do not use window \r\n        Main.WIDTH=Std.int(Std.int(_shell.data.window.width)/Std.int(res.layers[0].data1.length/res.height));\r\n        Main.HEIGHT=Std.int(Std.int(_shell.data.window.height)/ res.height);\r\n        var tiledmap = [for (x in 0... 3)[for (x in 0... Std.int(res.layers[0].data1.length/res.height)) [for (y in 0...res.height) 0]]];\r\n        for (x in 0... tiledmap[0].length){\r\n            for (y in 0...tiledmap[0][x].length){\r\n                tiledmap[0][x][y]=res.layers[0].data1[x+Std.int(res.layers[0].data1.length/res.height)*y];\r\n                tiledmap[1][x][y]=res.layers[0].data2[x+Std.int(res.layers[0].data1.length/res.height)*y];\r\n                tiledmap[2][x][y]=res.layers[0].data3[x+Std.int(res.layers[0].data1.length/res.height)*y];\r\n                l++;\r\n            }\r\n        }\r\n        return tiledmap;\r\n    }\r\n\r\n\r\n    public function update(now : Float, dt : Float) : Bool{\r\n    \twindow.resize();//todo on resize event\r\n\t\tvar width = Std.int(window.width);\r\n\t\tvar height = Std.int(window.height);\r\n\t\twindow.gl.viewport(0, 0, width , height);//window.gl.drawingBufferWidth, window.gl.drawingBufferHeight);\r\n\t\t\r\n\t\tprogram.draw(buffer);\r\n\r\n    \treturn _done;\r\n    }\r\n\r\n    public function quit(now : Float) : Void{\r\n    \t \r\n    }\r\n\r\n    public function keyDownHandler(event){\r\n\r\n        var keyPressed = event.keyCode;\r\n\r\n\r\n        if (keyPressed == \"32\")\r\n        {\r\n\r\n            _done = true;\r\n        }\r\n\r\n        js.Browser.document.removeEventListener(\"keydown\",keyDownHandler, false);\r\n       \r\n\r\n\t}\r\n}\r\n\r\n","package ld31.controller;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityType;\nimport ld31.model.PositionComponent;\nimport ld31.model.PlayerComponent;\nimport ld31.model.VelocityComponent;\nimport js.Browser;\n\n@entities(['PlayerComponent'])\nclass ControllerKey implements SystemComponent implements Updatable{\n\npublic var playercomponent:PlayerComponent;\npublic var velocitycomponent:VelocityComponent;\n\npublic function new(typelibrary:Map<String,EntityType>){\n    Browser.document.addEventListener(\"keydown\",keyDownHandler, false);\n    Browser.document.addEventListener(\"keyup\",keyUpHandler, false);\n\n}\n    public function keyDownHandler(event){\n\n        var keyPressed = event.keyCode;\n\n        if (keyPressed == \"38\")\n        {\n\n            playercomponent.trytomovein=1;\n        }\n        else if (keyPressed == \"40\")\n        {\n\n            playercomponent.trytomoveout=1;\n        }\n\n        if (keyPressed == \"88\")\n        {\n\n            playercomponent.jump=1;\n        }\n       \n\n\n        if (keyPressed == \"39\")\n        {\n            playercomponent.direction=1;\n        }\n        else if (keyPressed == \"37\")\n        {\n            playercomponent.direction=-1;\n        }\n    }\n\n\n\n    public function keyUpHandler(event){\n\n        var keyPressed = event.keyCode;\n        if ((keyPressed == \"38\") ||\n        (keyPressed == \"40\") )\n        {\n        playercomponent.trytomovein=0;\n        playercomponent.trytomoveout=0;\n        }\n\n        if ((keyPressed == \"88\")  )\n        {\n        playercomponent.jump=0;\n        }\n\n        if ((keyPressed == \"37\") ||\n        (keyPressed == \"39\"))\n        {\n            playercomponent.direction=0;\n        }\n\n\n    }\n\n\npublic function onEntityRegistered(entity : Entity) : Void{\n        if (playercomponent != null){\n            Report.anError(\"GameController\", \"the controller support only one player action component\", \"ignoring the new entity\");\n        }else{\n            playercomponent = entity.get(PlayerComponent);\n        }\n    }\npublic function onEntityUnregistered(entity : Entity) : Void{\n\n}\n\npublic function initialise() : Void{\n\n       \n    }\n\n    public function update(dt:Float,now:Float):Void {\n        }\n\n}","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n* \n****/\n\npackage wax.system;\n\n@:autoBuild(wax.system.macro.SystemComponentMacro.build())\ninterface SystemComponent extends ModelComponent{\n    public var registeredEntities(default, null) : Array<Entity>;\n    public function onEntityRegistered(entity : Entity) : Void;\n    public function onEntityUnregistered(entity : Entity) : Void;\n}\n","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n* \n****/\n\npackage wax.system;\n\nimport haxe.rtti.Meta;\nimport wax.system.ComponentOwner;\n\n@:autoBuild(wax.system.macro.ComponentInterdependencyMacro.build())\ninterface Component {\n\n    public var owner(default, null) : ComponentOwner;\n    public var requiredComponents(default, null) : Array<Class<Dynamic>>;\n\n    public function detach() : Void;\n    public function attach(componentOwner : ComponentOwner) : Class<Dynamic>;\n\n    public function initialise() : Void;\n\n}\n","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityComponent;\r\nimport wax.system.EntityTypeComponent;\r\n\r\nclass AIComponent implements EntityComponent {\r\n\r\npublic var velo:Int=0;\r\npublic var distance:Int=0;\r\npublic var parcouru:Int=0;\r\npublic var level:Int=0;\r\npublic var key:Int;\r\npublic var typeoffoe:Int;\r\n\r\n\r\npublic function new(velo:Int,distance:Int,level:Int,key:Int,typeoffoe:Int){\r\n\tthis.velo=velo;\r\n\tthis.distance=distance;\r\n\tthis.level=level;\r\n\tthis.key=key;\r\n\tthis.typeoffoe=typeoffoe;\r\n}\r\n\r\npublic function initialise(){}\r\n\r\n\r\n\r\n}","/****\r\n* Wighawag License:\r\n* - free to use for commercial and non commercial application\r\n* - provided the modification done to it are given back to the community\r\n* - use at your own risk\r\n* \r\n****/\r\n\r\npackage wax.system;\r\n\r\n@:autoBuild(wax.system.macro.EntityComponentMacro.build())\r\ninterface EntityComponent extends Component {\r\n\r\n    var entity(default, null) : Entity;\r\n    function attachEntity(entity : Entity) : Bool;\r\n    function detachEntity() : Void;\r\n}\r\n","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityType;\r\nimport ld31.model.PositionComponent;\r\nimport ld31.model.PlayerComponent;\r\nimport ld31.model.VelocityComponent;\r\n\r\n@entities(['AIComponent'])\r\nclass AISystem implements SystemComponent implements Updatable{ \r\n    private var typelibrary:Map<String,EntityType>;\r\n    private var tiledmap:Array<Array<Array<Int>>>;\r\n    public var keymapai:Map<Int,Entity>= new Map();\r\n    public var key:Int=7;\r\n\tpublic function new(typelibrary:Map<String,EntityType>,tiledmap:Array<Array<Array<Int>>>){\r\n        this.tiledmap=tiledmap;\r\n        this.typelibrary=typelibrary;\r\n    }\r\n\r\n\tpublic function onEntityRegistered(entity:Entity):Void {\r\n        keymapai.set(entity.get(ld31.model.AIComponent).key,entity);\r\n\r\n    }\r\n\r\n    public function onEntityUnregistered(entity:Entity):Void {\r\n    }\r\n\r\n    public function initialise() : Void{\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*22,Main.HEIGHT*6,(Main.HEIGHT),Main.HEIGHT,0, Std.int(Main.WIDTH*22/Main.WIDTH), Std.int(Main.HEIGHT*6/Main.HEIGHT)),\r\n            new ExitComponent(0)]);\r\n\r\n        model.addEntity( entity );\r\n         ///pieux\r\n         for(i in 0 ... 24){\r\n            var aitype = typelibrary.get(\"ai\");\r\n       \r\n            var entity=aitype.createEntity([\r\n                new PositionComponent(Main.WIDTH*i,Main.HEIGHT*13-(Main.WIDTH*56/120),(Main.WIDTH*120/120),(Main.WIDTH*56/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n                new AIComponent(0,0,2,key,2),\r\n                new VelocityComponent()]);\r\n\r\n            model.addEntity( entity );\r\n            key+=1;\r\n        }\r\n\r\n         var aitype = typelibrary.get(\"ai\");\r\n       \r\n            var entity=aitype.createEntity([\r\n                new PositionComponent(Main.WIDTH*3,Main.HEIGHT*6-(Main.WIDTH*56/120),(Main.WIDTH*120/120),(Main.WIDTH*56/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n                new AIComponent(0,0,0,key,2),\r\n                new VelocityComponent()]);\r\n\r\n            model.addEntity( entity );\r\n            key+=1;\r\n\r\n         /*var aitype = typelibrary.get(\"ai\");\r\n       \r\n            var entity=aitype.createEntity([\r\n                new PositionComponent(Main.WIDTH*12,Main.HEIGHT*13-(Main.WIDTH*56/120),(Main.WIDTH*120/120),(Main.WIDTH*56/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n                new AIComponent(0,0,1,key,2),\r\n                new VelocityComponent()]);\r\n\r\n            model.addEntity( entity );\r\n            key+=1;\r\n            */\r\n\r\n         var aitype = typelibrary.get(\"ai\");\r\n       \r\n            var entity=aitype.createEntity([\r\n                new PositionComponent(Main.WIDTH*17,Main.HEIGHT*3-(Main.WIDTH*56/120),(Main.WIDTH*120/120),(Main.WIDTH*56/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n                new AIComponent(0,0,2,key,2),\r\n                new VelocityComponent()]);\r\n\r\n            model.addEntity( entity );\r\n            key+=1;\r\n\r\n         \r\n        /////\r\n\r\n        tiledmap[0][22][6]=-1;\r\n        \r\n        var aitype = typelibrary.get(\"ai\");\r\n        //trick to get to the 10 grid y low result\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*9,Main.HEIGHT*13-(Main.WIDTH*46/120),(Main.WIDTH*120/120),(Main.WIDTH*46/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n            new AIComponent(1,Main.WIDTH*2,0,key,1),\r\n            new VelocityComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        key+=1;\r\n\r\n       \r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        //trick to get to the 10 grid y low result\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*20,Main.HEIGHT*10-(Main.WIDTH*46/120),(Main.WIDTH*120/120),(Main.WIDTH*46/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n            new AIComponent(1,Main.WIDTH*2,1,key,1),\r\n            new VelocityComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        key+=1;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        //trick to get to the 10 grid y low result\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*8,Main.HEIGHT*3-(Main.WIDTH*46/120),(Main.WIDTH*120/120),(Main.WIDTH*46/120),0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\r\n            new AIComponent(1,Main.WIDTH*2,2,key,1),\r\n            new VelocityComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        key+=1;\r\n\r\n    }\r\n\r\n    public function update(dt:Float,now:Float):Void {\r\n        //\r\n\r\n        for (entity in this.registeredEntities){\r\n            var pos = entity.get(PositionComponent);\r\n            var velocitycomponent = entity.get(VelocityComponent);\r\n            var ai=entity.get(ld31.model.AIComponent);\r\n            if(ai.parcouru<=ai.distance){\r\n                pos.x+=ai.velo;\r\n                //pos.y+=velocitycomponent.v.y;\r\n                ai.parcouru+=1;\r\n            }\r\n            else if(ai.parcouru>ai.distance){\r\n                ai.parcouru=0;\r\n                ai.velo= -ai.velo;\r\n            }\r\n            pos.gx=Std.int(pos.x/Main.WIDTH);\r\n            pos.gy=Std.int(pos.y/Main.HEIGHT);\r\n            tiledmap[ai.level][pos.gx][pos.gy]=ai.key;\r\n\r\n\r\n        }\r\n    }\r\n}\r\n","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityComponent;\nimport wax.system.EntityTypeComponent;\n\nclass AITypeComponent implements EntityTypeComponent { \n\npublic var animosity:Int=1;\n\npublic function new(){}\n\npublic function populateEntity(entityComponents : Array<EntityComponent>){}\n\npublic function initialise(){}\n\n\n}","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityComponent;\r\nimport wax.system.EntityTypeComponent;\r\n\r\nclass ButtonComponent implements EntityComponent {\r\n\r\n\r\npublic var level:Int=0;\r\npublic var keydoor:Int=0;\r\npublic var keybutton:Int=0;\r\npublic var actif:Int=1;\r\npublic var view:String=ld31.view.Presenter.BUTTON1_SPRITE;\r\n\r\npublic function new(level:Int, keydoor:Int, keybutton:Int,view:String){\r\n\r\n\tthis.level=level;\r\n\tthis.keydoor=keydoor;\r\n\tthis.keybutton=keybutton;\r\n\tthis.view=view;\r\n\r\n}\r\n\r\npublic function initialise(){}\r\n\r\n\r\n\r\n}","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityType;\nimport ld31.model.PositionComponent;\nimport ld31.model.PlayerComponent;\nimport ld31.model.VelocityComponent;\n\n\n@entities(['PlayerComponent','PositionComponent'])\nclass CameraSystem implements SystemComponent implements Updatable{ //ModelComponent\n\n    private var typelibrary:Map<String,EntityType>;\n    static public var cameraX:Int=0;\n    static public var cameraY:Int=0;\n    //TO CHANGE\n    //TEMPORARY\n    private var screenwidth:Int=640;\n    private var screenheight:Int=480;\n\n    private var mapwidth:Int=32*100;\n    private var mapheight:Int=32*15;\n\n    \n \n\n\tpublic function new(typelibrary:Map<String,EntityType>){\n        this.typelibrary=typelibrary;\n        \n\n\n    }\n\n\tpublic function onEntityRegistered(entity:Entity):Void {\n\n    }\n\n    public function onEntityUnregistered(entity:Entity):Void {\n    }\n\n    public function initialise() : Void{\n        screenwidth=ld31.view.Presenter.screenwidth;\n        screenheight=ld31.view.Presenter.screenheight;\n        mapwidth=ld31.view.Presenter.mapwidth;\n        mapheight=ld31.view.Presenter.mapheight;\n\n    }\n\n    public function update(dt:Float,now:Float):Void {\n\n        for(entity in registeredEntities){\n            var position= entity.get(PositionComponent);\n            //cameraX+=1;\n           if(screenwidth<mapwidth){\n                if(position.x<(screenwidth/2)){cameraX=0;}\n                else if(position.x>(mapwidth-screenwidth/2)){cameraX=(Std.int((mapwidth-screenwidth)/ld31.Main.WIDTH));}\n                else{cameraX= Std.int((position.x-screenwidth/2)/ld31.Main.WIDTH);}\n            }\n            if(screenheight<mapheight){\n                if(position.y<(screenheight/2)){cameraY=0;}\n                else if(position.y>(mapheight-screenheight/2)){cameraY=(Std.int((mapheight-screenheight)/ld31.Main.HEIGHT));}\n                else{cameraY= Std.int((position.y-screenheight/2)/ld31.Main.HEIGHT);}\n            }\n        }\n\n    }\n}\n","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityComponent;\r\nimport wax.system.EntityTypeComponent;\r\n\r\nclass DoorComponent implements EntityComponent {\r\n\r\n\r\npublic var level:Int=0;\r\npublic var keydoor:Int=0;\r\npublic var keybutton:Int=0;\r\npublic var remove:Int=0;\r\npublic var wall:String=ld31.view.Presenter.DOORONE_SPRITE;\r\n\r\npublic function new(level:Int, keydoor:Int, keybutton:Int,wall:String){\r\n\r\n\tthis.level=level;\r\n\tthis.keydoor=keydoor;\r\n\tthis.keybutton=keybutton;\r\n\tthis.wall=wall;\r\n\r\n}\r\n\r\npublic function initialise(){}\r\n\r\n\r\n\r\n}","package ld31.model;\r\n\r\nimport wax.asset.Image;\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityType;\r\nimport ld31.model.PositionComponent;\r\n\r\n@entities(['SwitchComponent'])\r\nclass DoorSystem implements SystemComponent implements Updatable{ //ModelComponent\r\n\r\n    private var typelibrary:Map<String,EntityType>;\r\n    public var keydoor:Int=0;\r\n    public var keybutton:Int=-7;\r\n    static public var doormap:Map<Int,Entity>= new Map();\r\n    static public var buttonmap:Map<Int,Entity>= new Map();\r\n\r\n    private var tiledmap:Array<Array<Array<Int>>>;\r\n\r\n    public function new(typelibrary:Map<String,EntityType>,tiledmap:Array<Array<Array<Int>>>){\r\n        this.tiledmap=tiledmap;\r\n        this.typelibrary=typelibrary;\r\n\r\n\r\n    }\r\n\r\n\tpublic function onEntityRegistered(entity:Entity):Void {\r\n        if(entity.get(ld31.model.DoorComponent)!=null){\r\n            doormap.set(entity.get(ld31.model.DoorComponent).keydoor,entity);\r\n        }\r\n        else{\r\n            buttonmap.set(entity.get(ld31.model.ButtonComponent).keybutton,entity);\r\n           \r\n        }\r\n\r\n    }\r\n\r\n    public function onEntityUnregistered(entity:Entity):Void {\r\n    }\r\n\r\n    public function initialise() : Void{\r\n\r\n   ////1     \r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*5),Std.int(Main.HEIGHT*12),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(5), Std.int(12)),\r\n            new DoorComponent(0,keydoor,keybutton,ld31.view.Presenter.DOORTHREE_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[0][5][12]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*2+(Main.HEIGHT*76/120)/4,Main.HEIGHT*12,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(2), Std.int(12)),\r\n            new ButtonComponent(0,keydoor,keybutton,ld31.view.Presenter.BUTTON1_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[0][2][12]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n////2\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*14),Std.int(Main.HEIGHT*12),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(14), Std.int(12)),\r\n            new DoorComponent(0,keydoor,keybutton,ld31.view.Presenter.DOORTHREE_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[0][14][12]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*14+(Main.HEIGHT*76/120)/4,Main.HEIGHT*6,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(14), Std.int(6)),\r\n            new ButtonComponent(2,keydoor,keybutton,ld31.view.Presenter.BUTTON1_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[2][15][6]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n////3\r\n         var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*18),Std.int(Main.HEIGHT*5),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(18), Std.int(5)),\r\n            new DoorComponent(1,keydoor,keybutton,ld31.view.Presenter.DOORONE_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[1][18][5]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*23+(Main.HEIGHT*76/120)/4,Main.HEIGHT*12,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(23), Std.int(12)),\r\n            new ButtonComponent(0,keydoor,keybutton,ld31.view.Presenter.BUTTON2_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[0][23][12]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n////4\r\n         var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*11),Std.int(Main.HEIGHT*4),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(11), Std.int(4)),\r\n            new DoorComponent(1,keydoor,keybutton,ld31.view.Presenter.DOORONE_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[1][11][4]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*1+(Main.HEIGHT*76/120)/4,Main.HEIGHT*5,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(1), Std.int(5)),\r\n            new ButtonComponent(0,keydoor,keybutton,ld31.view.Presenter.BUTTON2_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[0][1][5]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n////5\r\n         var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*9),Std.int(Main.HEIGHT*10),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(9), Std.int(10)),\r\n            new DoorComponent(2,keydoor,keybutton,ld31.view.Presenter.DOORTWO_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[2][9][10]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*12+(Main.HEIGHT*76/120)/4,Main.HEIGHT*4,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(12), Std.int(4)),\r\n            new ButtonComponent(1,keydoor,keybutton,ld31.view.Presenter.BUTTON3_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[1][12][4]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n////6\r\n         var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*20),Std.int(Main.HEIGHT*2),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(20), Std.int(2)),\r\n            new DoorComponent(2,keydoor,keybutton,ld31.view.Presenter.DOORTWO_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[2][20][2]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*14+(Main.HEIGHT*76/120)/4,Main.HEIGHT*10,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(14), Std.int(10)),\r\n            new ButtonComponent(2,keydoor,keybutton,ld31.view.Presenter.BUTTON3_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[2][12][10]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n/*\r\n         var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Std.int(Main.WIDTH*8),Std.int(Main.HEIGHT*6),(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(8), Std.int(6)),\r\n            new DoorComponent(2,keydoor,keybutton,ld31.view.Presenter.DOORTWO_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[2][8][5]=4;\r\n\r\n        var aitype = typelibrary.get(\"ai\");\r\n        var entity=aitype.createEntity([\r\n            new PositionComponent(Main.WIDTH*15+(Main.HEIGHT*76/120)/4,Main.HEIGHT*1,(Main.HEIGHT*76/120),Main.HEIGHT,0, Std.int(15), Std.int(1)),\r\n            new ButtonComponent(2,keydoor,keybutton,ld31.view.Presenter.BUTTON3_SPRITE), new SwitchComponent()]);\r\n\r\n        model.addEntity( entity );\r\n        tiledmap[2][15][1]=keybutton;\r\n\r\n        keydoor+=1;\r\n        keybutton-=1;\r\n        */\r\n       \r\n    }\r\n\r\n    public function update(dt:Float,now:Float):Void {\r\n\r\n         for (entity in this.registeredEntities){\r\n            if(entity.get(ld31.model.DoorComponent)!=null){\r\n                if(entity.get(ld31.model.DoorComponent).remove>0){\r\n                    entity.get(ld31.model.DoorComponent).remove+=1;\r\n                     entity.get(ld31.model.PositionComponent).y-=1;\r\n                    if(entity.get(ld31.model.DoorComponent).remove>Main.HEIGHT){\r\n                        model.removeEntity(entity);\r\n                    }\r\n                }\r\n            }\r\n           \r\n         }\r\n    \r\n    }\r\n}\r\n","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityComponent;\nimport wax.system.EntityTypeComponent;\n\nimport mathtool.V2DU;\n\n//More WeatherComponent\nclass EnvironmentalComponent implements EntityComponent { \n\n//\npublic var wind:Vector2D={x:-10,y:10};\npublic var airdensity:Float=0.001;\npublic var aircomposition:Float=1;//not really nécessary...maybe for the lunge\n\n\npublic function new(){\n\n\n}\npublic function initialise(){}\n\n\n\n}","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityComponent;\r\nimport wax.system.EntityTypeComponent;\r\n\r\nclass ExitComponent implements EntityComponent {\r\n\r\n\r\npublic var level:Int=0;\r\n\r\npublic function new(level:Int){\r\n\r\n\tthis.level=level;\r\n\r\n}\r\n\r\npublic function initialise(){}\r\n\r\n\r\n\r\n}","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityType;\nimport ld31.model.PositionComponent;\nimport ld31.model.PlayerComponent;\nimport ld31.model.VelocityComponent;\n\n@entities(['VelocityComponent','PositionComponent'])\nclass GestionDynamicSystem implements SystemComponent implements Updatable{ \n\n\tpublic function new(typelibrary:Map<String,EntityType>){\n\n\n    }\n\n\tpublic function onEntityRegistered(entity:Entity):Void {\n\n    }\n\n    public function onEntityUnregistered(entity:Entity):Void {\n    }\n\n    public function initialise() : Void{\n\n    }\n\n    public function update(dt:Float,now:Float):Void {\n\n        for (entity in this.registeredEntities){\n            var placementcomponent = entity.get(PositionComponent);\n            var player = entity.get(PlayerComponent);\n            var velocitycomponent = entity.get(VelocityComponent);\n            if(ld31.model.GestionLevelSystem.alerttempo==0){\n                placementcomponent.x+=velocitycomponent.v.x;\n                placementcomponent.y+=velocitycomponent.v.y;\n            }\n\n            // var pos=entity.get(PositionComponent);\n\n            // pos.gx=Std.int(pos.x/Main.WIDTH);\n            // pos.gy=Std.int(pos.y/Main.HEIGHT);\n\n\n        }\n    }\n}\n","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityType;\nimport ld31.model.PositionComponent;\nimport ld31.model.PlayerComponent;\nimport ld31.model.VelocityComponent;\n\nimport ld31.model.EnvironmentalComponent;\n\nimport mathtool.UF;\nimport mathtool.V2DU;\n\n@entities(['PlayerComponent'])\nclass GestionForceSystem implements SystemComponent implements Updatable{ //ModelComponent\n\n\n\n    public function new(typelibrary:Map<String,EntityType>){\n\n    \n    }\n\n    public function onEntityRegistered(entity:Entity):Void {\n      \n    }\n\n    public function onEntityUnregistered(entity:Entity):Void {\n    }\n\n    public function initialise() : Void{\n\n\n    }\n\n    public function update(dt:Float,now:Float):Void {\n        //A revoir\n        var environmentalcomponent:EnvironmentalComponent=new EnvironmentalComponent();\n    \n\n        for (entity in this.registeredEntities){\n            var velocitycomponent = entity.get(VelocityComponent);\n            var playercomponent = entity.get(PlayerComponent);\n            var placementcomponent = entity.get(PositionComponent);\n\n             \n            var jump=playercomponent.jump;\n            var jforce=playercomponent.jumpforce;\n            var canjump=playercomponent.canjump;\n            var direction=playercomponent.direction;\n            var gravity=-ld31.Main.HEIGHT*0.017;\n\n                velocitycomponent.v.x=direction*0.9+velocitycomponent.v.x*0.92;\n                if(velocitycomponent.v.x>ld31.Main.WIDTH/12 ){velocitycomponent.v.x=ld31.Main.WIDTH/12;}\n                else if(velocitycomponent.v.x<-ld31.Main.WIDTH/12 ){velocitycomponent.v.x=-ld31.Main.WIDTH/12;}\n\n                if(velocitycomponent.v.y<0){jump=0;}\n                velocitycomponent.v.y=-jump*canjump*jforce+(gravity*(-1+canjump))+velocitycomponent.v.y*0.94;\n                if(velocitycomponent.v.y>20 ){playercomponent.crash=1;}\n                //trace(velocitycomponent.v.y);\n                if(jump==1 && canjump==1){playercomponent.canjump=0;}\n        }\n    }\n\n\n}\n","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityType;\r\nimport ld31.model.PositionComponent;\r\nimport ld31.model.PlayerComponent;\r\nimport ld31.model.VelocityComponent;\r\n\r\nimport ld31.model.EnvironmentalComponent;\r\n\r\nimport mathtool.UF;\r\nimport mathtool.V2DU;\r\n\r\n@entities(['PlayerComponent'])\r\nclass GestionLevelSystem implements SystemComponent implements Updatable{ //ModelComponent\r\n    private var tiledmap:Array<Array<Array<Int>>>;\r\n    private var alertmove:Int=0;\r\n\r\n    static public var showalertmovelevel:Bool=false;\r\n    static public var showalertpositionGx:Int=0;\r\n    static public var showalertpositionGy:Int=0;\r\n    static public var showalertleveltargeted:Int=0;\r\n    static public var alerttempo:Int=0;\r\n\r\n    static public var hll1:Int=1;\r\n    static public var hll2:Int=0;\r\n    static public var hll3:Int=0;\r\n\r\n\r\n    public function new(typelibrary:Map<String,EntityType>,tiledmap:Array<Array<Array<Int>>>){\r\n        this.tiledmap=tiledmap;\r\n\r\n    \r\n    }\r\n\r\n    public function onEntityRegistered(entity:Entity):Void {\r\n      \r\n    }\r\n\r\n    public function onEntityUnregistered(entity:Entity):Void {\r\n    }\r\n\r\n    public function initialise() : Void{\r\n\r\n\r\n    }\r\n\r\n    public function update(dt:Float,now:Float):Void {\r\n        //A revoir\r\n        var environmentalcomponent:EnvironmentalComponent=new EnvironmentalComponent();\r\n        if(alerttempo>0){\r\n            alerttempo-=1;\r\n        }\r\n\r\n        for (entity in this.registeredEntities){\r\n            var velocitycomponent = entity.get(VelocityComponent);\r\n            var playercomponent = entity.get(PlayerComponent);\r\n            var placementcomponent = entity.get(PositionComponent);\r\n\r\n             \r\n            var level=playercomponent.level;\r\n            var tryin=playercomponent.trytomovein;\r\n            var tryout=playercomponent.trytomoveout;\r\n            var gx=placementcomponent.gx;\r\n            var gy=placementcomponent.gy;\r\n               \r\n                if(tryin==1 && level<2 && alertmove==0 && playercomponent.canjump==1 && alerttempo==0){\r\n                    if( tiledmap[level+1][gx][gy+1]==0 || (tiledmap[level+1][gx][gy]>0 &&  tiledmap[level+1][gx][gy]<7)){\r\n                        //showalertmovelevel=true;\r\n                        showalertleveltargeted=level+1;\r\n                        showalertpositionGx=gx;\r\n                        showalertpositionGy=gy;\r\n                        alerttempo=20;\r\n                        alertmove=0;\r\n\r\n                    }\r\n                    else{\r\n                        alerttempo=10;\r\n                        playercomponent.level+=1;\r\n                        placementcomponent.x=gx*ld31.Main.WIDTH;\r\n                        placementcomponent.y=gy*ld31.Main.HEIGHT;\r\n                    }\r\n                }\r\n                if(tryout==1 && level>0 && alertmove==0 && playercomponent.canjump==1 && alerttempo==0){\r\n                    if(  tiledmap[level-1][gx][gy+1]==0 || (tiledmap[level-1][gx][gy]>0 &&  tiledmap[level-1][gx][gy]<7) ){\r\n                        //showalertmovelevel=true;\r\n                        showalertleveltargeted=level-1;\r\n                        showalertpositionGx=gx;\r\n                        showalertpositionGy=gy;\r\n                        alerttempo=20;\r\n                        alertmove=0;\r\n\r\n                    }\r\n                    else{\r\n                        alerttempo=10;\r\n                        playercomponent.level-=1;\r\n                        placementcomponent.x=gx*ld31.Main.WIDTH;\r\n                        placementcomponent.y=gy*ld31.Main.HEIGHT;\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if(level==0){\r\n            hll1=1;\r\n            hll2=0;\r\n            hll3=0;\r\n        }\r\n        else if(level==1){\r\n            hll1=0;\r\n            hll2=1;\r\n            hll3=0;\r\n        }\r\n        else if(level==2){\r\n            hll1=0;\r\n            hll2=0;\r\n            hll3=1;\r\n        }\r\n        }\r\n\r\n        \r\n        //trace(alerttempo);\r\n        //trace(tryin);\r\n        //trace(tryin);\r\n    \r\n    }\r\n\r\n\r\n}\r\n","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityType;\nimport ld31.model.PositionComponent;\nimport ld31.model.PlayerComponent;\nimport ld31.model.VelocityComponent;\n\ntypedef Gridchecker = {\ngx:Int,\ngy:Int,\nvalue:Int\n}\n\n@entities(['PlayerComponent'])\nclass GridSystem implements SystemComponent implements Updatable{ //ModelComponent\n\n    private var typelibrary:Map<String,EntityType>;\n    private var tiledmap:Array<Array<Array<Int>>>;\n    private var collisionaround:Array<Gridchecker>=[];\n    private var collisionAI:Array<Gridchecker>=[];\n    \n\n\tpublic function new(typelibrary:Map<String,EntityType>,tiledmap:Array<Array<Array<Int>>>){\n        this.tiledmap=tiledmap;\n        this.typelibrary=typelibrary;\n        \n\n\n    }\n\n\tpublic function onEntityRegistered(entity:Entity):Void {\n    }\n\n    public function onEntityUnregistered(entity:Entity):Void {\n    }\n\n    public function initialise() : Void{\n\n        \n    }\n\n    public function update(dt:Float,now:Float):Void {\n        for (entity in this.registeredEntities){\n            var pos=entity.get(PositionComponent);\n            var vel=entity.get(VelocityComponent);\n            var width=pos.width;\n            var height=pos.height;\n            var gx=pos.gx;\n            if(gx>=tiledmap[0].length){\n                pos.x=gx*ld31.Main.WIDTH-5;\n                gx=gx-1;\n                pos.gx=gx-1;\n               \n                entity.get(VelocityComponent).v.x=0;\n            }\n            var gy=pos.gy;\n                        //trace(gy);\n\n            var player=entity.get(PlayerComponent);\n            if(tiledmap[player.level][gx][gy]==-1){\n                Main.exitconditionfullfil=true;\n                //trace(Main.exitconditionfullfil);\n            }\n\n            if(tiledmap[player.level][gx][gy]<-6){\n                var touch=ld31.model.DoorSystem.buttonmap.get(  tiledmap[player.level][gx][gy] );\n                touch.get(ld31.model.ButtonComponent).actif=0;\n                tiledmap[player.level][gx][gy]=0;\n                var updoor=ld31.model.DoorSystem.doormap.get( touch.get(ld31.model.ButtonComponent).keydoor);\n                updoor.get(ld31.model.DoorComponent).remove=1;\n                tiledmap[updoor.get(ld31.model.DoorComponent).level][updoor.get(ld31.model.PositionComponent).gx][updoor.get(ld31.model.PositionComponent).gy]=0;\n                //model.removeEntity(updoor);\n\n            }\n\n            var testerplayer=0;\n            var fgx;\n            var fgy;\n            var max=1;\n             if( gx==tiledmap[0].length-1){max=0;}\n            if(gx==0){fgx=0;}\n            else{fgx=gx-1;}\n            if(gy==0){fgy=0;}\n            else{fgy=gy-1;}\n            for(i in fgx...gx+1+max){\n                for(j in fgy...gy+2){\n                    if(tiledmap[player.level][i][j]>0 && tiledmap[player.level][i][j]<7 ){\n                        collisionaround.push({ gx :i,gy:j,value:tiledmap[player.level][i][j] });\n                        //trace(collisionaround);\n                    }\n                    else if(tiledmap[player.level][i][j]>6){\n                        collisionAI.push({ gx :i,gy:j,value:tiledmap[player.level][i][j] });\n                    }\n\n                }\n            }\n            if(pos.x<0){\n                entity.get(VelocityComponent).v.x=0;\n                pos.x=0;\n            }\n\n            if(pos.y<0){\n                entity.get(VelocityComponent).v.y=0;\n                pos.y=0;\n            }\n            var recordxy:Int=0;\n            var recordxyh:Int=0;\n            var recordxwy:Int=0;\n            var recordxwyh:Int=0;\n            for(checker in collisionaround){\n\n\n                var area=(checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH-checker.gx*ld31.Main.WIDTH)*(checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT-checker.gy*ld31.Main.HEIGHT);\n                \n                var xy= areaof4tri(checker.gx*ld31.Main.WIDTH,checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH,checker.gy*ld31.Main.HEIGHT,checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT,pos.x,pos.y);\n                var xyh= areaof4tri(checker.gx*ld31.Main.WIDTH,checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH,checker.gy*ld31.Main.HEIGHT,checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT,pos.x,pos.y+height);\n                var xwy= areaof4tri(checker.gx*ld31.Main.WIDTH,checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH,checker.gy*ld31.Main.HEIGHT,checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT,pos.x+width,pos.y);\n                var xwyh= areaof4tri(checker.gx*ld31.Main.WIDTH,checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH,checker.gy*ld31.Main.HEIGHT,checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT,pos.x+width,pos.y+height);\n                if(xy==area){recordxy=1;}\n                if(xyh==area){recordxyh=1;}\n                if(xwy==area){recordxwy=1;}\n                if(xwyh==area){recordxwyh=1;}\n\n               if(xy==area && xyh==area && xwy==area && xwyh==area){\n\n                }//left\n                else if(xy==area && xyh==area && xwy!=area && xwyh!=area){\n                    pos.x+=checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH-pos.x;\n                        if(vel.v.x<0){\n                            vel.v.x=0;\n                        }\n\n                }//ground\n                else if(xy!=area && xyh==area && xwy!=area && xwyh==area){\n\n                    pos.y-=(pos.y+height-checker.gy*ld31.Main.HEIGHT);\n                    if(vel.v.y>0){\n                        vel.v.y=0;\n                    }\n                    //entity.get(VelocityComponent).v.y=0;\n                    testerplayer=1;\n                    \n                }//top\n                else if(xy==area && xyh!=area && xwy==area && xwyh!=area){\n                    pos.y+=checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT-pos.y;\n                         if(vel.v.y<0){\n                            vel.v.y=0;}\n\n                }//right\n                else if(xy!=area && xyh!=area && xwy==area && xwyh==area){\n                    pos.x-=(pos.x+width-checker.gx*ld31.Main.WIDTH);\n                    if(vel.v.x>0){\n                        vel.v.x=0;\n                    }\n\n                }//A\n                else if(xy==area && xyh!=area && xwy!=area && xwyh!=area){\n                    if(pos.x-checker.gx*ld31.Main.WIDTH>(ld31.Main.WIDTH-4) && pos.y-checker.gy*ld31.Main.HEIGHT>(ld31.Main.HEIGHT-4) ){\n                    }\n                    else if(pos.x-checker.gx*ld31.Main.WIDTH<(ld31.Main.WIDTH-5)  && pos.y-checker.gy*ld31.Main.HEIGHT>(ld31.Main.HEIGHT-4)){\n                         pos.y+=checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT-pos.y;\n                         if(vel.v.y<0){\n                            vel.v.y=0;}\n                    }\n                    else{\n                        pos.x+=checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH-pos.x;\n                        if(vel.v.x<0){\n                            vel.v.x=0;\n                        }\n                    }\n\n\n                }//C\n                else if(xy!=area && xyh==area && xwy!=area && xwyh!=area){\n                    if(pos.x-checker.gx*ld31.Main.WIDTH>(ld31.Main.WIDTH-4) && pos.y+height-checker.gy*ld31.Main.HEIGHT<(5) ){\n                    }\n                    else if(pos.x-checker.gx*ld31.Main.WIDTH>(ld31.Main.WIDTH-4) && pos.y+height-checker.gy*ld31.Main.HEIGHT>(4) ){\n                        pos.x+=checker.gx*ld31.Main.WIDTH+ld31.Main.WIDTH-pos.x;\n                    }\n                    else{ \n                        pos.y-=(pos.y+height-checker.gy*ld31.Main.HEIGHT);\n                        if(vel.v.y>0){\n                        vel.v.y=0;\n                    }\n                    //entity.get(VelocityComponent).v.y=0;\n                        testerplayer=1;\n                    }\n\n                }//B\n                else if(xy!=area && xyh!=area && xwy==area && xwyh!=area){\n                    if(pos.x+width-checker.gx*ld31.Main.WIDTH<(5) && pos.y-checker.gy*ld31.Main.HEIGHT>(ld31.Main.HEIGHT-4) ){\n                    }\n                    else if(pos.x+width-checker.gx*ld31.Main.WIDTH>(4)  && pos.y-checker.gy*ld31.Main.HEIGHT>(ld31.Main.HEIGHT-4)){\n                         pos.y+=checker.gy*ld31.Main.HEIGHT+ld31.Main.HEIGHT-pos.y;\n                         if(vel.v.y<0){\n                            vel.v.y=0;}\n                    }\n                    else{\n                        pos.x-=(pos.x+width-checker.gx*ld31.Main.WIDTH);\n                        if(vel.v.x>0){\n                            vel.v.x=0;\n                        }\n                    }\n\n                }//D\n                else if(xy!=area && xyh!=area && xwy!=area && xwyh==area){\n                    if(pos.x+width-checker.gx*ld31.Main.WIDTH<(5) && pos.y+height-checker.gy*ld31.Main.HEIGHT<(5) ){\n                    }\n                    else if(pos.x+width-checker.gx*ld31.Main.WIDTH<(5)  && pos.y+height-checker.gy*ld31.Main.HEIGHT>(4)){\n                        pos.x-=pos.x+width-checker.gx*ld31.Main.WIDTH;\n                    }\n                    else{ \n                        pos.y-=(pos.y+height-checker.gy*ld31.Main.HEIGHT);\n                        if(vel.v.y>0){\n                        vel.v.y=0;\n                    }\n                    //entity.get(VelocityComponent).v.y=0;\n                        testerplayer=1;\n                    }\n\n                }\n                //trace (p-area);\n            }\n\n\n\n\n            for(checker in collisionAI){\n                var map=model.get(ld31.model.AISystem).keymapai;\n                var foe=map.get(checker.value);\n                var ai=foe.get(ld31.model.AIComponent);\n                var aipos=foe.get(PositionComponent);\n                var hor:Bool=aipos.x+aipos.width<=(pos.x) || aipos.x>=(pos.x+width);\n                var ver:Bool= aipos.y+aipos.height<=(pos.y) || aipos.y>=(pos.y+height);\n                var separ:Bool= hor || ver;\n                if(separ==false && player.recuperation<1){\n                    player.lives-=1;\n                    player.recuperation=45;\n                    //trace(player.lives);\n                }\n            }\n            \n             collisionaround=[];\n             collisionAI=[];\n             //trace(collisionaround.length);\n            \n             player.canjump=testerplayer;\n            pos.gx=Std.int(pos.x/Main.WIDTH);\n            pos.gy=Std.int(pos.y/Main.HEIGHT);\n\n            //trace(testerplayer);\n            \n        }\n    }\n    //point inisde rectangle\n    private function areaof4tri(X:Float,XW:Float,Y:Float,YH:Float,pointX:Float,pointY:Float):Float{\n        var t1=triarea(XW-X,Math.abs(pointY-Y));\n        var t2=triarea(XW-X,Math.abs(YH-pointY));\n        var t3=triarea(YH-Y,Math.abs(pointX-X));\n        var t4=triarea(YH-Y,Math.abs(XW-pointX));\n\n        return t1+t2+t3+t4;\n    }\n    private function triarea(A:Float,B:Float):Float{\n        return 0.5*A*B;\n    }\n}\n","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityComponent;\nimport wax.system.EntityTypeComponent;\n\nclass PlayerComponent implements EntityComponent {\n\npublic var jump:Int=0;\npublic var jumpforce:Float=30*Main.HEIGHT/100;\npublic var canjump:Int=0;\npublic var crouch:Int=0;\n\npublic var direction:Int=0;\npublic var onground:Int=0;\npublic var wallleft:Int=0;\npublic var wallright:Int=0;\npublic var roof:Int=0;\npublic var trytomovein:Int=0;\npublic var trytomoveout:Int=0;\npublic var level:Int=0;\npublic var lives:Int=3;\npublic var recuperation:Int=0;\n\npublic var crash:Int=0;\n\n\npublic function new(level:Int){\n\tthis.level=level;\n}\npublic function initialise(){}\n\n\n\n}","package ld31.model;\n\nimport wax.asset.Image;\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityType;\nimport ld31.model.PositionComponent;\n\n@entities(['PlayerComponent'])\nclass PlayerSystem implements SystemComponent implements Updatable{ //ModelComponent\n\n    private var typelibrary:Map<String,EntityType>;\n\n\n\tpublic function new(typelibrary:Map<String,EntityType>){\n\n        this.typelibrary=typelibrary;\n\n\n    }\n\n\tpublic function onEntityRegistered(entity:Entity):Void {\n        \n    }\n\n    public function onEntityUnregistered(entity:Entity):Void {\n    }\n\n    public function initialise() : Void{\n\n        \n        var playertype = typelibrary.get(\"player\");\n        var entity=playertype.createEntity([\n            new PositionComponent(Main.WIDTH*0,Main.HEIGHT*12,(Main.HEIGHT*68/118)/2,Main.HEIGHT/2*2,0, Std.int(0/Main.WIDTH), Std.int(0/Main.HEIGHT)),\n            new PlayerComponent(0),\n            new VelocityComponent()]);\n\n        model.addEntity( entity );\n       \n    }\n\n    public function update(dt:Float,now:Float):Void {\n         for (entity in this.registeredEntities){\n            var player=entity.get(ld31.model.PlayerComponent);\n            if(player.recuperation>0){\n                player.recuperation-=1;\n            }\n            if(player.lives==0){\n                ld31.Main.gameover=true;\n            }\n            //trace(player.crash);\n         }\n    \n    }\n}\n","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityComponent;\nimport wax.system.EntityTypeComponent;\n\nclass PlayerTypeComponent implements EntityTypeComponent { \n\n\npublic var playable:Int=1;\n//to get access: entity.type.get(MotorTypeComponent).acceleration\n\npublic function new(){}\n\n//TODO \n//src/model/MotorTypeComponent.hx:9: lines 9-14 : Field populateEntity needed by wax.system.EntityTypeComponent is missing\npublic function populateEntity(entityComponents : Array<EntityComponent>){}\n\n//TODO\n//src/model/MotorTypeComponent.hx:9: lines 9-14 : Field initialise needed by wax.system.Component is missing\npublic function initialise(){}\n\n\n}","package ld31.model;\n\nimport wax.system.EntityComponent;\n\nclass PositionComponent implements EntityComponent{\n\n\tpublic var x : Float = 0;\n\tpublic var y : Float = 0;\n\tpublic var width : Float = 0;\n\tpublic var height : Float = 0;\n    public var angle : Float = 0;\n    public var gx : Int = 0;\n    public var gy : Int = 0;\n    public var tpgx : Int = 0;\n    public var tpgy : Int = 0;\n    //TOREAD\n    //angle related name are temporary and may add radius later on ... \n    //public var radius : Float = 0;\n    //public var yaw : Float = 0;\n    //public var pitch : Float = 0;\n    \n\n    public function new(x : Float, y : Float, width : Float, height : Float, angle:Float,gx:Int,gy:Int){\n        this.x =x;\n        this.y =y;\n        this.width =width;\n        this.height =height;\n        this.angle =angle;\n        this.gx=gx;\n        this.gy=gy;\n\n    }\n\n    public function initialise():Void{\n\n    }\n}\n","package ld31.model;\r\n\r\nimport wax.system.Updatable;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\nimport wax.system.EntityComponent;\r\nimport wax.system.EntityTypeComponent;\r\n\r\nclass SwitchComponent implements EntityComponent {\r\n\r\n\r\n\r\npublic function new(){\r\n\r\n\r\n}\r\n\r\npublic function initialise(){}\r\n\r\n\r\n\r\n}","package ld31.model;\n\nimport wax.system.Updatable;\nimport wax.system.SystemComponent;\nimport wax.system.Model;\nimport wax.system.Entity;\nimport wax.system.EntityComponent;\nimport wax.system.EntityTypeComponent;\nimport mathtool.V2DU;\n\nclass VelocityComponent implements EntityComponent {\n\npublic function new(){}\npublic function initialise(){}\npublic var v:Vector2D={x:0,y:0};\npublic var vX:Float=0;\npublic var vY:Float=0;\npublic var vZ:Float=0;\npublic var vNorme:Float=0;\npublic var vRotation:Float=0;\n\n}","package ld31.view;\r\n\r\n\r\nimport box.gl.GL;\r\nimport ld31.model.CameraSystem;\r\nimport ld31.model.PlayerComponent;\r\nimport ld31.model.PositionComponent;\r\nimport box.Window;\r\nimport glow.GPUBuffer;\r\nimport glow.GPUTexture;\r\nimport korrigan.NormalTexturedProgram;\r\nimport korrigan.SpriteLibrary;\r\nimport wax.system.SystemComponent;\r\nimport wax.system.Updatable;\r\nimport wax.system.Model;\r\nimport wax.system.Entity;\r\n\r\nimport tink.core.Signal;\r\nimport tink.core.Signal.SignalTrigger;\r\n\r\nimport glow.GPU;\r\nimport egg.Batch;\r\nimport box.asset.Image;\r\nimport korrigan.TransformationContext;\r\n\r\nclass Presenter implements Updatable{\r\n\r\n\r\n\tinline public static var PLAYER_SPRITE:String = \"blipt\";\r\n\tinline public static var BUTTON1_SPRITE:String = \"mauve\";\r\n\tinline public static var BUTTON2_SPRITE:String = \"bleu\";\r\n\tinline public static var BUTTON3_SPRITE:String = \"orange\";\r\n\tinline public static var BUTTONNO_SPRITE:String= \"vide\";\r\n\tinline public static var FOE1_SPRITE:String = \"clo1\";\r\n\tinline public static var FOE2_SPRITE:String = \"clo2\";\r\n\tinline public static var STATICFOE1_SPRITE:String = \"pieux\";\r\n\tinline public static var EXIT_SPRITE:String = \"exit\";\r\n\tinline public static var BACK_SPRITE:String = \"fond\";\r\n\tinline public static var WELLDONE_SPRITE:String = \"welldone\";\r\n\tinline public static var GAMEOVER_SPRITE:String = \"gameover\";\r\n\tinline public static var END_SPRITE:String = \"end\";\r\n\r\n\tinline public static var ONE_SPRITE:String = \"3\";\r\n\tinline public static var TWO_SPRITE:String = \"1\";\r\n\tinline public static var THREE_SPRITE:String = \"2\";\r\n\tinline public static var FOUR_SPRITE:String = \"red\";\r\n\r\n\tinline public static var DOORONE_SPRITE:String = \"4\";\r\n\tinline public static var DOORTWO_SPRITE:String = \"5\";\r\n\tinline public static var DOORTHREE_SPRITE:String = \"6\";\r\n\r\n\t//inline public static var TILEDMAP_URL:String = \"img/map1.json\";\r\n\r\n\tvar image : Image;\r\n\tvar _texture : GPUTexture;\r\n\tvar _normalTexture : GPUTexture;\r\n\tprivate var tiledmap:Array<Array<Array<Int>>>;\r\n\r\n\tvar entitiesRegistered : Array<Entity> = new Array();\r\n\r\n\tpublic var entityUnderMouse : Entity = null;\r\n\tstatic public var screenwidth : Int = 0;\r\n\tstatic public var screenheight : Int = 0;\r\n    static public var mapwidth : Int = 0;\r\n    static public var mapheight : Int = 0;\r\n\r\n    \r\n\t\r\n\tvar gpu : GPU;\r\n\tvar context : TransformationContext;\r\n\tvar program : NormalTexturedProgram;\r\n\tvar buffer  : GPUBuffer<NormalTexturedProgram>;\r\n\tvar window : Window;\r\n\tvar spriteLibrary : SpriteLibrary;\r\n\r\n\tpublic function new(window : Window, spriteLibrary : SpriteLibrary, gpu : GPU, image : Image, normal : Image, tiledmap:Array<Array<Array<Int>>>){\r\n\t\tthis.gpu = gpu;\r\n\t\tthis.image = image;\r\n\t\t_texture = gpu.uploadTexture(image);\r\n\t\t_normalTexture = gpu.uploadTexture(normal);\r\n\t\tthis.spriteLibrary = spriteLibrary;\r\n\t\tthis.window = window;\r\n\t\tcontext = new TransformationContext();\r\n\t\tprogram = NormalTexturedProgram.upload(gpu);\t\t\r\n\t\tbuffer = new GPUBuffer<NormalTexturedProgram>(gpu, GL.DYNAMIC_DRAW);\r\n\r\n\r\n\t\tthis.tiledmap=tiledmap;\r\n\t\tscreenwidth= Std.int(window.width);\r\n\t\t//trace(screenwidth);\r\n\t\tscreenheight= Std.int(window.height);\r\n\t\tmapwidth=tiledmap[0].length*ld31.Main.WIDTH;\r\n\t\tmapheight=tiledmap[0][0].length*ld31.Main.HEIGHT;\r\n\r\n\t}\r\n\r\n\tpublic function present(model : Model) : Void{\r\n\t\tmodel.onEntityAdded.add(entityAdded);\r\n\t\tmodel.onEntityRemoved.add(entityRemoved);\r\n\t\tfor (entity in model.entities){\r\n\t\t\tentityAdded(entity);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate function entityAdded(entity : Entity){\r\n\t\tif(entity.get(ld31.model.PositionComponent) != null){\r\n\t\t\tentitiesRegistered.push(entity);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate function entityRemoved(entity : Entity){\r\n\t\tif(entity.get(ld31.model.PositionComponent) != null){\r\n\t\t\tentitiesRegistered.remove(entity);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function update(dt : Float, now : Float) : Void{\r\n\r\n\r\n\t\tvar playerX = 0.0;\r\n\t\tvar playerY = 0.0;\r\n\t\tvar player : PlayerComponent = null;\r\n\r\n\t\tvar levels = new Map<Int,Array<Entity>>();\r\n\t\tfor (entity in entitiesRegistered){\r\n\t        if(entity.get(ld31.model.PlayerComponent)!=null){\r\n\t        \tvar placementComponent = entity.get(ld31.model.PositionComponent);\r\n\t        \tplayer=entity.get(ld31.model.PlayerComponent);\r\n\t        \tvar offsetwidth=0.01*player.level;\r\n\t    \t\tvar perspecwidth=1-0.02*player.level;\r\n\t    \t\tvar offsetheight=-0.02*player.level;\r\n\t    \t\tvar perspecheight=1-0*player.level;\r\n\t        \tvar xpos=(placementComponent.x+placementComponent.width/2)*perspecwidth+screenwidth*offsetwidth;\r\n      \t\t\tvar ypos= (placementComponent.y+placementComponent.height/2)*perspecheight+screenheight*offsetheight;\r\n            \tplayerX = xpos;\r\n            \tplayerY = ypos;\r\n\t        \tvar entities = null;\r\n\t        \tif(!levels.exists(player.level)){\r\n\t        \t\tentities = new Array<Entity>();\r\n\t        \t\tlevels[player.level] = entities;\r\n\t        \t}else{\r\n\t        \t\tentities = levels[player.level];\r\n\t        \t}\r\n\t        \tentities.push(entity);\r\n\t        \t\r\n            \t\r\n            }\r\n            else if(entity.get(ld31.model.AIComponent)!=null){\r\n\r\n            \tvar ai=entity.get(ld31.model.AIComponent);\r\n\t        \tvar entities = null;\r\n\t        \tif(!levels.exists(ai.level)){\r\n\t        \t\tentities = new Array<Entity>();\r\n\t        \t\tlevels[ai.level] = entities;\r\n\t        \t}else{\r\n\t        \t\tentities = levels[ai.level];\r\n\t        \t}\r\n\t        \tentities.push(entity);\r\n            }\r\n            else if(entity.get(ld31.model.ExitComponent)!=null){\r\n            \tvar exit=entity.get(ld31.model.ExitComponent);\r\n\t        \tvar entities = null;\r\n\t        \tif(!levels.exists(exit.level)){\r\n\t        \t\tentities = new Array<Entity>();\r\n\t        \t\tlevels[exit.level] = entities;\r\n\t        \t}else{\r\n\t        \t\tentities = levels[exit.level];\r\n\t        \t}\r\n\t        \tentities.push(entity);\r\n            }\r\n            else if(entity.get(ld31.model.DoorComponent)!=null){\r\n            \tvar door=entity.get(ld31.model.DoorComponent);\r\n\t        \tvar entities = null;\r\n\t        \tif(!levels.exists(door.level)){\r\n\t        \t\tentities = new Array<Entity>();\r\n\t        \t\tlevels[door.level] = entities;\r\n\t        \t}else{\r\n\t        \t\tentities = levels[door.level];\r\n\t        \t}\r\n\t        \tentities.push(entity);\r\n            }\r\n            else if(entity.get(ld31.model.ButtonComponent)!=null){\r\n            \tvar button=entity.get(ld31.model.ButtonComponent);\r\n\t        \tvar entities = null;\r\n\t        \tif(!levels.exists(button.level)){\r\n\t        \t\tentities = new Array<Entity>();\r\n\t        \t\tlevels[button.level] = entities;\r\n\t        \t}else{\r\n\t        \t\tentities = levels[button.level];\r\n\t        \t}\r\n\t        \tentities.push(entity);\r\n            }\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\t//TODO move into draw:\r\n\t\twindow.gl.enable(GL.BLEND);\r\n\t\twindow.gl.blendFunc(GL.ONE, GL.ONE_MINUS_SRC_ALPHA);\r\n\r\n\t\tcontext.save();\r\n\r\n\t\tcontext.setAlpha(1);\r\n\r\n\t\t//TODO simplify this :\r\n\t\twindow.resize();//todo on resize event\r\n\t\tvar width = Std.int(window.width);\r\n\t\tvar height = Std.int(window.height);\r\n\t\twindow.gl.viewport(0, 0, width , height);//window.gl.drawingBufferWidth, window.gl.drawingBufferHeight);\r\n\t\tcontext.ortho(0, width, height,0,-1,1);\r\n\r\n\r\n\r\n\t\t//gpu.clearWith(0.75,0.9,0.9, 1.0);\r\n\r\n\t\t//gpu.clearWith(0.3,0.09,0.3, 1.0);\r\n\t\t//gpu.clearWith(0,0,0, 1.0);\r\n\t\tgpu.clearWith(0,0,0, 1.0);\r\n\r\n\t\tbuffer.rewind();\r\n\t\tif(ld31.Main.gameover==true){\r\n\t    \tcontext.setAlpha(1);\r\n\t    \tspriteLibrary.draw(buffer,context,GAMEOVER_SPRITE,\"idle\",1,3*screenwidth/4,screenheight/2,0,120,120);\r\n\t    \tspriteLibrary.draw(buffer,context,END_SPRITE,\"idle\",1,screenwidth/2,screenheight/2,0,240,240);\r\n\t    \tprogram.set_ambientColor(1,1,1,1);\r\n\t    }\r\n\t    else{\r\n\t\tvar cX=ld31.model.CameraSystem.cameraX;\r\n\t    var cY=ld31.model.CameraSystem.cameraY;\r\n\t    var hll1=ld31.model.GestionLevelSystem.hll1;\r\n\t    var hll2=ld31.model.GestionLevelSystem.hll2;\r\n\t    var hll3=ld31.model.GestionLevelSystem.hll3;\r\n\t    var imagechoise;\r\n\t    //spriteLibrary.draw(buffer,context,BACK_SPRITE,\"idle\",1,screenwidth/2,screenheight/2,0,screenwidth,screenheight ,false);\r\n\r\n\t    context.setAlpha(0.2);\r\n\t     for(i in cX ... Std.int(width/Main.WIDTH)+cX){\r\n\t    \tfor(j in 0 ...tiledmap[2][i].length){\r\n\t    \t\t\r\n\t    \t\tif(tiledmap[2][i][j]==1){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,ONE_SPRITE,\"idle\",1,((i-cX)*Main.WIDTH+Main.WIDTH/2)*0.96+screenwidth*0.02,((j-cY)*Main.HEIGHT+Main.HEIGHT/2)*1+screenheight*-0.04,0,Main.WIDTH*0.96, Main.HEIGHT*1,false);\r\n\t    \t\t\t\r\n\t    \t\t}\r\n\t    \t\telse if(tiledmap[2][i][j]==2){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,TWO_SPRITE,\"idle\",1,((i-cX)*Main.WIDTH+Main.WIDTH/2)*0.96+screenwidth*0.02,((j-cY)*Main.HEIGHT+Main.HEIGHT/2)*1+screenheight*-0.04,0,Main.WIDTH*0.96, Main.HEIGHT*1,false);\r\n\t    \t\t}\r\n\t    \t\telse if(tiledmap[2][i][j]==3){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,THREE_SPRITE,\"idle\",1,((i-cX)*Main.WIDTH+Main.WIDTH/2)*0.96+screenwidth*0.02,((j-cY)*Main.HEIGHT+Main.HEIGHT/2)*1+screenheight*-0.04,0,Main.WIDTH*0.96, Main.HEIGHT*1,false);\r\n\t    \t\t}\r\n \t\t\t\t\r\n\t    \t}\r\n\t    \t\r\n\t    }\r\n\t\tdrawInLevel(levels, 2);\r\n\r\n\t    context.setAlpha(0.5);\r\n\t     for(i in cX ... Std.int(width/Main.WIDTH)+cX){\r\n\t    \tfor(j in 0 ...tiledmap[1][i].length){\r\n\t    \t\t\r\n\t    \t\tif(tiledmap[1][i][j]==1){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,ONE_SPRITE,\"idle\",1,((i-cX)*Main.WIDTH+Main.WIDTH/2)*0.98+screenwidth*0.01,((j-cY)*Main.HEIGHT+Main.HEIGHT/2)*1+screenheight*-0.02,0,Main.WIDTH*0.98, Main.HEIGHT*1,false);\r\n\t    \t\t\t\r\n\t    \t\t}\r\n\t    \t\telse if(tiledmap[1][i][j]==2){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,TWO_SPRITE,\"idle\",1,((i-cX)*Main.WIDTH+Main.WIDTH/2)*0.98+screenwidth*0.01,((j-cY)*Main.HEIGHT+Main.HEIGHT/2)*1+screenheight*-0.02,0,Main.WIDTH*0.98, Main.HEIGHT*1,false);\r\n\t    \t\t}\r\n\t    \t\telse if(tiledmap[1][i][j]==3){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,THREE_SPRITE,\"idle\",1,((i-cX)*Main.WIDTH+Main.WIDTH/2)*0.98+screenwidth*0.01,((j-cY)*Main.HEIGHT+Main.HEIGHT/2)*1+screenheight*-0.02,0,Main.WIDTH*0.98, Main.HEIGHT*1,false);\r\n\t    \t\t}\r\n \t\t\t\t\r\n\t    \t}\r\n\t    \t\r\n\t    }\r\n\t\tdrawInLevel(levels, 1);\r\n\r\n\t    context.setAlpha(1);\r\n\r\n\t    for(i in cX ... Std.int(width/Main.WIDTH)+cX){\r\n\t    \tfor(j in 0 ...tiledmap[0][i].length){\r\n\t    \t\t\r\n\t    \t\tif(tiledmap[0][i][j]==1){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,ONE_SPRITE,\"idle\",1,(i-cX)*Main.WIDTH+Main.WIDTH/2,(j-cY)*Main.HEIGHT+Main.HEIGHT/2,0,Main.WIDTH, Main.HEIGHT,false);\r\n\t    \t\t\t\r\n\t    \t\t}\r\n\t    \t\telse if(tiledmap[0][i][j]==2){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,TWO_SPRITE,\"idle\",1,(i-cX)*Main.WIDTH+Main.WIDTH/2,(j-cY)*Main.HEIGHT+Main.HEIGHT/2,0,Main.WIDTH, Main.HEIGHT,false);\r\n\t    \t\t}\r\n\t    \t\telse if(tiledmap[0][i][j]==3){\r\n\t    \t\t\tspriteLibrary.draw(buffer,context,THREE_SPRITE,\"idle\",1,(i-cX)*Main.WIDTH+Main.WIDTH/2,(j-cY)*Main.HEIGHT+Main.HEIGHT/2,0,Main.WIDTH, Main.HEIGHT,false);\r\n\t    \t\t}\r\n \t\t\t\t\r\n\t    \t}\r\n\t    \t\r\n\t    }\r\n\t\tdrawInLevel(levels, 0);\r\n\r\n\r\n\t    context.setAlpha(0.1);\r\n\t    var test=ld31.model.GestionLevelSystem.showalertmovelevel;\r\n\t    var tempo=ld31.model.GestionLevelSystem.alerttempo;\r\n\t    if( tempo>0){\r\n\t    \tvar shgx=ld31.model.GestionLevelSystem.showalertpositionGx;\r\n\t    \tvar shgy=ld31.model.GestionLevelSystem.showalertpositionGy;\r\n\t    \tvar targetlevel=ld31.model.GestionLevelSystem.showalertleveltargeted;\r\n\t    \tvar offsetwidth=0.01*targetlevel;\r\n\t    \tvar perspecwidth=1-0.02*targetlevel;\r\n\t    \tvar offsetheight=-0.02*targetlevel;\r\n\t    \tvar perspecheight=1-0*targetlevel;\r\n\t\t\tspriteLibrary.draw(buffer,context,FOUR_SPRITE,\"idle\",1,(shgx*Main.WIDTH+Main.WIDTH/2)*perspecwidth+screenwidth*offsetwidth,(shgy*Main.HEIGHT+Main.HEIGHT/2)*perspecheight+screenheight*offsetheight,0,Main.WIDTH*perspecwidth, Main.HEIGHT*perspecheight,false);\r\n\t\t}\r\n\r\n\r\n\t    \tif(ld31.Main.exitconditionfullfil==true){\r\n\t\t\tcontext.setAlpha(1);\r\n\t    \tspriteLibrary.draw(buffer,context,WELLDONE_SPRITE,\"idle\",1,20*Main.WIDTH,Main.HEIGHT*10,0,120,120);\r\n\t    \tspriteLibrary.draw(buffer,context,END_SPRITE,\"idle\",1,screenwidth/2,screenheight/2,0,240,240);\r\n\t    \tprogram.set_ambientColor(1,1,1,1);\r\n\t    \t}\r\n\t   \t \telse{\r\n\t   \t \t\tprogram.set_ambientColor(1,0,0,0);\r\n\t   \t \t}\r\n\t\t\r\n\t    \t\r\n\t    \t//program.set_ambientColor(1,1,1,1);\r\n\t    }\r\n\r\n\t\t\r\n\t\tprogram.set_lightPos(playerX, playerY, 0.1);\r\n\t\tprogram.set_lightColor(1,1,1,3);\r\n\t\t\r\n\t\tprogram.set_resolution(width,height);\r\n\t\tprogram.set_falloff(0,4,80); //TODO? would clear cache and set values to be uploaded only\r\n\t\tprogram.set_tex(_texture);\r\n\t\tprogram.set_normal(_normalTexture);\r\n\t\t\r\n\t\tprogram.draw(buffer); //TODO should be able to specify the number of indices/vertices\r\n\t\t//TODO? should be able to specify gpu state ?\r\n\r\n\r\n\t\tcontext.setAlpha(1);\r\n\t\tbuffer.rewind();\r\n\t   \tif(player.lives>0){\r\n    \t\tfor(i in 0 ... player.lives){\r\n    \t\t\tspriteLibrary.draw(buffer,context,PLAYER_SPRITE,\"idle\",1,screenwidth-(Main.WIDTH+Main.WIDTH*i),Main.HEIGHT,0,Main.WIDTH/2, Main.HEIGHT/2);\r\n    \t\t}\r\n    \t}\r\n\r\n    \tprogram.set_lightPos(playerX, playerY, 0.1);\r\n\t\tprogram.set_lightColor(1,1,1,1);\r\n\t\tprogram.set_ambientColor(1,1,1,1);\r\n\t\tprogram.set_resolution(width,height);\r\n\t\tprogram.set_falloff(1,4,8); //TODO? would clear cache and set values to be uploaded only\r\n\t\tprogram.set_tex(_texture);\r\n\t\tprogram.set_normal(_normalTexture);\r\n\t\t\r\n\t\tprogram.draw(buffer);\r\n\t\t\r\n\t\tcontext.restore();\r\n\t}\r\n\r\n\tfunction drawInLevel(levels : Map<Int,Array<Entity>>, level : Int){\r\n\t\tif (!levels.exists(level)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar entities = levels[level];\r\n\t\tfor (entity in entities){\r\n\r\n\t        var placementComponent = entity.get(ld31.model.PositionComponent);\r\n\t        if(entity.get(ld31.model.PlayerComponent)!=null){\r\n\t        \tcontext.save();\r\n\t        \tcontext.setAlpha(1);\r\n\t        \tvar player=entity.get(ld31.model.PlayerComponent);\r\n\t        \tvar offsetwidth=0.01*player.level;\r\n\t    \t\tvar perspecwidth=1-0.02*player.level;\r\n\t    \t\tvar offsetheight=-0.02*player.level;\r\n\t    \t\tvar perspecheight=1-0*player.level;\r\n      \t\t\tvar xpos=(placementComponent.x+placementComponent.width/2)*perspecwidth+screenwidth*offsetwidth;\r\n      \t\t\tvar ypos= (placementComponent.y+placementComponent.height/2)*perspecheight+screenheight*offsetheight;\r\n            \tspriteLibrary.draw(buffer,context,PLAYER_SPRITE,\"idle\",1,xpos,ypos,0,Main.WIDTH*perspecwidth, Main.HEIGHT*perspecheight);\r\n            \tif(player.lives>0){\r\n            \t\tfor(i in 0 ... player.lives){\r\n            \t\t\tspriteLibrary.draw(buffer,context,PLAYER_SPRITE,\"idle\",1,screenwidth-(Main.WIDTH+Main.WIDTH*i),Main.HEIGHT,0,Main.WIDTH/2, Main.HEIGHT/2);\r\n            \t\t}\r\n            \t}\r\n            \tcontext.restore();\r\n            }\r\n            else if(entity.get(ld31.model.AIComponent)!=null){\r\n\r\n            \tvar ai=entity.get(ld31.model.AIComponent);\r\n            \t\r\n\t        \tvar side:String=FOE1_SPRITE;\r\n\t        \tif(ai.typeoffoe==1){\r\n\t        \t\tside=FOE1_SPRITE;\r\n\t        \t\tif(ai.velo<0){side=FOE2_SPRITE;}\r\n\t        \t}\r\n\t        \telse if(ai.typeoffoe==2){\r\n\t        \t\tside=STATICFOE1_SPRITE;\r\n\t        \t}\r\n\t        \tvar offsetwidth=0.01*ai.level;\r\n\t    \t\tvar perspecwidth=1-0.02*ai.level;\r\n\t    \t\tvar offsetheight=-0.02*ai.level;\r\n\t    \t\tvar perspecheight=1-0*ai.level;\r\n      \t\t\tvar xpos=(placementComponent.x+placementComponent.width/2)*perspecwidth+screenwidth*offsetwidth;\r\n      \t\t\tvar ypos= (placementComponent.y+placementComponent.height/2)*perspecheight+screenheight*offsetheight;\r\n            \tspriteLibrary.draw(buffer,context,side,\"idle\",1,xpos,ypos,0,Main.WIDTH*1, Main.HEIGHT*1);\r\n            }\r\n            else if(entity.get(ld31.model.ExitComponent)!=null){\r\n            \tvar exit=entity.get(ld31.model.ExitComponent);\r\n            \tvar offsetwidth=0.01*exit.level;\r\n\t    \t\tvar perspecwidth=1-0.02*exit.level;\r\n\t    \t\tvar offsetheight=-0.02*exit.level;\r\n\t    \t\tvar perspecheight=1-0*exit.level;\r\n            \tvar xpos=(placementComponent.x+placementComponent.width/2)*perspecwidth+screenwidth*offsetwidth;\r\n      \t\t\tvar ypos= (placementComponent.y+placementComponent.height/2)*perspecheight+screenheight*offsetheight;\r\n            \tspriteLibrary.draw(buffer,context,EXIT_SPRITE,\"idle\",1,xpos,ypos,0,Main.WIDTH*1, Main.HEIGHT*1,false);\r\n            }\r\n            else if(entity.get(ld31.model.DoorComponent)!=null){\r\n            \tvar door=entity.get(ld31.model.DoorComponent);\r\n            \tvar offsetwidth=0.01*door.level;\r\n\t    \t\tvar perspecwidth=1-0.02*door.level;\r\n\t    \t\tvar offsetheight=-0.02*door.level;\r\n\t    \t\tvar perspecheight=1-0*door.level;\r\n            \tvar xpos=(placementComponent.gx*Main.WIDTH+Main.WIDTH/2)*perspecwidth+screenwidth*offsetwidth;\r\n      \t\t\tvar ypos= (placementComponent.y+Main.HEIGHT/2)*perspecheight+screenheight*offsetheight;\r\n            \tspriteLibrary.draw(buffer,context,door.wall,\"idle\",1,xpos,ypos,0,Main.WIDTH*1, Main.HEIGHT*1,false);\r\n            }\r\n            else if(entity.get(ld31.model.ButtonComponent)!=null){\r\n            \tvar button=entity.get(ld31.model.ButtonComponent);\r\n            \tvar offsetwidth=0.01*button.level;\r\n\t    \t\tvar perspecwidth=1-0.02*button.level;\r\n\t    \t\tvar offsetheight=-0.02*button.level;\r\n\t    \t\tvar perspecheight=1-0*button.level;\r\n\t    \t\tvar side:String=BUTTON1_SPRITE;\r\n\t        \tif(button.actif==1){\r\n\t        \t\tside=button.view;\r\n\t        \t}\r\n\t        \telse if(button.actif==0){\r\n\t        \t\tside=BUTTONNO_SPRITE;\r\n\t        \t}\r\n            \tvar xpos=(placementComponent.x+placementComponent.width/2)*perspecwidth+screenwidth*offsetwidth;\r\n      \t\t\tvar ypos= (placementComponent.y+placementComponent.height/2)*perspecheight+screenheight*offsetheight;\r\n            \tspriteLibrary.draw(buffer,context,side,\"idle\",1,xpos,ypos,0,Main.WIDTH*1, Main.HEIGHT*1);\r\n            }\r\n\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\r\n}","package mathtool;\n\n//typedef Vector2D = { x:Float,y:Float };//add with ? Norm and angle for polar coordinate\n\n\nclass UF{ //For Useful\n\tstatic public function InCircle(x:Float,y:Float,xc:Float,yc:Float,r:Float):Bool{\n    \treturn Math.pow(x-xc,2)+Math.pow(y-yc,2)<=Math.pow(r,2);\n    }\n\n\tstatic public function XYtoRADIUS(x:Float,y:Float):Float{\n    \treturn Math.sqrt(x*x+y*y);\n    }\n\tstatic public function ToRadian(angle:Float):Float{\n    \treturn angle/180*Math.PI;\n    }\n\n     //angle between 2 point\n    public static inline function anglebetween(x1:Float,y1:Float,x2:Float,y2:Float) : Float{\n        return Math.atan2(y1, x1) - Math.atan2(y2,x2);\n    }\n    //distance between two point\n    public static inline function distance(x1:Float,y1:Float,x2:Float,y2:Float) : Float{\n        var x = x1-x2;\n        var y = y1-y2;\n        return Math.sqrt(x*x + y*y);\n    }\n\n\n}","package mathtool;\n\ntypedef Vector2D = \n{\n    var x:Float;\n    var y:Float;\n}\n\nclass V2DU //Vector2DUtils\n{\n    public static inline function create(x:Float, y:Float) : Vector2D{\n        return { x:x, y:y };\n    }\n    //length of vector\n    public static inline function length(v:Vector2D) : Float{\n        return Math.sqrt(v.x*v.x + v.y*v.y);\n    }\n    //vector unit\n    public static inline function unit(v0:Vector2D, ?t:Float=1.0) : Vector2D{\n        var m = t/Math.sqrt(v0.x*v0.x + v0.y*v0.y);\n        return { x:v0.x*m, y:v0.y*m};\n    }\n    //angle \n    public static inline function angle(v:Vector2D) : Float{\n        return Math.atan2(v.y, v.x);\n    }\n    //angle between 2 vector\n    public static inline function anglebetween(v0:Vector2D, v1:Vector2D) : Float{\n        return Math.atan2(v0.y, v0.x) - Math.atan2(v1.y, v1.x);\n    }\n    //distance between two point\n    public static inline function distance(v0:Vector2D, v1:Vector2D) : Float{\n        var x = v0.x-v1.x;\n        var y = v0.y-v1.y;\n        return Math.sqrt(x*x + y*y);\n    }\n    //dotproduct\n    public static inline function dot(v0:Vector2D, v1:Vector2D) : Float{ \n        return v0.x*v1.x + v0.y*v1.y;\n    }\n    //crossproduct\n    public static inline function cross(v0:Vector2D, v1:Vector2D) : Float{ \n        return v0.x*v1.y - v0.y*v1.x;\n    }\n    //add vector to vector\n    public static inline function add(v0:Vector2D, v1:Vector2D) : Vector2D{\n        return { x:v0.x+v1.x, y:v0.y+v1.y };\n    }\n\n     //add several vector to several vector\n    public static inline function adds(vectors:Array<Vector2D>) : Vector2D{\n        var returner:Vector2D={x:0,y:0};\n        for(v in vectors)\n        {\n            returner.x+=v.x;\n            returner.y+=v.y;\n        }\n        return returner;\n    }\n    \n    // subtract  vector to vector\n    public static inline function sub(v0:Vector2D, v1:Vector2D) : Vector2D{\n        return { x:v0.x-v1.x, y:v0.y-v1.y };\n    }\n    //multiply vector with scalar\n    public static inline function mul(v0: Vector2D, s:Float) :  Vector2D{\n        return { x:v0.x*s, y:v0.y*s };\n    }\n    \n    // divide vector with scalar\n    public static inline function div(v0: Vector2D, s:Float) :  Vector2D{\n        return { x:v0.x/s, y:v0.y/s };\n    }\n\n    // to get the opposite direction of a Vector\n    public static inline function opposite(v0:Vector2D) : Vector2D\n    {\n        return { x:-v0.x, y:-v0.y };\n    }\n\n}\n\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Slot;\n\n/**\n\tA convenience type describing any kind of signal.\n**/\ntypedef AnySignal = Signal<Dynamic, Dynamic>;\n\n/**\n\tA Signal manages a list of listeners, which are executed when the signal is \n\tdispatched.\n**/\nclass Signal<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\tpublic var valueClasses:Array<Dynamic>;\n\n\t/**\n\t\tThe current number of listeners for the signal.\n\t**/\n\tpublic var numListeners(get_numListeners, null):Int;\n\t\n\tvar slots:SlotList<TSlot, TListener>;\n\tvar priorityBased:Bool;\n\n\tfunction new(?valueClasses:Array<Dynamic>)\n\t{\n\t\tif (valueClasses == null) valueClasses = [];\n\t\tthis.valueClasses = valueClasses;\n\t\tslots = cast SlotList.NIL;\n\t\tpriorityBased = false;\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function add(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is called,\n\t\tafter the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnce(listener:TListener):TSlot\n\t{\n\t\treturn registerListener(listener, true);\n\t}\n\n\t/**\n\t\tSubscribes a listener for the signal.\n\t\tAfter you successfully register an event listener,\n\t\tyou cannot change its priority through additional calls to add().\n\t\tTo change a listener's priority, you must first call remove().\n\t\tThen you can register the listener again with the new priority level.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, false, priority);\n\t}\n\n\t/**\n\t\tSubscribes a one-time listener for this signal.\n\t\tThe signal will remove the listener automatically the first time it is \n\t\tcalled, after the dispatch to all listeners is complete.\n\t\t\n\t\t@param listener A function matching the signature of TListener\n\t\t@return The added listener slot\n\t**/\n\tpublic function addOnceWithPriority(listener:TListener, ?priority:Int=0):TSlot\n\t{\n\t\treturn registerListener(listener, true, priority);\n\t}\n\n\t/**\n\t\tUnsubscribes a listener from the signal.\n\t\t\n\t\t@param listener The listener to remove\n\t\t@return The removed listener slot\n\t**/\n\tpublic function remove(listener:TListener):TSlot\n\t{\n\t\tvar slot = slots.find(listener);\n\t\tif (slot == null) return null;\n\t\t\n\t\tslots = slots.filterNot(listener);\n\t\treturn slot;\n\t}\n\n\t/**\n\t\tUnsubscribes all listeners from the signal.\n\t**/\n\tpublic function removeAll():Void\n\t{\n\t\tslots = cast SlotList.NIL;\n\t}\n\n\tfunction registerListener(listener:TListener, once:Bool=false, priority:Int=0):TSlot\n\t{\n\t\tif (registrationPossible(listener, once))\n\t\t{\n\t\t\tvar newSlot = createSlot(listener, once, priority);\n\t\t\t\n\t\t\tif (!priorityBased && priority != 0) priorityBased = true;\n\t\t\tif (!priorityBased && priority == 0) slots = slots.prepend(newSlot);\n\t\t\telse slots = slots.insertWithPriority(newSlot);\n\n\t\t\treturn newSlot;\n\t\t}\n\t\t\n\t\treturn slots.find(listener);\n\t}\n\n\tfunction registrationPossible(listener, once)\n\t{\n\t\tif (!slots.nonEmpty) return true;\n\t\t\n\t\tvar existingSlot = slots.find(listener);\n\t\tif (existingSlot == null) return true;\n\n\t\tif (existingSlot.once != once)\n\t\t{\n\t\t\t// If the listener was previously added, definitely don't add it again.\n\t\t\t// But throw an exception if their once values differ.\n\t\t\tthrow \"You cannot addOnce() then add() the same listener without removing the relationship first.\";\n\t\t}\n\t\t\n\t\treturn false; // Listener was already registered.\n\t}\n\n\t@:IgnoreCover\n\tfunction createSlot(listener:TListener, once:Bool=false, priority:Int=0):TSlot\n\t{\n\t\treturn null;\n\t}\n\n\tfunction get_numListeners()\n\t{\n\t\treturn slots.length;\n\t}\n}\n\n/**\n\tSignal that executes listeners with no arguments.\n**/\nclass Signal0 extends Signal<Slot0, Void -> Void>\n{\n\tpublic function new()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with no arguements.\n\t**/\n\tpublic function dispatch()\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute();\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:Void -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot0(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with one arguments.\n**/\nclass Signal1<TValue> extends Signal<Slot1<TValue>, TValue -> Void>\n{\n\tpublic function new(?type:Dynamic=null)\n\t{\n\t\tsuper([type]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with one arguement.\n\t**/\n\tpublic function dispatch(value:TValue)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot1<TValue>(this, listener, once, priority);\n\t}\n}\n\n/**\n\tSignal that executes listeners with two arguments.\n**/\nclass Signal2<TValue1, TValue2> extends Signal<Slot2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\tpublic function new(?type1:Dynamic=null, ?type2:Dynamic=null)\n\t{\n\t\tsuper([type1, type2]);\n\t}\n\n\t/**\n\t\tExecutes the signals listeners with two arguements.\n\t**/\n\tpublic function dispatch(value1:TValue1, value2:TValue2)\n\t{\n\t\tvar slotsToProcess = slots;\n\t\t\n\t\twhile (slotsToProcess.nonEmpty)\n\t\t{\n\t\t\tslotsToProcess.head.execute(value1, value2);\n\t\t\tslotsToProcess = slotsToProcess.tail;\n\t\t}\n\t}\n\n\toverride function createSlot(listener:TValue1 -> TValue2 -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\treturn new Slot2<TValue1, TValue2>(this, listener, once, priority);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nimport msignal.Signal;\n\n/**\n\tA convenience type describing any kind of slot.\n**/\ntypedef AnySlot = Slot<Dynamic, Dynamic>;\n\n/**\n\tDefines the basic properties of a listener associated with a Signal.\n**/\n#if haxe3\nclass Slot<TSignal:msignal.Signal.AnySignal, TListener>\n#else\nclass Slot<TSignal:Signal<Dynamic, TListener>, TListener>\n#end\n{\n\t/**\n\t\tThe listener associated with this slot.\n\t\tNote: for hxcpp 2.10 this requires a getter method to compile\n\t**/\n\t#if cpp\n\t#if haxe3 @:isVar #end\n\tpublic var listener(get_listener, set_listener):TListener;\n\t#else\n\t#if haxe3 @:isVar #end\n\tpublic var listener(default, set_listener):TListener;\n\t#end\n\t\n\n\t/**\n\t\tWhether this slot is automatically removed after it has been used once.\n\t**/\n\tpublic var once(default, null):Bool;\n\n\t/**\n\t\tThe priority of this slot should be given in the execution order.\n\t\tAn Signal will call higher numbers before lower ones.\n\t\tDefaults to 0.\n\t**/\n\tpublic var priority(default, null):Int;\n\n\t/**\n\t\tWhether the listener is called on execution. Defaults to true.\n\t**/\n\tpublic var enabled:Bool;\n\n\tvar signal:TSignal;\n\t\n\tfunction new(signal:TSignal, listener:TListener, once:Bool=false, priority:Int=0)\n\t{\n\t\tthis.signal = signal;\n\t\tthis.listener = listener;\n\t\tthis.once = once;\n\t\tthis.priority = priority;\n\t\tthis.enabled = true;\n\t}\n\n\t/**\n\t\tRemoves the slot from its signal.\n\t**/\n\tpublic function remove()\n\t{\n\t\tsignal.remove(listener);\n\t}\n\n\t#if cpp\n\t/**\n\t\tHxcpp 2.10 requires a getter method for a typed function property in \n\t\torder to compile\n\t**/\n\tfunction get_listener():TListener\n\t{\n\t\treturn listener;\n\t}\n\t#end\n\n\tfunction set_listener(value:TListener):TListener\n\t{\n\t\tif (value == null) throw \"listener cannot be null\";\n\t\treturn listener = value;\n\t}\n}\n\n/**\n\tA slot that executes a listener with no arguments.\n**/\nclass Slot0 extends Slot<Signal0, Void -> Void>\n{\n\tpublic function new(signal:Signal0, listener:Void -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with no arguments.\n\t**/\n\tpublic function execute()\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tlistener();\n\t}\n}\n\n/**\n\tA slot that executes a listener with one argument.\n**/\nclass Slot1<TValue> extends Slot<Signal1<TValue>, TValue -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the argument to dispatch.\n\t**/\n\tpublic var param:TValue;\n\n\tpublic function new(signal:Signal1<TValue>, listener:TValue -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with one argument.\n\t\tIf <code>param</code> is not null, it overrides the value provided.\n\t**/\n\tpublic function execute(value1:TValue)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\tif (param != null) value1 = param;\n\t\tlistener(value1);\n\t}\n}\n\n/**\n\tA slot that executes a listener with two arguments.\n**/\nclass Slot2<TValue1, TValue2> extends Slot<Signal2<TValue1, TValue2>, TValue1 -> TValue2 -> Void>\n{\n\t/**\n\t\tAllows the slot to inject the first argument to dispatch.\n\t**/\n\tpublic var param1:TValue1;\n\n\t/**\n\t\tAllows the slot to inject the second argument to dispatch.\n\t**/\n\tpublic var param2:TValue2;\n\n\tpublic function new(signal:Signal2<TValue1, TValue2>, listener:TValue1 -> TValue2 -> Void, once:Bool=false, priority:Int=0)\n\t{\n\t\tsuper(signal, listener, once, priority);\n\t}\n\n\t/**\n\t\tExecutes a listener with two arguments.\n\t\tIf <code>param1</code> or <code>param2</code> is set, \n\t\tthey override the values provided.\n\t**/\n\tpublic function execute(value1:TValue1, value2:TValue2)\n\t{\n\t\tif (!enabled) return;\n\t\tif (once) remove();\n\t\t\n\t\tif (param1 != null) value1 = param1;\n\t\tif (param2 != null) value2 = param2;\n\t\t\n\t\tlistener(value1, value2);\n\t}\n}\n","/*\nCopyright (c) 2012 Massive Interactive\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\npackage msignal;\n\nclass SlotList<TSlot:Slot<Dynamic, Dynamic>, TListener>\n{\n\t@:IgnoreCover\n\tstatic function __init__() { NIL = new SlotList<Dynamic, Dynamic>(null, null); }\n\t\n\t/**\n\t\tRepresents an empty list. Used as the list terminator.\n\t**/\n\tpublic static var NIL:SlotList<Dynamic, Dynamic>;\n\t\n\tpublic var head:TSlot;\n\tpublic var tail:SlotList<TSlot, TListener>;\n\tpublic var nonEmpty:Bool;\n\t\n\t/**\n\t\tCreates and returns a new SlotList object.\n\n\t\t<p>A user never has to create a SlotList manually. \n\t\tUse the <code>NIL</code> element to represent an empty list. \n\t\t<code>NIL.prepend(value)</code> would create a list containing \n\t\t<code>value</code></p>.\n\n\t\t@param head The first slot in the list.\n\t\t@param tail A list containing all slots except head.\n\t**/\n\tpublic function new(head:TSlot, tail:SlotList<TSlot, TListener>=null)\n\t{\n\t\tnonEmpty = false;\n\t\t\n\t\tif (head == null && tail == null)\n\t\t{\n\t\t\tif (NIL != null)\n\t\t\t{\n\t\t\t\tthrow \"Parameters head and tail are null. Use the NIL element instead.\";\n\t\t\t}\n\t\t\t\n\t\t\t// this is the NIL element as per definition\n\t\t\tnonEmpty = false;\n\t\t}\n\t\telse if (head == null)\n\t\t{\n\t\t\tthrow \"Parameter head cannot be null.\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.head = head;\n\t\t\tthis.tail = (tail == null ? cast NIL : tail);\n\t\t\tnonEmpty = true;\n\t\t}\n\t}\n\t\n\t/**\n\t\tThe number of slots in the list.\n\t**/\n\tpublic var length(get_length, null):Int;\n\tfunction get_length():Int\n\t{\n\t\tif (!nonEmpty) return 0;\n\t\tif (tail == NIL) return 1;\n\t\t\n\t\t// We could cache the length, but it would make methods like filterNot unnecessarily complicated.\n\t\t// Instead we assume that O(n) is okay since the length property is used in rare cases.\n\t\t// We could also cache the length lazy, but that is a waste of another 8b per list node (at least).\n\t\t\n\t\tvar result = 0;\n\t\tvar p = this;\n\t\t\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\t++result;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n\t\n\t/**\n\t\tPrepends a slot to this list.\n\t\t@param\tslot The item to be prepended.\n\t\t@return\tA list consisting of slot followed by all elements of this list.\n\t**/\n\tpublic function prepend(slot:TSlot)\n\t{\n\t\treturn new SlotList<TSlot, TListener>(slot, this);\n\t}\n\t\n\t/**\n\t\tAppends a slot to this list.\n\t\tNote: appending is O(n). Where possible, prepend which is O(1).\n\t\tIn some cases, many list items must be cloned to \n\t\tavoid changing existing lists.\n\t\t@param\tslot The item to be appended.\n\t\t@return\tA list consisting of all elements of this list followed by slot.\n\t**/\n\tpublic function append(slot:TSlot)\n\t{\n\t\tif (slot == null) return this;\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\t// Special case: just one slot currently in the list.\n\t\tif (tail == NIL) \n\t\t{\n\t\t\treturn new SlotList<TSlot, TListener>(slot).prepend(head);\n\t\t}\n\t\t\n\t\t// The list already has two or more slots.\n\t\t// We have to build a new list with cloned items because they are immutable.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Append the new slot last.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\t\t\n\t\n\t/**\n\t\tInsert a slot into the list in a position according to its priority.\n\t\tThe higher the priority, the closer the item will be inserted to the \n\t\tlist head.\n\t\t@param slot The item to be inserted.\n\t**/\n\tpublic function insertWithPriority(slot:TSlot)\n\t{\n\t\tif (!nonEmpty) return new SlotList<TSlot, TListener>(slot);\n\t\t\n\t\tvar priority:Int = slot.priority;\n\t\t\n\t\t// Special case: new slot has the highest priority.\n\t\tif (priority >= this.head.priority) return prepend(slot);\n\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\n\t\t// Find a slot with lower priority and go in front of it.\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (priority > current.head.priority)\n\t\t\t{\n\t\t\t\tsubClone.tail = current.prepend(slot);\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// Slot has lowest priority.\n\t\tsubClone.tail = new SlotList<TSlot, TListener>(slot);\n\t\treturn wholeClone;\n\t}\n\t\n\t/**\n\t\tReturns the slots in this list that do not contain the supplied \n\t\tlistener. Note: assumes the listener is not repeated within the list.\n\t\t@param\tlistener The function to remove.\n\t\t@return A list consisting of all elements of this list that do not \n\t\t\t\thave listener.\n\t**/\n\tpublic function filterNot(listener:TListener)\n\t{\n\t\tif (!nonEmpty || listener == null) return this;\n\t\t\n\t\tif (Reflect.compareMethods(head.listener, listener)) return tail;\n\t\t\n\t\t// The first item wasn't a match so the filtered list will contain it.\n\t\tvar wholeClone = new SlotList<TSlot, TListener>(head);\n\t\tvar subClone = wholeClone;\n\t\tvar current = tail;\n\t\t\n\t\twhile (current.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(current.head.listener, listener))\n\t\t\t{\n\t\t\t\t// Splice out the current head.\n\t\t\t\tsubClone.tail = current.tail;\n\t\t\t\treturn wholeClone;\n\t\t\t}\n\t\t\t\n\t\t\tsubClone = subClone.tail = new SlotList<TSlot, TListener>(current.head);\n\t\t\tcurrent = current.tail;\n\t\t}\n\t\t\n\t\t// The listener was not found so this list is unchanged.\n\t\treturn this;\n\t}\n\t\n\t/**\n\t\tDetermines whether the supplied listener Function is contained \n\t\twithin this list\n\t**/\n\tpublic function contains(listener:TListener):Bool\n\t{\n\t\tif (!nonEmpty) return false;\n\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return true;\n\t\t\tp = p.tail;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n\t/**\n\t\tRetrieves the Slot associated with a supplied listener within the SlotList.\n\t\t@param   listener The Function being searched for\n\t\t@return  The ISlot in this list associated with the listener parameter \n\t\t\t\t through the ISlot.listener property. Returns null if no such \n\t\t\t\t ISlot instance exists or the list is empty.  \n\t**/\n\tpublic function find(listener:TListener):TSlot\n\t{\n\t\tif (!nonEmpty) return null;\n\t\t\n\t\tvar p = this;\n\t\twhile (p.nonEmpty)\n\t\t{\n\t\t\tif (Reflect.compareMethods(p.head.listener, listener)) return p.head;\n\t\t\tp = p.tail;\n\t\t}\n\t\t\n\t\treturn null;\n\t}\n}\n","\r\n/* Ported from gl-matrix by Brandon Jones, Colin MacKenzie IV. All rights reserved.\r\n */\r\npackage num;\r\n\r\nimport box.util.Float32Array;\r\nimport num.Vector;\r\n\r\nabstract Matrix(Float32Array){\r\n\r\n\tinline public function new(){\r\n\t\tvar out = this = new Float32Array(16);\r\n\t    out[0] = 1;\r\n\t    out[1] = 0;\r\n\t    out[2] = 0;\r\n\t    out[3] = 0;\r\n\t    out[4] = 0;\r\n\t    out[5] = 1;\r\n\t    out[6] = 0;\r\n\t    out[7] = 0;\r\n\t    out[8] = 0;\r\n\t    out[9] = 0;\r\n\t    out[10] = 1;\r\n\t    out[11] = 0;\r\n\t    out[12] = 0;\r\n\t    out[13] = 0;\r\n\t    out[14] = 0;\r\n\t    out[15] = 1;\r\n\t}\r\n\r\n\t@:arrayAccess \r\n\tpublic inline function get(index:Int){\r\n\t\treturn this[index];\r\n\t} \r\n\t\r\n\t@:arrayAccess \r\n\tpublic inline function arrayWrite(index:Int, v:Float):Float {\r\n\t    this[index] =  v;\r\n\t    return v;\r\n\t}\r\n\r\n\t/**\r\n\t * Copy the values from one Matrix to another\r\n \t *\r\n \t * @param {Matrix} out the receiving matrix\r\n\t * @param {Matrix} a the source matrix\r\n \t * @returns {Matrix} out\r\n\t**/\r\n\tpublic static function copyFrom(out : Matrix, a : Matrix) : Matrix{\r\n\t\tout[0] = a[0];\r\n\t    out[1] = a[1];\r\n\t    out[2] = a[2];\r\n\t    out[3] = a[3];\r\n\t    out[4] = a[4];\r\n\t    out[5] = a[5];\r\n\t    out[6] = a[6];\r\n\t    out[7] = a[7];\r\n\t    out[8] = a[8];\r\n\t    out[9] = a[9];\r\n\t    out[10] = a[10];\r\n\t    out[11] = a[11];\r\n\t    out[12] = a[12];\r\n\t    out[13] = a[13];\r\n\t    out[14] = a[14];\r\n\t    out[15] = a[15];\r\n\t    return out;\t\r\n\t}\r\n\r\n\r\n/**\r\n * Translate a Matrix by the given vector\r\n *\r\n * @param {Matrix} out the receiving matrix\r\n * @param {Matrix} a the matrix to translate\r\n * //TODO @param {Vector} v vector to translate by\r\n * @returns {Matrix} out\r\n **/\r\npublic static function translate(out : Matrix, a : Matrix, x : Float, y : Float, z : Float) : Matrix{\r\n    var a00, a01, a02, a03,\r\n        a10, a11, a12, a13,\r\n        a20, a21, a22, a23;\r\n\r\n    if (a == out) {\r\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n    } else {\r\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\r\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\r\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\r\n\r\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n/**\r\n * Scales the Matrix by the dimensions in the given Vector\r\n *\r\n * @param {Matrix} out the receiving matrix\r\n * @param {Matrix} a the matrix to scale\r\n * //TODO @param {Vector} v the vector to scale the matrix by\r\n * @returns {Matrix} out\r\n **/\r\npublic static function scale(out : Matrix, a : Matrix, x : Float, y : Float, z : Float) : Matrix{\r\n    out[0] = a[0] * x;\r\n    out[1] = a[1] * x;\r\n    out[2] = a[2] * x;\r\n    out[3] = a[3] * x;\r\n    out[4] = a[4] * y;\r\n    out[5] = a[5] * y;\r\n    out[6] = a[6] * y;\r\n    out[7] = a[7] * y;\r\n    out[8] = a[8] * z;\r\n    out[9] = a[9] * z;\r\n    out[10] = a[10] * z;\r\n    out[11] = a[11] * z;\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n};\r\n\r\n\r\n\r\n/**\r\n* Generates a orthogonal projection matrix with the given bounds\r\n*\r\n* @param {mat4} out mat4 frustum matrix will be written into\r\n* @param {number} left Left bound of the frustum\r\n* @param {number} right Right bound of the frustum\r\n* @param {number} bottom Bottom bound of the frustum\r\n* @param {number} top Top bound of the frustum\r\n* @param {number} near Near bound of the frustum\r\n* @param {number} far Far bound of the frustum\r\n* @returns {mat4} out\r\n*/\r\nstatic public function ortho(out : Matrix, left : Float, right : Float, bottom : Float, top : Float, near : Float, far : Float) : Matrix{\r\n    var lr = 1 / (left - right),\r\n    bt = 1 / (bottom - top),\r\n    nf = 1 / (near - far);\r\n    out[0] = -2 * lr;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = -2 * bt;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 2 * nf;\r\n    out[11] = 0;\r\n    out[12] = (left + right) * lr;\r\n    out[13] = (top + bottom) * bt;\r\n    out[14] = (far + near) * nf;\r\n    out[15] = 1;\r\n    return out;\r\n};\r\n\r\n\r\n}\r\n\r\n\r\n/*\r\nmat4.clone = function(a) {\r\n    var out = new GLMAT_ARRAY_TYPE(16);\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n};\r\n\r\n\r\n\r\n// *\r\n//  * Set a mat4 to the identity matrix\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @returns {mat4} out\r\n \r\nmat4.identity = function(out) {\r\n    out[0] = 1;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = 1;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 1;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Transpose the values of a mat4\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {mat4} out\r\n \r\nmat4.transpose = function(out, a) {\r\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n    if (out === a) {\r\n        var a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a12 = a[6], a13 = a[7],\r\n            a23 = a[11];\r\n\r\n        out[1] = a[4];\r\n        out[2] = a[8];\r\n        out[3] = a[12];\r\n        out[4] = a01;\r\n        out[6] = a[9];\r\n        out[7] = a[13];\r\n        out[8] = a02;\r\n        out[9] = a12;\r\n        out[11] = a[14];\r\n        out[12] = a03;\r\n        out[13] = a13;\r\n        out[14] = a23;\r\n    } else {\r\n        out[0] = a[0];\r\n        out[1] = a[4];\r\n        out[2] = a[8];\r\n        out[3] = a[12];\r\n        out[4] = a[1];\r\n        out[5] = a[5];\r\n        out[6] = a[9];\r\n        out[7] = a[13];\r\n        out[8] = a[2];\r\n        out[9] = a[6];\r\n        out[10] = a[10];\r\n        out[11] = a[14];\r\n        out[12] = a[3];\r\n        out[13] = a[7];\r\n        out[14] = a[11];\r\n        out[15] = a[15];\r\n    }\r\n    \r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Inverts a mat4\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {mat4} out\r\n \r\nmat4.invert = function(out, a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32,\r\n\r\n        // Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (!det) { \r\n        return null; \r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Calculates the adjugate of a mat4\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {mat4} out\r\n \r\nmat4.adjoint = function(out, a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\r\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\r\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\r\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\r\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\r\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\r\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\r\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Calculates the determinant of a mat4\r\n//  *\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {Number} determinant of a\r\n \r\nmat4.determinant = function (a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32;\r\n\r\n    // Calculate the determinant\r\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n};\r\n\r\n// *\r\n//  * Multiplies two mat4's\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the first operand\r\n//  * @param {mat4} b the second operand\r\n//  * @returns {mat4} out\r\n \r\nmat4.multiply = function (out, a, b) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n    // Cache only the current line of the second matrix\r\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \r\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Alias for {@link mat4.multiply}\r\n//  * @function\r\n \r\nmat4.mul = mat4.multiply;\r\n\r\n// *\r\n//  * Rotates a mat4 by the given angle\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {Number} rad the angle to rotate the matrix by\r\n//  * @param {vec3} axis the axis to rotate around\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotate = function (out, a, rad, axis) {\r\n    var x = axis[0], y = axis[1], z = axis[2],\r\n        len = Math.sqrt(x * x + y * y + z * z),\r\n        s, c, t,\r\n        a00, a01, a02, a03,\r\n        a10, a11, a12, a13,\r\n        a20, a21, a22, a23,\r\n        b00, b01, b02,\r\n        b10, b11, b12,\r\n        b20, b21, b22;\r\n\r\n    if (Math.abs(len) < GLMAT_EPSILON) { return null; }\r\n    \r\n    len = 1 / len;\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    s = Math.sin(rad);\r\n    c = Math.cos(rad);\r\n    t = 1 - c;\r\n\r\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n    // Construct the elements of the rotation matrix\r\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n    // Perform rotation-specific matrix multiplication\r\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Rotates a matrix by the given angle around the X axis\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {Number} rad the angle to rotate the matrix by\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotateX = function (out, a, rad) {\r\n    var s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7],\r\n        a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n        out[0]  = a[0];\r\n        out[1]  = a[1];\r\n        out[2]  = a[2];\r\n        out[3]  = a[3];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[4] = a10 * c + a20 * s;\r\n    out[5] = a11 * c + a21 * s;\r\n    out[6] = a12 * c + a22 * s;\r\n    out[7] = a13 * c + a23 * s;\r\n    out[8] = a20 * c - a10 * s;\r\n    out[9] = a21 * c - a11 * s;\r\n    out[10] = a22 * c - a12 * s;\r\n    out[11] = a23 * c - a13 * s;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Rotates a matrix by the given angle around the Y axis\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {Number} rad the angle to rotate the matrix by\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotateY = function (out, a, rad) {\r\n    var s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3],\r\n        a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n        out[4]  = a[4];\r\n        out[5]  = a[5];\r\n        out[6]  = a[6];\r\n        out[7]  = a[7];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[0] = a00 * c - a20 * s;\r\n    out[1] = a01 * c - a21 * s;\r\n    out[2] = a02 * c - a22 * s;\r\n    out[3] = a03 * c - a23 * s;\r\n    out[8] = a00 * s + a20 * c;\r\n    out[9] = a01 * s + a21 * c;\r\n    out[10] = a02 * s + a22 * c;\r\n    out[11] = a03 * s + a23 * c;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Rotates a matrix by the given angle around the Z axis\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {Number} rad the angle to rotate the matrix by\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotateZ = function (out, a, rad) {\r\n    var s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3],\r\n        a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7];\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n        out[8]  = a[8];\r\n        out[9]  = a[9];\r\n        out[10] = a[10];\r\n        out[11] = a[11];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[0] = a00 * c + a10 * s;\r\n    out[1] = a01 * c + a11 * s;\r\n    out[2] = a02 * c + a12 * s;\r\n    out[3] = a03 * c + a13 * s;\r\n    out[4] = a10 * c - a00 * s;\r\n    out[5] = a11 * c - a01 * s;\r\n    out[6] = a12 * c - a02 * s;\r\n    out[7] = a13 * c - a03 * s;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Creates a matrix from a quaternion rotation and vector translation\r\n//  * This is equivalent to (but much faster than):\r\n//  *\r\n//  *     mat4.identity(dest);\r\n//  *     mat4.translate(dest, vec);\r\n//  *     var quatMat = mat4.create();\r\n//  *     quat4.toMat4(quat, quatMat);\r\n//  *     mat4.multiply(dest, quatMat);\r\n//  *\r\n//  * @param {mat4} out mat4 receiving operation result\r\n//  * @param {quat4} q Rotation quaternion\r\n//  * @param {vec3} v Translation vector\r\n//  * @returns {mat4} out\r\n \r\nmat4.fromRotationTranslation = function (out, q, v) {\r\n    // Quaternion math\r\n    var x = q[0], y = q[1], z = q[2], w = q[3],\r\n        x2 = x + x,\r\n        y2 = y + y,\r\n        z2 = z + z,\r\n\r\n        xx = x * x2,\r\n        xy = x * y2,\r\n        xz = x * z2,\r\n        yy = y * y2,\r\n        yz = y * z2,\r\n        zz = z * z2,\r\n        wx = w * x2,\r\n        wy = w * y2,\r\n        wz = w * z2;\r\n\r\n    out[0] = 1 - (yy + zz);\r\n    out[1] = xy + wz;\r\n    out[2] = xz - wy;\r\n    out[3] = 0;\r\n    out[4] = xy - wz;\r\n    out[5] = 1 - (xx + zz);\r\n    out[6] = yz + wx;\r\n    out[7] = 0;\r\n    out[8] = xz + wy;\r\n    out[9] = yz - wx;\r\n    out[10] = 1 - (xx + yy);\r\n    out[11] = 0;\r\n    out[12] = v[0];\r\n    out[13] = v[1];\r\n    out[14] = v[2];\r\n    out[15] = 1;\r\n    \r\n    return out;\r\n};\r\n\r\nmat4.fromQuat = function (out, q) {\r\n    var x = q[0], y = q[1], z = q[2], w = q[3],\r\n        x2 = x + x,\r\n        y2 = y + y,\r\n        z2 = z + z,\r\n\r\n        xx = x * x2,\r\n        yx = y * x2,\r\n        yy = y * y2,\r\n        zx = z * x2,\r\n        zy = z * y2,\r\n        zz = z * z2,\r\n        wx = w * x2,\r\n        wy = w * y2,\r\n        wz = w * z2;\r\n\r\n    out[0] = 1 - yy - zz;\r\n    out[1] = yx + wz;\r\n    out[2] = zx - wy;\r\n    out[3] = 0;\r\n\r\n    out[4] = yx - wz;\r\n    out[5] = 1 - xx - zz;\r\n    out[6] = zy + wx;\r\n    out[7] = 0;\r\n\r\n    out[8] = zx + wy;\r\n    out[9] = zy - wx;\r\n    out[10] = 1 - xx - yy;\r\n    out[11] = 0;\r\n\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Generates a frustum matrix with the given bounds\r\n//  *\r\n//  * @param {mat4} out mat4 frustum matrix will be written into\r\n//  * @param {Number} left Left bound of the frustum\r\n//  * @param {Number} right Right bound of the frustum\r\n//  * @param {Number} bottom Bottom bound of the frustum\r\n//  * @param {Number} top Top bound of the frustum\r\n//  * @param {Number} near Near bound of the frustum\r\n//  * @param {Number} far Far bound of the frustum\r\n//  * @returns {mat4} out\r\n \r\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\r\n    var rl = 1 / (right - left),\r\n        tb = 1 / (top - bottom),\r\n        nf = 1 / (near - far);\r\n    out[0] = (near * 2) * rl;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = (near * 2) * tb;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = (right + left) * rl;\r\n    out[9] = (top + bottom) * tb;\r\n    out[10] = (far + near) * nf;\r\n    out[11] = -1;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = (far * near * 2) * nf;\r\n    out[15] = 0;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Generates a perspective projection matrix with the given bounds\r\n//  *\r\n//  * @param {mat4} out mat4 frustum matrix will be written into\r\n//  * @param {number} fovy Vertical field of view in radians\r\n//  * @param {number} aspect Aspect ratio. typically viewport width/height\r\n//  * @param {number} near Near bound of the frustum\r\n//  * @param {number} far Far bound of the frustum\r\n//  * @returns {mat4} out\r\n \r\nmat4.perspective = function (out, fovy, aspect, near, far) {\r\n    var f = 1.0 / Math.tan(fovy / 2),\r\n        nf = 1 / (near - far);\r\n    out[0] = f / aspect;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = f;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = (far + near) * nf;\r\n    out[11] = -1;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = (2 * far * near) * nf;\r\n    out[15] = 0;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Generates a perspective projection matrix with the given field of view.\r\n//  * This is primarily useful for generating projection matrices to be used\r\n//  * with the still experiemental WebVR API.\r\n//  *\r\n//  * @param {mat4} out mat4 frustum matrix will be written into\r\n//  * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n//  * @param {number} near Near bound of the frustum\r\n//  * @param {number} far Far bound of the frustum\r\n//  * @returns {mat4} out\r\n \r\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\r\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\r\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\r\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\r\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\r\n        xScale = 2.0 / (leftTan + rightTan),\r\n        yScale = 2.0 / (upTan + downTan);\r\n\r\n    out[0] = xScale;\r\n    out[1] = 0.0;\r\n    out[2] = 0.0;\r\n    out[3] = 0.0;\r\n    out[4] = 0.0;\r\n    out[5] = yScale;\r\n    out[6] = 0.0;\r\n    out[7] = 0.0;\r\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n    out[9] = ((upTan - downTan) * yScale * 0.5);\r\n    out[10] = far / (near - far);\r\n    out[11] = -1.0;\r\n    out[12] = 0.0;\r\n    out[13] = 0.0;\r\n    out[14] = (far * near) / (near - far);\r\n    out[15] = 0.0;\r\n    return out;\r\n}\r\n\r\n// *\r\n//  * Generates a orthogonal projection matrix with the given bounds\r\n//  *\r\n//  * @param {mat4} out mat4 frustum matrix will be written into\r\n//  * @param {number} left Left bound of the frustum\r\n//  * @param {number} right Right bound of the frustum\r\n//  * @param {number} bottom Bottom bound of the frustum\r\n//  * @param {number} top Top bound of the frustum\r\n//  * @param {number} near Near bound of the frustum\r\n//  * @param {number} far Far bound of the frustum\r\n//  * @returns {mat4} out\r\n \r\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\r\n    var lr = 1 / (left - right),\r\n        bt = 1 / (bottom - top),\r\n        nf = 1 / (near - far);\r\n    out[0] = -2 * lr;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = -2 * bt;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 2 * nf;\r\n    out[11] = 0;\r\n    out[12] = (left + right) * lr;\r\n    out[13] = (top + bottom) * bt;\r\n    out[14] = (far + near) * nf;\r\n    out[15] = 1;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n//  *\r\n//  * @param {mat4} out mat4 frustum matrix will be written into\r\n//  * @param {vec3} eye Position of the viewer\r\n//  * @param {vec3} center Point the viewer is looking at\r\n//  * @param {vec3} up vec3 pointing up\r\n//  * @returns {mat4} out\r\n \r\nmat4.lookAt = function (out, eye, center, up) {\r\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\r\n        eyex = eye[0],\r\n        eyey = eye[1],\r\n        eyez = eye[2],\r\n        upx = up[0],\r\n        upy = up[1],\r\n        upz = up[2],\r\n        centerx = center[0],\r\n        centery = center[1],\r\n        centerz = center[2];\r\n\r\n    if (Math.abs(eyex - centerx) < GLMAT_EPSILON &&\r\n        Math.abs(eyey - centery) < GLMAT_EPSILON &&\r\n        Math.abs(eyez - centerz) < GLMAT_EPSILON) {\r\n        return mat4.identity(out);\r\n    }\r\n\r\n    z0 = eyex - centerx;\r\n    z1 = eyey - centery;\r\n    z2 = eyez - centerz;\r\n\r\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n\r\n    x0 = upy * z2 - upz * z1;\r\n    x1 = upz * z0 - upx * z2;\r\n    x2 = upx * z1 - upy * z0;\r\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n    if (!len) {\r\n        x0 = 0;\r\n        x1 = 0;\r\n        x2 = 0;\r\n    } else {\r\n        len = 1 / len;\r\n        x0 *= len;\r\n        x1 *= len;\r\n        x2 *= len;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n\r\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n    if (!len) {\r\n        y0 = 0;\r\n        y1 = 0;\r\n        y2 = 0;\r\n    } else {\r\n        len = 1 / len;\r\n        y0 *= len;\r\n        y1 *= len;\r\n        y2 *= len;\r\n    }\r\n\r\n    out[0] = x0;\r\n    out[1] = y0;\r\n    out[2] = z0;\r\n    out[3] = 0;\r\n    out[4] = x1;\r\n    out[5] = y1;\r\n    out[6] = z1;\r\n    out[7] = 0;\r\n    out[8] = x2;\r\n    out[9] = y2;\r\n    out[10] = z2;\r\n    out[11] = 0;\r\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n    out[15] = 1;\r\n\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Returns a string representation of a mat4\r\n//  *\r\n//  * @param {mat4} mat matrix to represent as a string\r\n//  * @returns {String} string representation of the matrix\r\n \r\nmat4.str = function (a) {\r\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\r\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\r\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \r\n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n};\r\n\r\n// /**\r\n//  * Returns Frobenius norm of a mat4\r\n//  *\r\n//  * @param {mat4} a the matrix to calculate Frobenius norm of\r\n//  * @returns {Number} Frobenius norm\r\n \r\nmat4.frob = function (a) {\r\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\r\n};\r\n\r\n\r\nif(typeof(exports) !== 'undefined') {\r\n    exports.mat4 = mat4;\r\n}\r\n*/","package num;\r\n\r\nimport box.util.Float32Array;\r\n\r\nabstract Vector(Float32Array){\r\n\r\n\tinline public function new(?x:Float=0,?y:Float=0,?z:Float=0){\r\n\t\tthis = new Float32Array(4);\r\n\t    this[0] = x;\r\n\t    this[1] = y;\r\n\t    this[2] = z;\r\n\t    this[3] = 0;\r\n\t}\r\n\r\n\tpublic var x(get,set):Float;\r\n\tinline function get_x():Float{return this[0];}\r\n\tinline function set_x(v:Float):Float{\r\n\t\treturn this[0] = v;\r\n\t}\r\n\tpublic var y(get,set):Float;\r\n\tinline function get_y():Float{return this[1];}\r\n\tinline function set_y(v:Float):Float{\r\n\t\treturn this[1] = v;\r\n\t}\r\n\tpublic var z(get,set):Float;\r\n\tinline function get_z():Float{return this[2];}\r\n\tinline function set_z(v:Float):Float{\r\n\t\treturn this[2] = v;\r\n\t}\r\n\tpublic var w(get,set):Float;\r\n\tinline function get_w():Float{return this[3];}\r\n\tinline function set_w(v:Float):Float{\r\n\t\treturn this[3] = v;\r\n\t}\r\n\r\n\t/**\r\n\t* Transforms the vec4 with a mat4.\r\n\t*\r\n\t* @param {vec4} out the receiving vector\r\n\t* @param {vec4} a the vector to transform\r\n\t* @param {mat4} m matrix to transform with\r\n\t* @returns {vec4} out\r\n\t*/\r\n\tinline public function transformMat4(out : Vector, m : num.Matrix) : Vector {\r\n\t\tout.x = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n\t\tout.y = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n\t\tout.z = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n\t\tout.w = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n\t\treturn out;\r\n\t}\r\n\r\n\t// @:arrayAccess public inline function get(i:Int) return this[i];\r\n\t// @:arrayAccess public inline function arrayWrite(i:Int, v:Float):Float {\r\n //    \tthis[i] = v;\r\n //    \treturn v;\r\n\t// }\r\n}","/**\n  This is a primitive asynchronous class, used as a base class for Promise and\n  Signal.\n **/\n\n\npackage promhx.base;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.Thenable;\n\ntypedef AsyncLink<T> = {\n    async : AsyncBase<Dynamic>,\n    linkf : T->Void\n}\n\n\nclass AsyncBase<T>{\n#if debug\n    // add ids to the async instances so they are easier to track\n    static var id_ctr  = 0;\n    var id          : Int;\n#end\n    var _val        : T;\n    var _resolved   : Bool;\n    var _fulfilled  : Bool;\n    var _pending    : Bool;\n    var _update     : Array<AsyncLink<T>>;\n    var _errored    : Bool;\n    var _error      : Array<Dynamic->Void>;\n    var _errorMap   : Dynamic->T;\n\n    /**\n      Constructor argument can take optional function argument, which adds\n      a callback to the error handler chain.\n     **/\n    public function new(?d:Deferred<T>) {\n#if debug id = id_ctr +=1; #end\n        _resolved   = false;\n        _pending = false;\n        _fulfilled  = false;\n        _update     = [];\n        _error      = [];\n        _errored    = false;\n\n        if (d != null){\n            d.then(handleResolve);\n        }\n    }\n\n    /**\n      Catch error, effectively halting the current update chain.\n      This will prevent downstream async objects from receiving\n      the error message.\n     **/\n    public function catchError(f : Dynamic->Void) : AsyncBase<T> {\n        _error.push(f);\n        return this;\n    }\n\n    /**\n      Map errors back to the expected type, and continue as normal.\n     **/\n    public function errorThen( f : Dynamic -> T){\n        _errorMap = f;\n        return this;\n    }\n\n    /**\n      Utility function to determine if a Promise value has been resolved.\n     **/\n    public inline function isResolved() : Bool\n        return _resolved;\n\n    /**\n      Utility function to determine if a Promise value has been resolved.\n     **/\n    public inline function isErrored() : Bool\n        return _errored;\n\n\n    /**\n      Utility function to determine if a Promise value has been rejected.\n     **/\n    public inline function isFulfilled(): Bool\n        return _fulfilled;\n\n    /**\n      Utility function to determine if a Promise value is pending operations\n      on the next loop.\n     **/\n    public inline function isPending() : Bool\n        return _pending;\n\n\n    function handleResolve(val:T) : Void {\n        _resolve(val);\n    }\n    /**\n      Resolves the given value for processing on any waiting functions.\n     **/\n    function _resolve(val : T) : Void {\n\n        // this async is pending an update on the next loop, move the\n        // resolve to the loop after that.\n        if (_pending){\n            EventLoop.enqueue(_resolve.bind(val));\n        } else {\n\n            // point of no return, this async has now been resolved at least once.\n            _resolved = true;\n\n            // we are now in the act of fulfilling the async... which\n            // involves waiting for the next enqueued loop\n            _pending = true;\n\n            // the loop handler, which may not even be used\n            EventLoop.enqueue(function(){\n                _val = val; // save the value\n                for (up in _update){\n#if PromhxExposeErrors\n                    up.linkf(val);\n#else\n                    try up.linkf(val)\n                catch (e:Dynamic) up.async.handleError(e);\n#end\n                }\n                _fulfilled = true; // we're in a fulfilled state\n                _pending = false; // we're done fulfilling for this resolve\n            });\n        }\n\n    }\n\n    /**\n      Handle errors, can be overridden\n     **/\n    function handleError(error : Dynamic) : Void {\n        _handleError(error);\n    }\n\n    function _handleError(error : Dynamic) : Void {\n        var update_errors = function(e:Dynamic){\n            if (_error.length > 0) for (ef in _error) ef(e);\n            else if (_update.length > 0) for (up in _update) up.async.handleError(e);\n            else {\n#if (js && nodejs)\n                // Node sometimes doesn't produce helpful stack information on thrown errors.\n                trace('Call Stack: ' + haxe.CallStack.toString(haxe.CallStack.callStack()));\n#end\n                throw e;\n            }\n        }\n        EventLoop.enqueue(function(){\n            if (_errorMap != null){\n#if PromhxExposeErrors\n                this._resolve(_errorMap(error));\n            _resolve(_errorMap(error));\n#else\n                try this._resolve(_errorMap(error))\n                catch (e : Dynamic) update_errors(e);\n#end\n            } else {\n                update_errors(error);\n            }\n        });\n    }\n\n    /**\n      This function returns a new AsyncBase.  When this instance resolves,\n      it will resolve the new AsyncBase with the function callback argument.\n     **/\n    public function then<A>(f : T->A) : AsyncBase<A> {\n        var ret = new AsyncBase<A>();\n        link(this, ret, f);\n        return ret;\n    }\n\n    /**\n      Remove an Async that is updated from this Async.  This action is\n      performed on the next event loop.\n     **/\n    public function unlink( to : AsyncBase<Dynamic>) {\n        EventLoop.enqueue(function(){\n            _update =  _update.filter(function(x) return x.async != to);\n        });\n    }\n\n    /**\n      Determine if an Async is updated from this Async.\n     **/\n    public function isLinked( to : AsyncBase<Dynamic>) : Bool {\n        var updated = false;\n        for (u in _update) if (u.async == to) return true;\n        return updated;\n    }\n\n\n    /**\n      This is the base \"link\" method for wiring up the \"current\" async to\n      the \"next\" one via the transform defined by the f argument.\n     **/\n    inline public static function link<A,B>\n        (current : AsyncBase<A>, next: AsyncBase<B>, f : A->B) : Void\n    {\n        // the function wrapper for the callback, which will resolve the return\n        // if current is not resolved, or will resolve next loop, push to\n        // update queues.\n        current._update.push({\n            async : next,\n            linkf : function(x){\n                next.handleResolve(f(x));\n            }\n        });\n        immediateLinkUpdate(current, next, f);\n    }\n\n    static function immediateLinkUpdate<A,B>\n        (current : AsyncBase<A>, next : AsyncBase<B>, f : A->B) : Void\n    {\n        // propagate the errors first\n        if (current.isErrored()) next.handleError(current._error); \n\n        // then the value\n        if (current.isResolved() && !current.isPending()){\n            // we can go ahead and resolve this.\n#if PromhxExposeErrors\n            next.handleResolve(f(current._val));\n#else\n            try next.handleResolve(f(current._val))\n            catch (e:Dynamic) next.handleError(e);\n#end\n        }\n\n    }\n\n    inline public static function linkAll<T>\n        (all : Iterable<AsyncBase<T>>, next: AsyncBase<Array<T>>) : Void\n    {\n        // a helper callback function.  This will be called for each Stream in\n        // the iterable argument.  The \"arr\" argument will be all of the Streams\n        // *except* the one currently resolving.  If there's only one Stream\n        // in the iterable, it will always resolve.\n        var cthen = function(arr:Array<AsyncBase<T>>, current:AsyncBase<T>,  v){\n            if (arr.length == 0 || AsyncBase.allFulfilled(arr)){\n                var vals = [for (a in all) a == current ? v : a._val];\n                next.handleResolve(vals);\n            }\n            return null;\n        };\n        for (a in all){\n            a._update.push({\n                async : next,\n                linkf: cthen.bind([for (a2 in all) if (a2 != a) a2], a, _)\n            });\n        }\n\n        if (AsyncBase.allFulfilled(all)) {\n            next.handleResolve([for (a in all) a._val]);\n        }\n    }\n\n    /**\n      Similar to the link function, except the [f] function must return an\n      AsyncBase instance.\n     **/\n    inline static public function pipeLink<A,B>\n        ( current : AsyncBase<A>, ret : AsyncBase<B>, f : A->AsyncBase<B> ) : Void\n    {\n        var linked = false;\n        var linkf = function(x){ // updates go to pipe function.\n                if (!linked){ // but only once\n                    linked = true; // the piped async doesn't actually respond to updates from current\n                    var pipe_ret = f(x); // it just needs to be created\n                    pipe_ret._update.push({  // and to be linked to ret\n                        async : ret, // errors go to ret\n                        linkf : ret.handleResolve // updates go directly to ret\n                    });\n                    immediateLinkUpdate(pipe_ret, ret, function(x) return x );\n                }\n            }\n\n        current._update.push({\n            async : ret, // errors go to ret\n            linkf : linkf\n        });\n\n        if (current.isResolved() && !current.isPending()){\n#if PromhxExposeErrors\n            linkf(current._val);\n#else\n            try linkf(current._val)\n            catch (e:Dynamic) ret.handleError(e);\n#end\n        }\n    }\n\n    /**\n      Utility function to determine if all Promise values are set.\n     **/\n    public static function allResolved\n        (as : Iterable<AsyncBase<Dynamic>>) : Bool\n    {\n        for (a in as) {\n            if (!a.isResolved()) return false;\n        }\n        return true;\n    }\n\n    /**\n      Utility function to determine if all Promise values are resolved and\n      are currently fulfilled (not in the process of fulfilling).\n     **/\n    static function allFulfilled\n        (as : Iterable<AsyncBase<Dynamic>>) : Bool\n    {\n        for (a in as) {\n            if (!a.isFulfilled()) return false;\n        }\n        return true;\n    }\n\n}\n","package promhx;\nimport promhx.base.AsyncBase;\n\n@:expose\nclass Deferred<T> extends AsyncBase<T> {\n\n    public function new() super();\n\n    /**\n      The public write interface\n     **/\n    public function resolve(val:T) handleResolve(val);\n\n    inline public function throwError(e:Dynamic) handleError(e);\n\n    /**\n      Returns a new promise based on the current deferred instance\n     **/\n    public function promise(){\n        return new Promise(this);\n    }\n\n    /**\n      Returns a new stream based on the current deferred instance\n     **/\n    public function stream(){\n        return new Stream(this);\n    }\n\n    /**\n      Returns a stream based on the current deferred instance\n     **/\n    public function publicStream(){\n        return new PublicStream(this);\n    }\n}\n","package promhx;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.base.AsyncBase;\nimport promhx.error.PromiseError;\n\n@:expose\nclass Promise<T> extends AsyncBase<T>{\n    var _rejected   : Bool;\n    public function new(?d:Deferred<T>){\n        super(d);\n        _rejected = false;\n    }\n\n    /**\n      Macro method that binds the promise arguments to a single function\n      callback that is triggered when all promises are resolved.\n      Note: You may call this function on as many promise arguments as you\n      like.\n     **/\n    macro public static function when<T>( args : Array<ExprOf<Promise<Dynamic>>>) : Expr {\n\n        // a default position\n        var pos = Context.currentPos();\n\n        //the macro arguments translated to an array expression.\n        var eargs = {expr:EArrayDecl(args), pos:pos};\n\n        // An array of the resolved promise values\n        var epargs = [for (a in args) { expr: EField(a, \"_val\"), pos: pos}];\n\n        // the returned function that actually does the runtime work.\n        return macro {\n            // a function that accepts a variable argument function\n            var varargf = function(f){\n                // we wait on all of the promises with the iterable-based \"whenAll\"\n                // this will resolve an array, so we use pipe to ignore it, and set\n                // up a new promise for return.\n                // this new promise resolves via a macro-defined function expression\n                // on \"f\" that provides arity and types for the resolved promise values.\n                var ret = new Promise();\n                var arr : Array<Promise<Dynamic>> = $eargs;\n                var p = Promise.whenAll(arr);\n                p._update.push({\n                    async : ret,\n                    linkf : function(x) ret.handleResolve(f($a{epargs}))\n                });\n                return ret;\n            };\n\n            // return an anonymous object with the function definition for \"then\"\n            { then : varargf };\n        }\n    }\n\n    /**\n      Utility function to determine if a Promise value has been rejected.\n     **/\n    public inline function isRejected(): Bool {\n        return _rejected;\n    }\n\n    /**\n      Rejects the promise, throwing an error.\n     **/\n    public function reject(e : Dynamic): Void {\n        _rejected = true;\n        handleError(e);\n    }\n\n    /**\n      Transforms an iterable of promises into a single promise which resolves\n      to an array of values.\n     **/\n    public static function whenAll<T>(itb : Iterable<Promise<T>>) : Promise<Array<T>> {\n        var ret : Promise<Array<T>> = new Promise();\n        AsyncBase.linkAll(itb, ret);\n        return ret;\n    }\n\n    /**\n      Resolves the given value for processing on any waiting functions.\n     **/\n    override function handleResolve(val : T): Void {\n        if (_resolved) {\n            var msg = \"Promise has already been resolved\";\n            throw(AlreadyResolved(msg));\n        }\n        _resolve(val);\n    }\n\n    /**\n      add a wait function directly to the Promise instance.\n     **/\n    override public function then<A>(f : T->A): Promise<A> {\n        var ret  = new Promise<A>();\n        AsyncBase.link(this, ret, f);\n        return ret;\n    }\n\n    override public function unlink( to : AsyncBase<Dynamic>) {\n        EventLoop.enqueue(function(){\n            if (!isFulfilled()) {\n                var msg = \"Downstream Promise is not fullfilled\";\n                handleError(DownstreamNotFullfilled(msg));\n            }\n            else{\n                _update =  _update.filter(function(x) return x.async != to);\n            }\n        });\n    }\n\n    override function handleError(error : Dynamic) : Void {\n       _rejected = true; \n       _handleError(error);\n    }\n\n    public function pipe<A>(f : T->Promise<A>) : Promise<A> {\n        var ret = new Promise<A>();\n        AsyncBase.pipeLink(this, ret, f);\n        return ret;\n    }\n\n    /**\n      Pipes an error back into a normal type.\n      **/\n    public function errorPipe( f: Dynamic-> Promise<T>){\n        var ret = new Promise<T>();\n        catchError(function(e){\n            var piped = f(e);\n            piped.then(ret._resolve);\n        });\n        then(ret._resolve);\n        return ret;\n    }\n\n    /**\n      Converts any value to a resolved Promise\n     **/\n    public static function promise<T>(_val : T): Promise<T> {\n        var ret = new Promise<T>();\n        ret.handleResolve(_val);\n        return ret;\n    }\n}\n\n","package promhx;\n\n#if macro\nimport haxe.macro.Expr;\nimport haxe.macro.Type;\nimport haxe.macro.Context;\n#end\nimport promhx.base.EventLoop;\nimport promhx.base.AsyncBase;\nimport haxe.ds.Option;\n\n@:expose\nclass Stream<T> extends AsyncBase<T> {\n    var deferred      : Deferred<T>;\n    var _pause        : Bool;\n    var _end          : Bool;\n    var _end_promise  : Promise<Option<T>>;\n    var _end_deferred : Deferred<Option<T>>;\n\n    public function new(?d : Deferred<T>){\n        super(d);\n        _end_deferred = new Deferred<Option<T>>();\n        _end_promise = _end_deferred.promise();\n    }\n\n    /**\n      Macro method that binds the stream arguments to a single function\n      callback that is triggered when all streams are updated.\n      Note: You may call this function on as many stream arguments as you\n      like.\n     **/\n    macro public static function whenever<T>( args : Array<ExprOf<AsyncBase<Dynamic>>>) : Expr {\n\n        // a default position\n        var pos = Context.currentPos();\n\n        //the macro arguments translated to an array expression.\n        var eargs = {expr:EArrayDecl(args), pos:pos};\n\n        // An array of the resolved stream values\n        var epargs = [for (a in args) { expr: EField(a, \"_val\"), pos: pos}];\n\n        // the returned function that actually does the runtime work.\n        return macro {\n            // a function that accepts a variable argument function\n            var varargf = function(f){\n                // we wait on all of the streams with the iterable-based \"whenAll\"\n                // this will resolve an array, so we use pipe to ignore it, and set\n                // up a new stream for return.\n                // this new stream resolves via a macro-defined function expression\n                // on \"f\" that provides arity and types for the resolved stream values.\n                var ret = new Stream();\n                var arr : Array<Stream<Dynamic>> = $eargs;\n                var p = Stream.wheneverAll(arr);\n                p._update.push({\n                    async: ret,\n                    linkf: function(x) ret.handleResolve(f($a{epargs}))\n                });\n                return ret;\n            };\n\n            // return an anonymous object with the function definition for \"then\"\n            { then : varargf };\n        }\n    }\n\n    /**\n      Creates a stream from the iterable [itb] that will immediately update\n      for each value, and then end.\n     **/\n    public static function foreach<T>(itb : Iterable<T>) : Stream<T> {\n        var s = new Stream<T>();\n        for (i in itb) s.handleResolve(i);\n        s.end();\n        return s;\n    }\n\n\n    /**\n      add a wait function directly to the Stream instance.\n     **/\n    override public function then<A>(f : T->A) : Stream<A> {\n        var ret  = new Stream<A>();\n        AsyncBase.link(this, ret, f);\n        _end_promise.then(function(x) ret.end());\n        return ret;\n    }\n\n    public function detachStream(str : Stream<Dynamic>) : Bool {\n        var filtered = [];\n        var removed = false;\n        for (u in _update){\n            if (u.async == str)  removed = true;\n            else filtered.push(u);\n        }\n        _update = filtered;\n        return removed;\n    }\n\n    /**\n      Transforms an iterable of streams into a single stream which resolves\n      to an array of values.\n     **/\n    public static function wheneverAll<T>(itb : Iterable<Stream<T>>) : Stream<Array<T>> {\n        var ret = new Stream<Array<T>>();\n        AsyncBase.linkAll(itb, ret);\n        return ret;\n    }\n\n    /**\n      Concatenates all the streams in the iterable argument to a single stream.  See\n      the [concat] instance method.\n     **/\n    public static function concatAll<T>(itb : Iterable<Stream<T>>) : Stream<T> {\n        var ret = new Stream<T>();\n        for (i in itb) ret.concat(i);\n        return ret;\n    }\n\n    /**\n      Merges all the streams in the iterable argument to a single stream.  See\n      the [merge] instance method.\n     **/\n    public static function mergeAll<T>(itb : Iterable<Stream<T>>) : Stream<T> {\n        var ret = new Stream<T>();\n        for (i in itb) ret.merge(i);\n        return ret;\n    }\n\n    /**\n      Returns a Promise that will resolve only for the first stream update.\n     **/\n    public inline function first() : Promise<T> {\n        var s = new Promise<T>();\n        then(function(x) if (!s.isResolved()) s.handleResolve(x));\n        return s;\n    }\n\n    override function handleResolve(val : T) : Void {\n        if (!_end && !_pause) _resolve(val);\n    }\n\n    /**\n      Momentarily disable updates for the stream.  Set the pause state with\n      the argument.  Call it without the argument to toggle the current state.\n     **/\n    public function pause(?set : Bool){\n        if (set == null) set = !_pause;\n        _pause = set;\n    }\n\n    public function pipe<A>(f : T->Stream<A>) : Stream<A> {\n        var ret = new Stream<A>();\n        AsyncBase.pipeLink(this, ret, f);\n        _end_promise.then(function(x) ret.end());\n        return ret;\n    }\n\n    /**\n      Pipes an error back into a normal type.\n      **/\n    public function errorPipe( f: Dynamic-> Stream<T>) : Stream<T>{\n        var ret = new Stream<T>();\n        catchError(function(e){\n            var piped = f(e);\n            piped.then(ret._resolve);\n            piped._end_promise.then(ret._end_promise._resolve);\n        });\n        then(ret._resolve);\n        _end_promise.then(function(x) ret.end());\n        return ret;\n    }\n\n    /**\n      I need this as a private function to call recursively.\n     **/\n    function handleEnd(){\n        // If the async is still pending, check on the next loop.\n        if (isPending()) EventLoop.enqueue(handleEnd);\n        else if (_end_promise.isResolved()) return;\n        else {\n            _end = true;\n            var o = isResolved() ? Some(_val) : None;\n            _end_promise.handleResolve(o);\n            _update = [];\n            _error = [];\n        }\n    }\n\n    public function end(){\n        EventLoop.enqueue(handleEnd);\n        return this;\n    }\n\n    inline public function endThen<A>(f : Option<T>->A) : Promise<A>{\n       return _end_promise.then(f);\n    }\n\n    /**\n      Creates a new stream linked to the current instance that only updates\n      if the [f] argument is true.\n     **/\n    public function filter(f : T->Bool) : Stream<T>{\n        var ret = new Stream<T>();\n        _update.push({\n            async : ret,\n            linkf : function(x) if (f(x)) ret.handleResolve(x)\n        });\n        AsyncBase.immediateLinkUpdate(this, ret, function(x) return x);\n        return ret;\n    }\n\n    /**\n      Creates a new stream that updates with the values from the current\n      stream until the stream ends, and then takes values from the next stream\n      [s] until that stream ends.\n     **/\n    public function concat(s : Stream<T>) : Stream<T> {\n        var ret = new Stream<T>();\n        _update.push({\n            async : ret,\n            linkf : ret.handleResolve\n        });\n        AsyncBase.immediateLinkUpdate(this, ret, function(x) return x);\n        endThen(function(_){\n            s.pipe(function(x){\n                ret.handleResolve(x);\n                return ret;\n            });\n            s.endThen(function(_){\n                ret.end();\n            });\n        });\n        return ret;\n    }\n\n    /**\n      Merges another stream into the current one.\n     **/\n    public function merge(s : Stream<T>) : Stream<T> {\n        var ret = new Stream<T>();\n        _update.push({\n            async : ret,\n            linkf : ret.handleResolve\n        });\n        s._update.push({\n            async : ret,\n            linkf : ret.handleResolve\n        });\n        AsyncBase.immediateLinkUpdate(this, ret, function(x) return x);\n        AsyncBase.immediateLinkUpdate(s, ret, function(x) return x);\n        return ret;\n    }\n\n    /**\n      Converts any value to a resolved Stream\n     **/\n    public static function stream<A>(_val : A): Stream<A> {\n        var ret = new Stream<A>();\n        ret.handleResolve(_val);\n        return ret;\n    }\n\n}\n\n","\npackage promhx;\n\n@:expose\nclass PublicStream<T> extends Stream<T> {\n    public function new(?def : Deferred<T>){\n        super(def);\n    }\n    inline public function resolve(val:T) this.handleResolve(val);\n    inline public function throwError(e:Dynamic) handleError(e);\n    inline public function update(val:T) this.handleResolve(val);\n    inline public static function publicstream<T>(val:T){\n        var ps = new PublicStream();\n        ps.resolve(val);\n        return ps;\n    }\n}\n","package promhx.base;\n\nprivate typedef Queue = #if java java.vm.AtomicList #else List #end <Void->Void>;\n\nclass EventLoop {\n    static var queue : Queue = new Queue();\n\n    // public static var nextLoop(default, set) : (Void->Void)-> Void;\n    public static var nextLoop : (Void->Void)-> Void;\n\n#if (js && !nodejs && !noEmbedJs && !noEmbedSetImmediate)\n    static function __init__() untyped {\n#if !nodejs\n        // we need to use global as an alternate since setImmediate expects this == window\n        var global = window;\n#end\n        haxe.macro.Compiler.includeFile(\"lib/setImmediate/setImmediate.js\");\n    }\n#end\n\n    public static inline function enqueue(eqf:Void->Void)  {\n        queue.add(eqf);\n        continueOnNextLoop();\n    }\n    static function set_nextLoop(f : (Void->Void)->Void) : (Void->Void)->Void{\n        if (nextLoop != null) throw \"nextLoop has already been set\";\n        else nextLoop = f;\n        return nextLoop;\n    }\n\n    /**\n      Retrieve the current length of the queue.\n     **/\n    public static inline function queueEmpty() {\n        return #if java queue.peekLast() == null #else queue.isEmpty() #end;\n    }\n\n    /**\n      Attempt to finish the remaining loops in the queue.  Returns true\n      if all loops are finished.  If [max_iterations] pass, then exit and\n      return false.\n     **/\n    public static function finish(max_iterations = 1000){\n        var fn = null;\n        while (max_iterations-- > 0 && (fn = queue.pop()) != null){\n            fn();\n        }\n        return queueEmpty();\n    }\n\n    /**\n      Clear the existing event loop queue.\n     **/\n    public static function clear(){\n        queue = new Queue();\n    }\n\n    static function f(){\n        var fn = queue.pop();\n        if (fn != null) fn();\n        if (!queueEmpty()) continueOnNextLoop();\n    }\n\n    static function continueOnNextLoop(){\n        if (nextLoop != null) nextLoop(f);\n        else {\n\n#if flash\n            haxe.Timer.delay(f,0);\n#elseif (js && (noEmbedJs || noEmbedSetImmediate) && !nodejs)\n            // fallback to setTimeout\n            untyped __js__(\"(typeof setImmediate === 'function' ? setImmediate : setTimeout)\")(f);\n#elseif js\n            // use polyfill or native node\n            untyped __js__(\"setImmediate\")(f);\n#else\n            f();\n#end\n        }\n    }\n}\n","package run;\r\n\r\nimport haxe.Timer;\r\n\r\nclass Runner{\r\n\r\n\tvar runnable : Runnable;\r\n\tvar lastNow : Float;\r\n\tvar timer : Timer;\r\n\r\n\tpublic function new(runnable : Runnable){\r\n\t\tthis.runnable = runnable;\r\n\t}\r\n\r\n\tpublic function start(?fps : Int = 30):Void{\r\n\t\tlastNow = Timer.stamp();\r\n\t\tthis.runnable.start(lastNow);\r\n\t\ttimer = new Timer(Std.int(1000 / fps));\r\n\t\ttimer.run = update;\r\n\t}\r\n\r\n\tpublic function update():Void{\r\n\t\tvar now = Timer.stamp();\r\n\t\tvar delta = now - lastNow;\r\n\t\tlastNow = now;\r\n\t\trunnable.update(now,delta);\r\n\t}\r\n\r\n}","package snail;\r\n\r\nimport run.Runnable;\r\n\r\nclass Shell<T> implements Runnable{\r\n\r\n\tpublic var data(default,null) : T;\r\n\r\n\tvar screens : Array<Screen<T>>;\r\n\tvar currentIndex : Int = 0;\r\n\tvar currentScreen : Screen<T>;\r\n\r\n\tpublic function new (data : T, screens : Array<Screen<T>>){\r\n\t\tthis.data = data;\r\n\t\tthis.screens = screens;\r\n\t}\r\n\r\n\tpublic function start(now : Float):Void{\r\n\t\tcurrentIndex = 0;\r\n        enterScreen(now);\r\n\t}\r\n\r\n\tfunction enterScreen(now : Float){\r\n        currentScreen = screens[currentIndex];\r\n        currentScreen.enter(this, now);\r\n    }\r\n\r\n\tpublic function update(now : Float, dt : Float):Void{\r\n\r\n        var done = currentScreen.update(now, dt);\r\n        if (done) {\r\n            currentScreen.quit(now);\r\n            currentIndex++;\r\n            if (currentIndex >= screens.length) {\r\n                currentIndex = 0;\r\n                //TODO\r\n            }\r\n            enterScreen(now);\r\n        }\r\n\t}\r\n\r\n}","package tink.core;\r\n\r\n//TODO: To work around #2881 the abstracts are declared over Null. Remove this when no longer necessary.\r\n\r\nabstract Callback<T>(Null<T->Void>) from (T->Void) {\r\n\t\r\n\tinline function new(f) \r\n\t\tthis = f;\r\n\t\t\r\n\tpublic inline function invoke(data:T):Void //TODO: consider swallowing null here\r\n\t\t(this)(data);\r\n\t\t\r\n\t@:from static inline function fromNiladic<A>(f:Void->Void):Callback<A> \r\n\t\treturn new Callback(function (r) f());\r\n\t\r\n\t@:from static function fromMany<A>(callbacks:Array<Callback<A>>):Callback<A> \r\n\t\treturn\r\n\t\t\tfunction (v:A) \r\n\t\t\t\tfor (callback in callbacks)\r\n\t\t\t\t\tcallback.invoke(v);\r\n}\r\n\r\nabstract CallbackLink(Null<Void->Void>) {\r\n\t\r\n\tinline function new(link:Void->Void) \r\n\t\tthis = link;\r\n\t\t\r\n\tpublic inline function dissolve():Void \r\n\t\tif (this != null) (this)();\r\n\t\t\r\n\t@:to function toCallback<A>():Callback<A> \r\n\t\treturn this;\r\n\t\t\r\n\t@:from static inline function fromFunction(f:Void->Void) \r\n\t\treturn new CallbackLink(f);\r\n\t\t\r\n\t@:from static function fromMany(callbacks:Array<CallbackLink>)\r\n\t\treturn fromFunction(function () for (cb in callbacks) cb.dissolve());\r\n}\r\n\r\nprivate class Cell<T> {\r\n\t//TODO: the cell (or some super class of it) could just as easily act as callback link\r\n\tpublic var cb:Callback<T>;\r\n\t\r\n\tfunction new() {}\r\n\t\r\n\tpublic inline function free():Void {\r\n\t\tthis.cb = null;\r\n\t\tpool.push(this);\r\n\t}\r\n\t\r\n\tstatic var pool:Array<Cell<Dynamic>> = [];\r\n\t\r\n\tstatic public inline function get<A>():Cell<A> \r\n\t\treturn\r\n\t\t\tif (pool.length > 0) cast pool.pop();\r\n\t\t\telse new Cell();\r\n}\r\n\r\nabstract CallbackList<T>(Array<Cell<T>>) {\r\n\t\r\n\tpublic var length(get, never):Int;\r\n\t\r\n\tinline public function new():Void\r\n\t\tthis = [];\r\n\t\r\n\tinline function get_length():Int \r\n\t\treturn this.length;\t\r\n\t\r\n\tpublic function add(cb:Callback<T>):CallbackLink {\r\n\t\tvar cell = Cell.get();\r\n\t\tcell.cb = cb;\r\n\t\tthis.push(cell);\r\n\t\treturn function () {\r\n\t\t\tif (this.remove(cell))\r\n\t\t\t\tcell.free();\r\n\t\t\tcell = null;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic function invoke(data:T) \r\n\t\tfor (cell in this.copy()) \r\n\t\t\tif (cell.cb != null) //This occurs when an earlier cell in this run dissolves the link for a later cell - usually a sign of convoluted code, but who am I to judge\r\n\t\t\t\tcell.cb.invoke(data);\r\n\t\t\t\r\n\tpublic function clear():Void \r\n\t\tfor (cell in this.splice(0, this.length)) \r\n\t\t\tcell.free();\r\n}","package tink.core;\r\n\r\ntypedef Pos = \r\n\t#if macro\r\n\t\thaxe.macro.Expr.Position;\r\n\t#else\r\n\t\thaxe.PosInfos;\r\n\t#end\r\n\r\n//TODO: there's huge overlap with haxe.macro.Error\r\ntypedef Error = TypedError<Dynamic>;\r\n\r\n@:enum abstract ErrorCode(Int) from Int to Int {\r\n\tvar BadRequest = 400;\r\n\tvar Unauthorized = 401;\r\n\tvar PaymentRequired = 402;\r\n\tvar Forbidden = 403;\r\n\tvar NotFound = 404;\r\n\tvar MethodNotAllowed = 405;\r\n\tvar Gone = 410;\r\n\tvar NotAcceptable = 406;\r\n\tvar Timeout = 408;\r\n\tvar Conflict = 409;\r\n\tvar OutOfRange = 416;\r\n\tvar ExpectationFailed = 417;\r\n\tvar I_am_a_Teapot = 418;\r\n\tvar AuthenticationTimeout = 419;\r\n\tvar UnprocessableEntity = 422;\r\n\r\n\tvar InternalError = 500;\r\n\tvar NotImplemented = 501;\r\n\tvar ServiceUnavailable = 503;\r\n\tvar InsufficientStorage = 507;\r\n\tvar BandwidthLimitExceeded = 509;\r\n\r\n}\r\n\r\nclass TypedError<T> {\r\n\tpublic var message(default, null):String;//It might make sense for the message to be lazy\r\n\tpublic var code(default, null):ErrorCode;\r\n\tpublic var data(default, null):T;\r\n\tpublic var pos(default, null):Null<Pos>;\r\n\t\r\n\tpublic function new(?code:ErrorCode = InternalError, message, ?pos) {\r\n\t\tthis.code = code;\r\n\t\tthis.message = message;\r\n\t\tthis.pos = pos;\r\n\t}\r\n\tfunction printPos()\r\n\t\treturn\r\n\t\t\t#if macro\r\n\t\t\t\tStd.string(pos);\r\n\t\t\t#else\r\n\t\t\t\tpos.className+'.'+pos.methodName+':'+pos.lineNumber;\r\n\t\t\t#end\r\n\t\t\t\r\n\t@:keep public function toString() {\r\n\t\tvar ret = 'Error: $message';\r\n\t\tif (pos != null)\r\n\t\t\tret += \" \"+printPos();\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\t@:keep public function throwSelf():Dynamic\r\n\t\treturn\r\n\t\t\t#if macro\r\n\t\t\t\t#if tink_macro\r\n\t\t\t\t\ttink.macro.Positions.error(pos, message);\r\n\t\t\t\t#else\r\n\t\t\t\t\thaxe.macro.Context.error(message, if (pos == null) haxe.macro.Context.currentPos() else pos);\r\n\t\t\t\t#end\r\n\t\t\t#else\r\n\t\t\t\tthrow this;\r\n\t\t\t#end\r\n\t\t\r\n\tstatic public function withData(?code:ErrorCode = 500, message:String, data:Dynamic, ?pos:Pos) {\r\n\t\tvar ret = new Error(code, message, pos);\r\n\t\tret.data = data;\r\n\t\treturn ret;\r\n\t}\r\n}\r\n","package tink.core;\r\n\r\nimport tink.core.Callback;\r\nimport haxe.ds.Option;\r\n\r\nusing tink.core.Outcome;\r\n\r\nabstract Future<T>(Callback<T>->CallbackLink) {\r\n\r\n\tpublic function new(f:Callback<T>->CallbackLink) this = f;\t\r\n\t\t\r\n\tpublic inline function handle(callback:Callback<T>):CallbackLink //TODO: consider null-case\r\n\t\treturn (this)(callback);\r\n\t\r\n\tpublic function gather():Future<T> {\r\n\t\tvar op = Future.trigger(),\r\n\t\t\tself = this;\r\n\t\treturn new Future(function (cb:Callback<T>) {\r\n\t\t\tif (self != null) {\r\n\t\t\t\thandle(op.trigger);\r\n\t\t\t\tself = null;\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn op.asFuture().handle(cb);\r\n\t\t});\r\n\t}\r\n\t\r\n\tpublic function first(other:Future<T>):Future<T>\r\n\t\treturn Future.async(function (cb:T->Void) {\r\n\t\t\thandle(cb);\r\n\t\t\tother.handle(cb);\r\n\t\t});\r\n\t\r\n\tpublic function map<A>(f:T->A, ?gather = true):Future<A> {\r\n\t\tvar ret = new Future(function (callback) return (this)(function (result) callback.invoke(f(result))));\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\tpublic function flatMap<A>(next:T->Future<A>, ?gather = true):Future<A> {\r\n\t\tvar ret = flatten(map(next, gather));\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\t\t\r\n\t}\t\r\n\t\r\n\tpublic function merge<A, R>(other:Future<A>, merger:T->A->R, ?gather = true):Future<R> \r\n\t\treturn flatMap(function (t:T) {\r\n\t\t\treturn other.map(function (a:A) return merger(t, a), false);\r\n\t\t}, gather);\r\n\t\r\n\tstatic public function flatten<A>(f:Future<Future<A>>):Future<A> \r\n\t\treturn new Future(function (callback) {\r\n\t\t\tvar ret = null;\r\n\t\t\tret = f.handle(function (next:Future<A>) {\r\n\t\t\t\tret = next.handle(function (result) callback.invoke(result));\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t});\r\n\t\r\n\t@:from inline static function fromTrigger<A>(trigger:FutureTrigger<A>):Future<A> \r\n\t\treturn trigger.asFuture();\r\n\t\r\n\tstatic public function ofMany<A>(futures:Array<Future<A>>, ?gather:Bool = true) {\r\n\t\tvar ret = sync([]);\r\n\t\tfor (f in futures)\r\n\t\t\tret = ret.flatMap(\r\n\t\t\t\tfunction (results:Array<A>) \r\n\t\t\t\t\treturn f.map(\r\n\t\t\t\t\t\tfunction (result) \r\n\t\t\t\t\t\t\treturn results.concat([result]),\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t),\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\treturn \r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\t@:from static function fromMany<A>(futures:Array<Future<A>>):Future<Array<A>> \r\n\t\treturn ofMany(futures);\r\n\t\r\n\t//TODO: use this as `sync` when Haxe stops upcasting ints\r\n\t@:noUsing static public function lazy<A>(l:Lazy<A>):Future<A>\r\n\t\treturn new Future(function (cb:Callback<A>) { cb.invoke(l); return null; });\t\t\r\n\t\r\n\t@:noUsing static public function sync<A>(v:A):Future<A> \r\n\t\treturn new Future(function (callback) { callback.invoke(v); return null; } );\r\n\t\t\r\n\t@:noUsing static public function async<A>(f:(A->Void)->Void, ?lazy = false):Future<A> \r\n\t\tif (lazy) \r\n\t\t\treturn flatten(Future.lazy(async.bind(f, false)));\r\n\t\telse {\r\n\t\t\tvar op = trigger();\r\n\t\t\tf(op.trigger);\r\n\t\t\treturn op;\t\t\t\r\n\t\t}\t\t\r\n\t\t\r\n\t@:noCompletion @:op(a || b) static public function or<A>(a:Future<A>, b:Future<A>):Future<A>\r\n\t\treturn a.first(b);\r\n\t\t\r\n\t@:noCompletion @:op(a || b) static public function either<A, B>(a:Future<A>, b:Future<B>):Future<Either<A, B>>\r\n\t\treturn a.map(Either.Left, false).first(b.map(Either.Right, false));\r\n\t\t\t\r\n\t@:noCompletion @:op(a && b) static public function and<A, B>(a:Future<A>, b:Future<B>):Future<Pair<A, B>>\r\n\t\treturn a.merge(b, function (a, b) return new Pair(a, b));\r\n\t\r\n\t@:noCompletion @:op(a >> b) static public function _tryFailingFlatMap<D, F, R>(f:Surprise<D, F>, map:D->Surprise<R, F>)\r\n\t\treturn f.flatMap(function (o) return switch o {\r\n\t\t\tcase Success(d): map(d);\r\n\t\t\tcase Failure(f): Future.sync(Failure(f));\r\n\t\t});\r\n\r\n\t@:noCompletion @:op(a >> b) static public function _tryFlatMap<D, F, R>(f:Surprise<D, F>, map:D->Future<R>):Surprise<R, F> \r\n\t\treturn f.flatMap(function (o) return switch o {\r\n\t\t\tcase Success(d): map(d).map(Success);\r\n\t\t\tcase Failure(f): Future.sync(Failure(f));\r\n\t\t});\r\n\t\t\r\n\t@:noCompletion @:op(a >> b) static public function _tryFailingMap<D, F, R>(f:Surprise<D, F>, map:D->Outcome<R, F>)\r\n\t\treturn f.map(function (o) return o.flatMap(map));\r\n\r\n\t@:noCompletion @:op(a >> b) static public function _tryMap<D, F, R>(f:Surprise<D, F>, map:D->R)\r\n\t\treturn f.map(function (o) return o.map(map));\t\t\r\n\t\r\n\t@:noCompletion @:op(a >> b) static public function _flatMap<T, R>(f:Future<T>, map:T->Future<R>)\r\n\t\treturn f.flatMap(map);\r\n\r\n\t@:noCompletion @:op(a >> b) static public function _map<T, R>(f:Future<T>, map:T->R)\r\n\t\treturn f.map(map);\r\n\r\n\t@:noUsing static public inline function trigger<A>():FutureTrigger<A> \r\n\t\treturn new FutureTrigger();\r\n\t\r\n}\r\n\r\n\r\nclass FutureTrigger<T> {\r\n\tvar result:T;\r\n\tvar list:CallbackList<T>;\r\n\tvar future:Future<T>;\r\n\tpublic function new() {\r\n\t\tthis.list = new CallbackList();\r\n\t\tfuture = new Future(\r\n\t\t\tfunction (callback)\r\n\t\t\t\treturn \r\n\t\t\t\t\tif (list == null) {\r\n\t\t\t\t\t\tcallback.invoke(result);\r\n\t\t\t\t\t\tnull;\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse list.add(callback)\r\n\t\t);\r\n\t}\r\n\tpublic inline function asFuture() return future;\r\n\t\r\n\tpublic inline function trigger(result:T):Bool\r\n\t\treturn\r\n\t\t\tif (list == null) false;\r\n\t\t\telse {\r\n\t\t\t\tvar list = this.list;\r\n\t\t\t\tthis.list = null;\r\n\t\t\t\tthis.result = result;\r\n\t\t\t\tlist.invoke(result);\r\n\t\t\t\tlist.clear();//free callback links\r\n\t\t\t\ttrue;\r\n\t\t\t}\r\n}\r\n\r\ntypedef Surprise<D, F> = Future<Outcome<D, F>>;","package tink.core;\r\n\r\nabstract Lazy<T>(Void->T) {\r\n\t\r\n\tinline function new(r) this = r;\r\n\t\r\n\t@:to public inline function get():T\r\n\t\treturn (this)();\r\n\t\t\t\r\n\t@:from static public function ofFunc<T>(f:Void->T) {\r\n\t\tvar result = null;\r\n\t\t#if debug var busy = false; #end\r\n\t\treturn new Lazy(function () {\r\n\t\t\t#if debug if (busy) throw new Error('circular lazyness');#end\r\n\t\t\tif (f != null) {\r\n\t\t\t\t#if debug busy = true;#end\r\n\t\t\t\tresult = f();\r\n\t\t\t\tf = null;\r\n\t\t\t\t#if debug busy = false;#end\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\t\r\n\tpublic inline function map<A>(f:T->A):Lazy<A> \r\n\t\treturn Lazy.ofFunc(function () return f(get()));\r\n\t\t\r\n\tpublic inline function flatMap<A>(f:T->Lazy<A>):Lazy<A> \r\n\t\treturn Lazy.ofFunc(function () return f(get()).get());\r\n\t\r\n\t@:from static inline function ofConst<T>(c:T) \r\n\t\treturn new Lazy(function () return c);\r\n}\t","package tink.core;\r\n\r\nimport haxe.ds.Option;\r\nimport tink.core.Either;\r\n\r\nenum Outcome<Data, Failure> {//TODO: turn into abstract when this commit is released: https://github.com/HaxeFoundation/haxe/commit/e8715189fc055220f2f33a06c5e1331c96310a88\r\n\tSuccess(data:Data);\r\n\tFailure(failure:Failure);\r\n}\r\n\r\nclass OutcomeTools {\r\n\tstatic public function sure<D, F>(outcome:Outcome<D, F>):D \r\n\t\treturn\r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): \r\n\t\t\t\t\tdata;\r\n\t\t\t\tcase Failure(failure): \r\n\t\t\t\t\tif (Std.is(failure, Error)) \r\n\t\t\t\t\t\tuntyped failure.throwSelf();\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthrow failure;\r\n\t\t\t}\r\n\t\r\n\tstatic public function toOption<D, F>(outcome:Outcome<D, F>):Option<D>\r\n\t\treturn \r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): Option.Some(data);\r\n\t\t\t\tcase Failure(_): Option.None;\r\n\t\t\t}\r\n\t\r\n\tstatic public function toOutcome<D>(option:Option<D>, ?pos:haxe.PosInfos):Outcome<D, Error>\r\n\t\treturn\r\n\t\t\tswitch (option) {\r\n\t\t\t\tcase Some(value): \r\n\t\t\t\t\tSuccess(value);\r\n\t\t\t\tcase None: \r\n\t\t\t\t\tFailure(new Error(NotFound, 'Some value expected but none found in ' + pos.fileName + '@line ' + pos.lineNumber));\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function orUse<D, F>(outcome: Outcome<D, F>, fallback: Lazy<D>):D \r\n\t\treturn\r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): data;\r\n\t\t\t\tcase Failure(_): fallback;\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\tstatic public inline function orTry<D, F>(outcome: Outcome<D, F>, fallback: Lazy<Outcome<D, F>>):Outcome<D, F> \r\n\t\treturn\r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(_): outcome;\r\n\t\t\t\tcase Failure(_): fallback;\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function equals<D, F>(outcome:Outcome<D, F>, to: D):Bool \r\n\t\treturn \r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): data == to;\r\n\t\t\t\tcase Failure(_): false;\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function map<A, B, F>(outcome:Outcome<A, F>, transform: A->B) \r\n\t\treturn \r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(a): \r\n\t\t\t\t\tSuccess(transform(a));\r\n\t\t\t\tcase Failure(f): \r\n\t\t\t\t\tFailure(f);\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function isSuccess<D, F>(outcome:Outcome<D, F>):Bool \r\n\t\treturn \r\n\t\t\tswitch outcome {\r\n\t\t\t\tcase Success(_): true;\r\n\t\t\t\tdefault: false;\r\n\t\t\t}\r\n\t\r\n\tstatic public function flatMap<DIn, FIn, DOut, FOut>(o:Outcome<DIn, FIn>, mapper:OutcomeMapper<DIn, FIn, DOut, FOut>):Outcome<DOut, FOut> {\r\n\t\treturn mapper.apply(o);\r\n\t}\r\n}\r\n\r\nprivate abstract OutcomeMapper<DIn, FIn, DOut, FOut>({ f: Outcome<DIn, FIn>->Outcome<DOut, FOut> }) {\r\n\tfunction new(f) this = { f: f };\r\n\tpublic function apply(o) \r\n\t\treturn this.f(o);\r\n\t\t\r\n\t@:from static function withSameError<In, Out, Error>(f:In->Outcome<Out, Error>):OutcomeMapper<In, Error, Out, Error> {\r\n\t\treturn new OutcomeMapper(function (o)\r\n\t\t\treturn switch o {\r\n\t\t\t\tcase Success(d): f(d);\r\n\t\t\t\tcase Failure(f): Failure(f);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\t\r\n\t@:from static function withEitherError<DIn, FIn, DOut, FOut>(f:DIn->Outcome<DOut, FOut>):OutcomeMapper<DIn, FIn, DOut, Either<FIn, FOut>> {\r\n\t\treturn new OutcomeMapper(function (o)\r\n\t\t\treturn switch o {\r\n\t\t\t\tcase Success(d): \r\n\t\t\t\t\tswitch f(d) {\r\n\t\t\t\t\t\tcase Success(d): Success(d);\r\n\t\t\t\t\t\tcase Failure(f): Failure(Right(f));\r\n\t\t\t\t\t}\r\n\t\t\t\tcase Failure(f): Failure(Left(f));\r\n\t\t\t}\r\n\t\t);\t\t\r\n\t}\r\n}","package tink.core;\r\n\r\nabstract Pair<A, B>(MPair<A, B>) {\r\n\t\r\n\tpublic var a(get, never):A;\r\n\tpublic var b(get, never):B;\r\n\t\r\n\tpublic inline function new(a:A, b:B) this = new MPair(a, b);\r\n\t\r\n\tinline function get_a():A return this.a;\r\n\tinline function get_b():B return this.b;\r\n\t\r\n\t@:to inline function toBool() \r\n\t\treturn this != null;\r\n\t\t\r\n\t@:op(!a) public function isNil() \r\n\t\treturn this == null;\r\n\t\r\n\tstatic public function nil<A, B>():Pair<A, B> \r\n\t\treturn null;\r\n}\r\n\r\n#if neko\r\n\tprivate typedef Data<A, B> = neko.NativeArray<Dynamic>;\r\n#elseif (js || java)\r\n\tprivate typedef Data<A, B> = { a: A, b: B } \r\n\t\t//this is possibly also the best choice for PHP\r\n\t\t//also for reasons yet unknown to me Java will be unable to deal with a class here\r\n#else\r\n\tprivate class Data<A, B> {\r\n\t\tpublic var a:A;\r\n\t\tpublic var b:B;\r\n\t\tpublic function new(a, b) {\r\n\t\t\tthis.a = a;\r\n\t\t\tthis.b = b;\r\n\t\t}\r\n\t}\r\n#end\r\n\r\nabstract MPair<A, B>(Data<A, B>) {\r\n\tpublic var a(get, set):A;\r\n\tpublic var b(get, set):B;\r\n\t\r\n\tpublic inline function new(a:A, b:B) this =\r\n\t\t#if neko\r\n\t\t\tuntyped $array(a, b);\r\n\t\t#elseif (js || java)\r\n\t\t\t{ a: a, b: b };\r\n\t\t#else\r\n\t\t\tnew Data(a, b);\r\n\t\t#end\r\n\t\r\n\tinline function get_a():A \r\n\t\treturn #if neko this[0] #else this.a #end;\r\n\t\t\r\n\tinline function get_b():B \r\n\t\treturn #if neko this[1] #else this.b #end;\r\n\t\t\r\n\tinline function set_a(v:A):A\r\n\t\treturn #if neko this[0] #else this.a #end = v;\r\n\t\t\r\n\tinline function set_b(v:B):B\r\n\t\treturn #if neko this[1] #else this.b #end = v;\r\n}\t","package tink.core;\r\n\r\nimport tink.core.Callback;\r\nimport tink.core.Noise;\r\n\r\nabstract Signal<T>(Callback<T>->CallbackLink) {\r\n\t\r\n\tpublic inline function new(f:Callback<T>->CallbackLink) this = f;\t\r\n\t\r\n\tpublic inline function handle(handler:Callback<T>):CallbackLink \r\n\t\treturn (this)(handler);\r\n\t\r\n\tpublic function map<A>(f:T->A, ?gather = true):Signal<A> {\r\n\t\tvar ret = new Signal(function (cb) return handle(function (result) cb.invoke(f(result))));\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\tpublic function flatMap<A>(f:T->Future<A>, ?gather = true):Signal<A> {\r\n\t\tvar ret = new Signal(function (cb) return handle(function (result) f(result).handle(cb)));\r\n\t\treturn \r\n\t\t\tif (gather) ret.gather() \r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\tpublic function filter(f:T->Bool, ?gather = true):Signal<T> {\r\n\t\tvar ret = new Signal(function (cb) return handle(function (result) if (f(result)) cb.invoke(result)));\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\tpublic function join(other:Signal<T>, ?gather = true):Signal<T> {\r\n\t\tvar ret = new Signal(\r\n\t\t\tfunction (cb:Callback<T>):CallbackLink \r\n\t\t\t\treturn [\r\n\t\t\t\t\thandle(cb),\r\n\t\t\t\t\tother.handle(cb)\r\n\t\t\t\t]\r\n\t\t);\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\tpublic function next():Future<T> {\r\n\t\tvar ret = Future.trigger();\r\n\t\thandle(handle(ret.trigger));\r\n\t\treturn ret.asFuture();\r\n\t}\r\n\t\r\n\tpublic function noise():Signal<Noise>\r\n\t\treturn map(function (_) return Noise);\r\n\t\r\n\tpublic function gather():Signal<T> {\r\n\t\tvar ret = trigger();\r\n\t\thandle(function (x) ret.trigger(x));\r\n\t\treturn ret.asSignal();\r\n\t}\r\n\t\r\n\tstatic public function trigger<T>():SignalTrigger<T>\r\n\t\treturn new SignalTrigger();\r\n\t\t\r\n\tstatic public function ofClassical<A>(add:(A->Void)->Void, remove:(A->Void)->Void, ?gather = true) {\r\n\t\tvar ret = new Signal(function (cb:Callback<A>) {\r\n\t\t\tvar f = function (a) cb.invoke(a);\r\n\t\t\tadd(f);\r\n\t\t\treturn remove.bind(f);\r\n\t\t});\r\n\t\t\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n}\r\n\r\nabstract SignalTrigger<T>(CallbackList<T>) from CallbackList<T> {\r\n\tpublic inline function new() this = new CallbackList();\r\n\tpublic inline function trigger(event:T)\r\n\t\tthis.invoke(event);\r\n\tpublic inline function getLength()\r\n\t\treturn this.length;\r\n\t@:to public function asSignal():Signal<T> \r\n\t\treturn new Signal(this.add);\r\n}","package wax.asset;\r\n\r\nimport wax.asset.load.Asset;\r\nimport js.Browser;\r\n\r\nclass Image implements Asset{\r\n\r\n\tpublic var id(default,null) : AssetId;\r\n\r\n\tpublic var native(default, null) : js.html.Image;\r\n\r\n\tprivate var _canvas : js.html.CanvasElement;\r\n\tprivate var _canvasCtx : js.html.CanvasRenderingContext2D;\r\n\t\r\n\r\n\tprivate var _data : ImageData = null;\r\n\tprivate var _pixeldata : js.html.ImageData = null;\r\n\r\n\r\n\tpublic function new(id : AssetId, native : js.html.Image){\r\n\t\tthis.id = id;\r\n\t\tthis.native = native;\r\n\t}\r\n\r\n\tpublic function getData() : ImageData{\r\n\t\tif(_data == null){\r\n\t\t\t_canvas = Browser.document.createCanvasElement();\r\n\t\t\t_canvas.width  = native.width;\r\n\t\t\t_canvas.height = native.height;\t\t\t\r\n\t\t\t_canvasCtx = _canvas.getContext2d();\r\n\r\n\t\t\t_canvasCtx.drawImage(native, 0, 0,native.width,native.height);\r\n\r\n\t\t\tvar nativeImageData = _canvasCtx.getImageData(0, 0, native.width, native.height);\r\n\t\t\t_data = new ImageData(nativeImageData);\r\n\t\t}\r\n\t\treturn _data;\r\n\t}\r\n\r\n\tpublic function getOffset(x:Int,y:Int) :Int{\r\n\t\treturn ((y*(native.width*4)) + (x*4));\r\n\t}\r\n\r\n    public function getRedAt(x:Int,y:Int) :Int{\r\n        return getData().native.data[getOffset(x,y)+0];\r\n    }\r\n\r\n    public function getGreenAt(x:Int,y:Int) :Int{\r\n        return getData().native.data[getOffset(x,y)+1];\r\n    }\r\n\r\n    public function getBlueAt(x:Int,y:Int) :Int{\r\n        return getData().native.data[getOffset(x,y)+2];\r\n    }\r\n\r\n    public function getAlphaAt(x:Int,y:Int) :Int{\r\n        return getData().native.data[getOffset(x,y)+3];\r\n    }\r\n\r\n    public function getPixel(x:Int,y:Int) : Array<Int>{\r\n\r\n        var pixeldata=[];\r\n        var data=getData().native.data;\r\n        var offset=getOffset(x,y);\r\n        pixeldata[0]=data[offset+0];\r\n        pixeldata[1]=data[offset+1];\r\n        pixeldata[2]=data[offset+2];\r\n        pixeldata[3]=data[offset+3];\r\n\r\n        return pixeldata;\r\n    }\r\n}","package wax.asset;\r\n\r\nclass ImageData{\r\n\r\n\tpublic var native(default, null) : js.html.ImageData;\r\n\r\n\tpublic function new(native : js.html.ImageData){\r\n\t\tthis.native = native;\r\n\t}\r\n\r\n\r\n}","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n* \n****/\n\npackage wax.system;\n\nimport wax.system.Component;\nimport wax.system.Component;\nimport com.fermmtools.utils.ObjectHash;\n\nclass ComponentOwner{\n    private var _components : ObjectHash<Dynamic, Dynamic>;\n\n    public function new() {\n        _components = new ObjectHash();\n    }\n\n    public function get<T : Component>(componentClass : Class<T>) : T {\n        return _components.get(componentClass);\n    }\n\n    public function has(componentClasses : Array<Class<Dynamic>>) : Bool {\n        for (componentClass in componentClasses){\n            if (get(componentClass) == null){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    private function initialise(components : Array<Component>) : Array<Component>{\n        components = components.copy();\n\n        var componentWithMissingDependencies : Component = null;\n        var lengthAtThatpoint = 0;\n\n\n        var componentsAdded = new ObjectHash<Class<Dynamic>, Dynamic>();\n        for (componentClass in _components){\n            componentsAdded.set(componentClass, true);\n        }\n        while (components.length >0){\n            var component = components.shift();\n            var dependenciesFound = true;\n            if (component.requiredComponents != null){\n                for (requiredComponent in component.requiredComponents){\n                    if (!componentsAdded.exists(requiredComponent)){\n                        dependenciesFound = false;\n                        components.push(component); // add back to the end of the list\n                        if (componentWithMissingDependencies == component && lengthAtThatpoint == components.length){\n                            Report.aWarning(Channels.SYSTEM, \"Could not resolved dependencies for \", [components]);\n                            return components;\n                        }\n                        if (componentWithMissingDependencies == null){\n                            componentWithMissingDependencies = component;\n                            lengthAtThatpoint = components.length;\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (dependenciesFound){\n                componentWithMissingDependencies = null;\n                var accessClass = add(component);\n                component.initialise();\n                componentsAdded.set(accessClass, true);\n            }\n        }\n\n        return components;\n\n    }\n\n    private function add<T : Component>(component :T) : Class<Dynamic> {\n        var componentAccessClass = component.attach(this);\n        if (componentAccessClass != null){\n            _components.set(componentAccessClass, component);\n        }\n        return componentAccessClass;\n    }\n}","/****\r\n* Wighawag License:\r\n* - free to use for commercial and non commercial application\r\n* - provided the modification done to it are given back to the community\r\n* - use at your own risk\r\n* \r\n****/\r\n\r\npackage wax.system;\r\n\r\nclass Entity extends ComponentOwner{\r\n\r\n    public var type(default, null) : EntityType;\r\n\r\n    public function new() {\r\n        super();\r\n    }\r\n\r\n    public function setup(entityComponents : Array<EntityComponent>, ?type : EntityType) : Void{\r\n        if (type == null){\r\n            type = new EntityType();\r\n        }\r\n        this.type = type;\r\n        var components = new Array<Component>();\r\n        for (component in entityComponents){\r\n            var success = component.attachEntity(this);\r\n            if (success){\r\n                components.push(component);\r\n            }\r\n            else{\r\n                component.detachEntity();\r\n            }\r\n        }\r\n\r\n        initialise(components);\r\n\r\n    }\r\n\r\n}\r\n","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n* \n****/\n\npackage wax.system;\n\nclass EntityType extends ComponentOwner{\n\n    public var id(default, null) : String;\n\n    public function new(id : String = \"default\") {\n        super();\n        this.id = id;\n    }\n\n    public function setup(typeComponents : Array<EntityTypeComponent>) : Void{\n        var components = new Array<Component>();\n        for (component in typeComponents){\n            components.push(component);\n        }\n        initialise(components);\n    }\n\n    public function createEntity(entityComponents : Array<EntityComponent>) : Entity{\n\n        entityComponents = entityComponents.copy(); //TODO remove safety copy ?\n        for (componentKey in _components){\n            var component = _components.get(componentKey); // TODO investigate why I get error when using _components.values()\n            component.populateEntity(entityComponents);\n        }\n        var entity = new Entity();\n        entity.setup(entityComponents, this);\n        return entity;\n\n    }\n}\n","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n*\n****/\n\npackage wax.system;\n\nimport msignal.Signal;\n\nclass Model extends ComponentOwner{\n\n    public var entities : Array<Entity>;\n    private var entitiesSet : Map<Entity, Bool>;\n\n    public var onEntityAdded : Signal1<Entity>;\n    public var onEntityRemoved : Signal1<Entity>;\n\n    private var _updatableComponents : Array<Updatable>;\n    private var _inGateComponents : Array<InGate>;\n    private var _outGateComponents : Array<OutGate>;\n\t\n    public function new(){\n        super();\n        entities = new Array<Entity>();\n        entitiesSet = new Map();\n        onEntityAdded = new Signal1();\n        onEntityRemoved = new Signal1();\n\n        _updatableComponents = new Array();\n        _inGateComponents = new Array();\n        _outGateComponents = new Array();\n    }\n\n\n    public function setup(modelComponents : Array<ModelComponent>) : Void{\n        var components = new Array<Component>();\n        for (modelComponent in modelComponents){\n            if (Std.is(modelComponent, Updatable)){\n                _updatableComponents.push(cast modelComponent);\n            }\n            if (Std.is(modelComponent, InGate)){\n                _inGateComponents.push(cast modelComponent);\n            }\n            if (Std.is(modelComponent, OutGate)){\n                _outGateComponents.push(cast modelComponent);\n            }\n            components.push(modelComponent);\n            modelComponent.model = this;\n        }\n\n        var failedComponents = initialise(components);\n\n        for (failedComponent in failedComponents){\n            Report.aWarning(Channels.SYSTEM, \"systemComponent failed to find its dependencies, it is disabled \", failedComponent);\n            if (Std.is(failedComponent, Updatable)){\n                _updatableComponents.remove(cast failedComponent);\n            }\n            if (Std.is(failedComponent, InGate)){\n                _inGateComponents.remove(cast failedComponent);\n            }\n            if (Std.is(failedComponent, OutGate)){\n                _outGateComponents.remove(cast failedComponent);\n            }\n            cast(failedComponent,ModelComponent).model = null;\n        }\n    }\n\n    public function update(dt : Float, now  : Float) : Void{\n        for (component in _updatableComponents){\n            component.update(dt, now);\n        }\n    }\n\n    public function canAdd(entity : Entity) : Bool{\n        for (gate in _inGateComponents){\n            if (!gate.canAdd(entity)){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public function canRemove(entity : Entity) : Bool{\n        for (gate in _outGateComponents){\n            if (!gate.canRemove(entity)){\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public function addEntity(entity : Entity, ?checkGate = true) : Bool\n    {\n        if (!checkGate || canAdd(entity)){\n            if (entitiesSet.exists(entity)){\n                return false;\n            }\n            entities.push(entity);\n            entitiesSet.set(entity, true);\n            onEntityAdded.dispatch(entity);\n            return true;\n        }\n        return false;\n    }\n\n    public function removeEntity(entity : Entity, ?checkGate = true) : Bool\n    {\n        if (!checkGate || canRemove(entity)){\n            var removed : Bool = entities.remove(entity);\n            if (removed){\n                entitiesSet.remove(entity);\n                onEntityRemoved.dispatch(entity);\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage;\n\n// Can't enable @:coreApi because some fields are now inline getters\n// @:coreApi\n@:keepInit\nextern class Math\n{\n\tstatic var PI(default,null) : Float;\n\n\tstatic var NEGATIVE_INFINITY(get, null) : Float;\n\tprivate static inline function get_NEGATIVE_INFINITY () : Float {\n\t\treturn -(untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var POSITIVE_INFINITY(get,null) : Float;\n\tprivate static inline function get_POSITIVE_INFINITY () : Float {\n\t\treturn (untyped __js__(\"Infinity\"));\n\t}\n\n\tstatic var NaN(get, null) : Float;\n\tprivate static inline function get_NaN () : Float {\n\t\treturn (untyped __js__(\"NaN\"));\n\t}\n\n\tstatic function abs(v:Float):Float;\n\tstatic function acos(v:Float):Float;\n\tstatic function asin(v:Float):Float;\n\tstatic function atan(v:Float):Float;\n\tstatic function atan2(y:Float, x:Float):Float;\n\tstatic function ceil(v:Float):Int;\n\tstatic function cos(v:Float):Float;\n\tstatic function exp(v:Float):Float;\n\tstatic function floor(v:Float):Int;\n\tstatic function log(v:Float):Float;\n\tstatic function max(a:Float, b:Float):Float;\n\tstatic function min(a:Float, b:Float):Float;\n\tstatic function pow(v:Float, exp:Float):Float;\n\tstatic function random() : Float;\n\tstatic function round(v:Float):Int;\n\tstatic function sin(v:Float):Float;\n\tstatic function sqrt(v:Float):Float;\n\tstatic function tan(v:Float):Float;\n\n\tstatic inline function ffloor( v : Float ) : Float {\n\t\treturn floor(v);\n\t}\n\n\tstatic inline function fceil( v : Float ) : Float {\n\t\treturn ceil(v);\n\t}\n\n\tstatic inline function fround( v : Float ) : Float {\n\t\treturn round(v);\n\t}\n\n\tstatic inline function isFinite( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isFinite\"))(f);\n\t}\n\n\tstatic inline function isNaN( f : Float ) : Bool {\n\t\treturn (untyped __js__(\"isNaN\"))(f);\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __feature__(\"Type.resolveClass\", $hxClasses[\"Math\"] = Math);\n\t}\n}\n","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n*\n****/\n\npackage wax.report;\n\nimport haxe.macro.Expr;\n\nimport haxe.PosInfos;\n\nclass Report\n{\n\n\tpublic static var DEBUG = \"debug\";\n\tpublic static var ERROR = \"error\";\n\tpublic static var WARNING = \"warn\";\n\tpublic static var INFO = \"info\";\n\tpublic static var LOG = \"log\";\n\n    macro static public function aDebugInfo(message : Expr, ?expr1 : Expr, ?expr2 : Expr, ?expr3 : Expr) : Expr\n    {\n        return report(DEBUG, message, expr1, expr2, expr3);\n    }\n\n\tmacro static public function anError(message : Expr, ?expr1 : Expr, ?expr2 : Expr, ?expr3 : Expr) : Expr\n\t{\n        return report(ERROR, message, expr1, expr2, expr3);\n\t}\n\n    macro static public function aWarning(message : Expr, ?expr1 : Expr, ?expr2 : Expr, ?expr3 : Expr) : Expr\n\t{\n        return report(WARNING, message, expr1, expr2, expr3);\n\t}\n\n    macro static public function anInfo(message : Expr, ?expr1 : Expr, ?expr2 : Expr, ?expr3 : Expr) : Expr\n\t{\n        return report(INFO, message, expr1, expr2, expr3);\n\t}\n\n    macro static public function any(message : Expr, ?expr1 : Expr, ?expr2 : Expr, ?expr3 : Expr) : Expr\n    {\n        return report(LOG, message, expr1, expr2, expr3);\n    }\n\n    #if macro\n    static private function report(severity : String, message : Expr, ?expr1 : Expr, ?expr2 : Expr, ?expr3 : Expr) : Expr\n    {\n        var context = haxe.macro.Context;\n        var pos = context.currentPos();\n\n\n        var params = new Array<Expr>();\n        params.push({expr : EConst(CString(severity)), pos : pos});\n\n\n        params.push(message);\n        if (expr1 != null){\n            params.push(expr1);\n        }\n        if (expr2 != null){\n            params.push(expr2);\n        }\n        if (expr3 != null){\n            params.push(expr3);\n        }\n\n        return {expr : ECall({expr : EConst(CIdent('trace')), pos : pos},params), pos : pos};\n    }\n\n    #end\n\n}\n","/****\n* Wighawag License:\n* - free to use for commercial and non commercial application\n* - provided the modification done to it are given back to the community\n* - use at your own risk\n* \n****/\n\npackage wax.system;\nclass Channels {\n    public static var SYSTEM : String = \"wax-system\";\n}\n"],
"names":[],
"mappings":";;;;;;;;;;OAyBO,SAAgD;CACtD,EAAM,FAAU,AAAU;CAC1B,EAAS,QAAe,VAAG;;;;;OAGrB,KAAoC;EAC1C,AAAI,DAAW,EAAc;EAC7B,CAAM,FAAO;EACb,CAAM;EACC,KAAC,HAAO;;;;;;;sBCIT,VACN;CAAQ;CAAR,KAAQ;KACH;EACI,DAAQ;EACO,EAAQ;EACvB,DAAa;EACb,DAAiB,AAAE;EACnB,DAAmB,AAAE;EACrB,DAAmB,AAAE;EACtB;KACH;EACI,DAAQ;EACT,OAAS,AAAK,RAAE,AAAG,AAAa,AAAE,EAAK,FAAE,AAAK,AAAE,AAAG,AAAE,AAAE;KAC1D;EACI,DAAQ;EACR,DAAE,AAAS;EACX,DAAE,AAAS;EACZ,OAAS,AAAK,RAAE,AAAG,AAAa,AAAE,EAAK,FAAE,AAAK,AAAE,AAAG,AAAK,AAAE,AAAG,AAAK,AAAE,AAAG,AAAK,AAAE;;EAErF,IAAM,HAA2B;;;kBAI5B,AAAoD;CAIlD,EAAM,FAAc;CAE5B,CAAI,EAAK,HACO;CACT;;qBAGD,DAA8D;CACpE,CAAI,EAAO,AAAQ,AAAO,AAAK,AAAO,AAAQ,DAAM,FAAW;CAC/D,CAAI,EAAO,HAAO,EAAM;CACxB,CAAI,CAAM,FAAG;EACZ,CAAM,AAAW;EACjB,AAAI,CAAM,FAAI,EAAM;MACf,JAAI,CAAM,FACf,EAAM,AAAW,AAAM;CAGjB,AAAmB,AAAK;;sBAGzB,JAAqD;CACjD;CACV,CAAI,CAAI,FAAG;EACV,EAAK;EACL,AAAI,CAAI,FAAG,EAAI;;CAEhB,IAAO,FAAI,FACX;EACC,AAAY,DACJ;EACR;;CAEM;;qBAkBD,LAA4C;CAC1C,AAAQ,AAAG,AAAK;CACxB,CAAI,EAAK,HAAY;CACrB,AAAS,AAAE;CACJ;;mBAGD,PACN;CAAO,KACA,AACA,IACI,CACT;EAAO,CAAe;OAEhB,IACN;EAAO,DAAa;;;;;;gBChBT,DAAsD;CACnE,UAAU;;;EACT,AAAI,DAAE,AACE;;CACF;;OC/ED,IACN;GAAS;;;;;KAQH,UAAyB;EAC0C,DAAC;EAC1E,AAAI,EAAK,HACR,EAAI,GAEJ,LAAE,EAAK;EACR,CAAI;EACJ;;KA4CM,MAAyB;EAC/B,AAAI,EAAK,HACD;EACA,DAAE;EACV,CAAI,FAAE;EACN,AAAI,EAAK,HACR,EAAI;EACL;EACO;;SAMD,EACN;EAAO,KAAC,HAAK;;UA8CA,CACb;EAAO,qBAAoB;;;;;qBAkFd,NAAkC;CAC/C,EAAY;CACZ,EAAW;;;;;SAGE,EACb;EAAO,EAAQ;;MAGF,KAAkB;EAC/B,CAAM,FAAK;EACX,CAAO,FAAK;EACL;;;;;;;;gBCpOM,EACb;CAAO,GAAI;CAAE;;EAA4B;;;qBAiBrB,CACpB;CAAO,AAAW,AAAE;;iBAGP,LAA+C;CACpD;CACR,CAAI,EAAK,HAAc;EACD;EACrB;EACA,AAAI,EAAK,AAAY,AAAK,AAAoB,HAAoB,AAAG,AAAK,AAAO;EACjF;;CAEM;;qBAGM,TACb;CAAO,GAAuB,AAAc,HAAC,AAAC,AAAgB,GAAM,AAAe;;yBAOtE,TAA6D;CAC1E,CAAI,EAAM,HACF;CACR,CAAI,DAAC,AAAW,GAAO,HAAC,AAAW,AAC3B;CACD,GAAY,AAAY,AAAa,AAAa,AAAa;;sBAczD,JAAmE;CAChF,CAAI,DAAC,AAAS,AAAE,AAAgB;CAChC,AAAiB,AAAE;CACZ;;;;;aCxDM,DACb;CAAe,AAAqB,AAAE;;aAGlB,DACpB;CAAO,MAAK,JAAK;;iBAaJ,LACb;CAAe,AAAqB;;aAGvB,DACb;CAAe,GAAK,HAAI,KAAI,LAAW,EAAc;;YCXxC,DACb;GAAI;;;;;KAgBS,OACb;IAAK;;;;;;;yBCySe,PAcpB;CAAO,AAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBCpVjB,JAAiD;CAC9D,CAAI,EAAK,HACD;CACD,AAAiB;;oBAcX,RAAqD;CAClC;CAChC,CAAI,EAAK,HACD;CACD,AAAO;;mBAGD,PAAmD;CAChC;CACzB,AAAO;;oBAGD,LAAgE;CACnD,AAAW;CAErC,CAAI,EAAM,AAAQ,HAAC,AAAgB,AAC3B;CACD;;mBAGM,JAA8D;CACzD,AAAW;CAE7B,CAAI,EAAK,AAAQ,HAAC,AAAe,AACzB;CACD;;2BA6BM,dAA6D;CAC1E;CACO;;kBAGM,QAAqF;CAClF,AAAc,AAAE;CAChC,CAAI,EAAK,HAAO,KAAM,HAAuB;CAC7C,CAAI,DAAmB,AAAK;EAC3B,AAAI,EAAU,HAAO,KAAM,HAAe,AAAO;EAC1C,DAAmB,AAAE,AAAE;;CAE/B,CAAI,EAAU,AAAQ,AAAiB,HACtC,KAAM,HAAe,AAAO;CACtB;;yBA2BM,bAAgE;CAC7C;CACzB;;iBAGM,LACb;CAAQ,AAAiB;CAAzB,KAAQ;KACH;EAAkB;KAClB;EAAiB,DAAO;KACxB;EAEJ,AAAI,DAAU,GAAM,DAAE,FACd;EACD;KACH;EACJ,AAAI,EAAK,HACD;EACA;EACR,AAAI,EAAK,HACD,AAAM;EACN,DAAiB;EACzB,AAAI,EAAK,HACD,AAAO;EACR;KACH;EACJ,AAAI,DAAgB,GAAM,AAAe,HACjC;EACD;KACH;EACG;;EAEA;;;;;;kCChJC,vBACP;CAEQ,EAAO;CAKX,EAAS;;;;;KAGN,SACP;EACc,DAAY;EAEd,DAAS;EACjB,AAAI,EAAK,HACT;GACI,AAAI;GACJ,FAAS,AAAK;;EAGV;EACE;EACV,GAAO,FAAI,FACX;GACI,DAAI,DAAE,GAAM,HACZ;IACI,HAAE,EAAI,AAAK;IACX;;GAGJ,CAAK;;EAGT,DAAO;EACP,DAAO;EAEP;;aAG+C,CAK3C;EAAI,DAAO,AAAK,AAChB;GACI,DAAI,EAAkB,HAClB,EAAiB;GACd;MACJ;GAKH,DAAI,EAAkB,HACtB;IACsB,HAAc;IAChC,FAAI,EAAO,HACX;KACa,JAAW;KACpB,FAAiB,QAAW;MAAO;;KAC5B;;IAGC,HAAW;IACX;IACZ,DAA2B,QAC3B;KACI,HAAI,EAAkB,HAEX,EAAiB,FAAW;KAEhC;;;GAIR;;;KAkBZ,OACP;EACI,AAAI,EAAK,HACE;EACD,DAAY;EAEd,DAAS;EACjB,AAAI,EAAK,HAEE;EAGH;EACE;EACV,GAAO,FAAI,FACX;GACI,DAAI,DAAE,GAAM,HAED,AAAE,EAAI;GAGjB,CAAK;;EAGF;;QAGJ,IACP;EACc,DAAY;EAER;EAEN,DAAS;EACjB,AAAI,EAAK,HAEE;EAGH;EACE;EACV,GAAO,FAAI,FACX;GACI,DAAI,DAAE,GAAM,HAED;GAEX,CAAK;;EAGF;;UAGJ,EACP;EACc,DAAY;EAER;EAEN,DAAS;EACjB,AAAI,EAAK,HAEE;EAGH;EACE;EACV,GAAO,FAAI,FACX;GACI,DAAI,DAAE,GAAM,HACZ;IACI,HAAS,AAAG;IACZ,DAAU;IACV;IACA;;GAEJ,CAAK;;EAGT,AAAI,EAAY,HACZ,AAAY;EAET;;MAGJ,KACP;EACgB;EACD;EACK;EACT,QACE,CAAW;GAAO,IAAC,HAAQ,AAAQ;OACtC,IAAU;GACZ,DAAI,EAAQ,HACR,EAAO;GAED,FAAK;GACf,CAAa;GAEb,DAAI,EAAa,HACjB;IACI,DAAY;IACZ,DAAO;;GAGJ;;;QAKR,GACP;EACgB;EACD;EACK;EACT,QACE,CAAW;GAAO,IAAC,HAAQ,AAAQ;OACtC,IAAU;GACZ,DAAI,EAAQ,HACR,EAAO;GAED,FAAK;GACf,CAAa;GAEb,DAAI,EAAa,HACjB;IACI,DAAY;IACZ,DAAO;;GAGJ;;;UAKR,CAEH;EAAO;;UAGJ,CACP;EACc;EACV;EACY;EAEZ,SAAU;;;GAEN,DAAI,DACJ;IACI;IACA,DAAQ;MAER;GAGJ,FAAQ;GACR;GACA,FAAQ,AAAI;GACZ;;EAGJ;EACO;;aAGJ,DACP;EACI,DAAY;EAEA;EACD;EACK;EAChB,GAAO,DAAQ,AAAQ,HACvB;GACI,DAAI,EAAQ,HACR,EAAO;GAED,FAAK;GACf,FAAY,AAAK;GACjB,FAAY,AAAK,EAAY;GAE7B,CAAa;GACb,DAAI,EAAa,HACjB;IACI,DAAY;IACZ,DAAO;;;;eAMZ,HACP;EACkB;EACJ;EAAV,CAAc,FACd;GADA;GAEY;GACA;GACR,FAAI,AAAG;;;;;;;;;;;;;;;;;;kBC3TX,PACN;GAAU;;;;;;MAGJ,iBAAqE;EAC3E,AAAI,EAAQ,HACX,EAAO;EAGQ,DAAY;EACtB,AAAI,EAAU,HACH;EAGjB,CAAS,FAAa,iBAAsC;GAC9C;GACI;GAChB,YAAgB;CAAQ,AAAQ;;GAChC,aAAiB;CAAQ,AAAQ;;GAFlC;;;;;;;;;EAOY;;;;iBCvBP,NACN;GAAU;;;;;;MAGJ,iBAAoE;EAC1E,AAAI,EAAQ,HACX,EAAO;EAGQ,DAAY;EACtB,AAAI,EAAU,HACH;EAGjB,CAAS,FAAa,iBAAqC;GAC7C;GACb,WAAgB;GAAhB,AACC,YAAgB;CAAQ,AAAQ;;GADjC,AAEC,aAAiB;CAAQ,AAAQ;;GAFlC;;EAOY;;;;aCeP,UAA0D;CAChE,EAAa;CACb,EAAc;;;;kBArCD,KAAoF;CAE/E,AAAW,AAAW,AAAtB;CACC,AAAW,AAAY,AAAvB;CAEZ,AAAkB,AAAc,8BAA4F;EAC7F;EACW;EAChD,IAAO;KACD;GADC;GACe,AAAiB;;KACjC;GAFC;GAEmB,AAAY;;;EAGD;EACW;EAChD,IAAO;KACD;GADC;GACgB,AAAkB;;KACnC;GAFC;GAEmB,AAAa;;;EAGvC,AAAI,EAAmB,AAAQ,AAAkB,HACzC,AAAQ,cAAW,dAAgB,KAEnC,LAAQ,cAAgB,CAA2B;;;;;;YC4BnD,IAAqC;CACxC,EAAO;CACP,UAAe;;;EACM,DAAM;EAAvB,DAAS,AAAT;;;;;;iBA3Da,eAA6H;CAC9I,CAAG,EAAS,HACR,EAAQ;CAIZ,IAAM,FAAe,FACjB,AAAW,AAAI;CAGkC;CAC3C;CAAI;CAAd,AAA2B;EAA3B;EACe,DAAM;EACR,DAAI;EACA,DAAiB,AAAU;YACpC;MAAO;KACE;KADF;KACoB,JAAQ,MAAM,FAAK;KACrC;KAFF;KAEqB,JAAQ;;;CAHA;EAMxC,DAAgB;;CAGpB,AAAuD;CAEF;CAErD,AAAoB,kBAAgE;EACjE;EACY;EACA;EACvB;GAAgB,FAAS;GAAzB,AAAgB,FAAhB;;GACI,GAAO;KACE;IADF;IAEC,HAAS,AAAK;IACd,HAAsB,AAAQ;;KAC7B;IAJF;IAKC,DAAmB;IACnB,HAAsB,AAAQ;;;;EAI1C,AAAG,DACC,AAAsB,AAAQ,KAE9B,LAAsB,AAAQ,aAAU;;CAK7C;;;KAaJ,aACH;EAAO,DAAS;;KAIb,MAAyB;EACP;EACrB,SAAW;;;GACP,FAAS;;EAEN;;;;;WC1EA,EACb;GAAU;;;;;WAGG,OAAmE;EAChF,DAAc,AAAE,AAAE,AAAE;EACpB,DAAS;;eAGI,CACb;EAAO,DAAkB,AAAM;;;;;;;qBCLzB,DAAoC;CAC1C,EAAM;CACN,EAAS;CACT,EAAe;;;;;QAGT,GAAuB;EAChB;EACP,DAAgB,AAAiB;EACjC,AAAI,EAAU,HACV,AAAkB,AAAiB,AAAQ,KAE3C,LAAgB,AAAiB,AAAe;EAEpD,DAAgB,AAAiB;EACjC,CAAW;;;;;;;kCCzBH,AAA8E;CACzE,AAAgB;CAC7B,AAAgB,AAAQ;CACxB,AAAiB;CACH,AAAsB,AAAQ;CAC5C,CAAI,EAAW,HAEX,KAAM,HAA8B,FAAoB;CAErD;;6BAGG,kBAAwF;CACrF,AAAY,AAAI,AAAiB;CAC/B,AAAY,AAAI,AAAmB;CAEpC;CACd,AAAgB,AAAe;CAC/B,AAAgB,AAAe;CAC/B,AAAe;CAED,AAAuB,AAAe;CACpD,CAAI,EAAW,HAEX,KAAM,AAAC,HAA2B,FAAsB;CAGrD;;6BAGA,FACb;CAAiB;;;;;kBCbV,SAAgD;CACvD,EAAM;CACN,EAAqB;;;;yBApBR,LAA8C;CAElD;CACiB;CACpB,AAAe,AAAe;CAC9B,AAAsB,AAAe,AAAG,AAAS,AAAS,AAAkB;CAC5E,AAAiB,AAAe,AAAuB;CACvD,AAAiB,AAAe,AAAuB;CACvD,AAAiB,AAAe,AAAmB;CACzD,AAAiB,AAAe,AAAmB;CAC7C,AAAe,AAAe;CAEvB,mBAAe,nBAAG;;;;;;qFCT/B;CCkF2C,ADlF3C,ECkF2C;CDlF3C,ECkF2C;CDlF3C,ECkF2C;CDlF3C;;;;;;iBCuF2B;EACb,CAAW;EACX,AAAG,EAAiB,HAChB,EAAgB,cAA0B;EAE9C,AAAI,EAA0B,DAA4B,AAAkB,FAAa;GACtE,cAA0B,dAAuB;GAEhE,AAAgB;;EAIF,CAA4B;EAC5C;EAKiB,DAAc,EAAe;EAA7B,DAAc,EAAM,AAAS;;gBAlBnC;EACb,CAAW;EACX,AAAG,EAAiB,HAChB,EAAgB,cAA0B;EAE9C,AAAI,EAA0B,DAA4B,AAAkB,FAAa;GACtE,cAA0B,dAAuB;GAEhE,AAAgB;;EAIF,CAA4B,AAAkB;EAC9D;EAKiB,DAAc,EAAe;EAA7B,DAAc,EAAM,AAAS;EAA7B,DAAc,EAAM,AAAS;;aAlBnC;EACb,CAAW;EACX,AAAG,EAAiB,HAChB,EAAgB,cAA0B;EAE9C,AAAI,EAA0B,DAA4B,AAAkB,FAAa;GACtE,cAA0B,dAAuB;GAEhE,AAAgB;;EAIF,CAA4B,AAAkB;EAC9D;EAKiB,DAAc,EAAe;;uBA3DlB;EAAmB;EAoBd,CAAM,FAAS,AAAM;EAArB,CAAM,FAAS,AAAM;EAArB,CAAM,FAAS,AAAM;EAmElB,KAAQ,JAAR;;QArFvB;EAoBQ,CAA0B;EAA1B,CAA0B;EAA1B,CAA0B;;;;;;;;YCUzD,EAA6B;CACnC,EAAW;CACX,EAAU;CACV,EAAS;CAGT,EAAQ;;;;;SAuGF,MAAwC;EACrC;EAET,CAAkB;EACV,CAAM;EACW,UAAY;GACpC,DAAI,EAAgB,HACnB;GACO;IAAI;;;IAA8B;;GAC1C,DAAK,EAAK,HAAO;IAED;IACM;IACP,HAAsB;IACpC,FAAK,DACA,GAAkB,HAAtB,EAA6B,GAA7B,HAAmC;;GAGrC,DAAI,EAAa,HAChB,EAAI;GACL,DAAI,EAAK,HACR,AAAY;GACb,DAAI,EAAK,AAAQ,AAAK,AAAO,DAAI,FAAM;IACtC,DAAS;IACT,HAAU,EAAkB;MAExB,JAAK,EAAK,HAAO;IACrB,DAAS;IACT,HAAW;MAEP,AAAQ;KACR;IACJ,DAAS;IACT,HAAW;;KACP;IACJ,DAAS;IACT,HAAW;;;IAEX,DAAS;IACT,DAAkB;IAClB,HAAW,EAAe;;;EAG5B,AAAI,DACH,EAAuB;EACd;EACV,AAAI,EAAO,HACV,EAAO,GACH;GAAU;;GAAV,FAAmB;IAAnB;;;;IACJ,FAAI,EAAO,HACV,EAAM,GAEN,FAAO;IACR,AAAO,HAAsB,EAAS,AAAI,FAAsB;;;EAEjE,EACC;EAAI,DACH,AAAO,AAAO,AAAI,KACd,JAAI,EAAO,HAAO;IACP,HAAU,GAAe;IACxC,HAAO,AAAM,EAAI,FAAK,AAAW,AAAS,EAAK,FAAI;IACnD,DAAM;MAEN,LAAO,AAAM,AAAI;;GAElB,AAAS;GACT,FAAQ;GACR;;EAED,AAAI,DAAC,AAAc,AAAS,WAAY;GAAO,CAAY;IAAmB,AAAQ,AAAY,HACjG,AAAmB,AAAe;EAEzB;;EAAV;;;;;GACC,FAAmB,AAAS;;EAC7B,DAAO;EACP,AAAI,DAAC,AACJ,AAAmB;;QAqfN,OAAiC;;SAUjC,KAAiC;;UAUjC,OAAkC;;;;;;;iBC7uB3B,CAiBZ;CAAgB,AAAE;;;;;;iBCwF5B,LAAuC;EAC9B,DAAU;EAClB,AAAI,EAAK,HAAO;GACf;GACQ,FAAR,GAAQ,EAAR,FAAQ;GACR;;EAED,DAAU,AAAE;EAKZ;EACA,CAAI,FAAsB;EAClB,DAAR,GAAQ,EAAR,FAAQ;EACR;EACQ,DAAR,GAAQ,EAAR,FAAQ;;cAGT,FAAyB;EAEP,DAAiB;EAExB;EAAI;EAAd,DAA6B;GAA7B;GAEU,FAAM;GACf,DAAY,DAAiB,GAAO,AAAM,AAAM,HAAI;IAInD;IACQ,HAAR,GAAQ,EAAR,FAAQ;IACD;;;EAGT,DAAW;EACJ;;iBAoBR,LAA4B;EAC3B;EAAU,DAAe;EAAzB,CAAU,FAAoB;GAA9B,AAAU,FAAV;;GACC,FAAgB;GAChB,FAAU,AAAc,AAAE;;EAE3B;;WAaM,CACN;;GAAQ,FAAY;GAApB,GAAQ;KACH;IACJ;;KACI;IACU;IACd,FAAI,EAAK,HAAI;KACZ;KACA;;IAED;IACQ,HAAR,GAAQ,EAAR,FAAQ;;KACJ;IACY;IAChB,FAAI,DAAW,AACd,KACI,JAAI,DAAC,AAAc,AACf,CAAI,CAAI,FAAhB,GAAoB,EAApB,FAA6B,EACzB;KACJ;KACQ,JAAR,GAAQ,EAAR,FAAQ;;;KAEL;IACI,FAAI,DAAZ,GAAgB,EAAhB,FAAyB;;KACrB;IAvBG;IAwBP,FAAyC,EAAK,HAAc;KAC3D,JAAgB;KAChB;;IAED,FAAI,EAAY,HAAa,AAC5B;IACD,EAA8D;KACX;KACrC;KACb;KAIoG;KAC1F;KAAV,FAAc,FAAI;MAAlB;MACC,JAAI,DAAE,GAAM,HACX,KACI;OACJ,LAAI,CAAS,FAAI;QAChB,NAAI,EAAU,HACb,KACI;SACJ;SACQ,RAAR,GAAQ,EAAR,FAAQ;;QAET,LAAS;;OAEV,NAAU,AAAE;;;KAGd,HAAI,CAAS,FACZ;EAAI,EAAU,HACb,KACI;OACJ;OACQ,NAAR,GAAQ,EAAR,FAAQ;;;KAGV;;KACiD;KACjD;KACwB;KACd;;KAAV;;;;;MACC,LAAU;;KACX;;KACiD;KAClC;KACf;KACA,JAAQ;;KACsD;KAC9D;KACqC;KACrC,MAAU;;;MACT,LAAgB;MAChB,LAAU,AAAM;;KAEjB;;KAC2D;KAC3D;KACkC;KAClC,MAAU;;;MACT;MACQ,LAAR,GAAQ,EAAR,FAAQ;MACR,LAAU,AAAM;;KAEjB;;KAC8D;KAC9D;KAC6C;KAC7C,MAAW;;;MAED,LAAc,AAAG;MAC1B,LAAoB,AAAG;MACvB,LAAU;MACV,AAAiB,HAAa;MAI9B,LAAU,AAAM;;KAEjB;;KAC0D;KAClC;KAIhB;KACE,FAAW;KACN;KACL;KACV,AAAO,FAAI,FAAM;MACP,LAAM;MACN,LAAM;MACN,LAAM;MAEf,LAAa,AAAW,GAAM;MAC9B,LAAa,AAAW,AAAC,AAAC,GAAM,DAAK,AAAC,CAAM,DAAM;MAClD,LAAa,AAAW,AAAC,AAAC,GAAM,DAAK,AAAC,CAAM,DAAM;MAClD,LAAa,AAAW,EAAK;;KAE9B,HAAI,EAAK,HAAM;MACL,LAAM;MACN,LAAM;MACf,LAAa,AAAW,GAAM;MAC9B,LAAa,AAAW,AAAC,AAAC,GAAM,DAAK,AAAC,CAAM,DAAM;MAClD,LAAa,AAAW,AAAC,GAAM,DAAK;MAC9B,JAAI,EAAK,DAAM,FAAI;MAChB,LAAM;MACf,LAAa,AAAW,GAAM;MAC9B,LAAa,AAAW,AAAC,GAAM,DAAK;;KAEzB;KAEZ;KACQ,JAAR,GAAQ,EAAR,FAAQ;KACR;KACQ,JAAR,GAAQ,EAAR,FAAQ;;;KAER,HAAI,DAAW;KACf,HAA4I,EAAiB,HAAa;MACzK;MACA,LAAgB,AAAkB;MAClC,JAAI,DAAW,AAAW;MAC1B,LAAc;MACd;MACM;MACN;MACA,LAAgB,AAAkB;MAClC,JAAI,DAAW,AAAW;MAI1B,LAAgB;;;;KAId;IACJ,FAAI,EAAY,HAAa,AAC5B;IACD;IACA,HAAgB;;KACZ;IArKG;IAsKP,FAAI,DAAW;KACd,HAAI,DAAa,AAChB;KACD;;IAEO,HAAR,GAAqB,EAArB,FAAyB;IACzB,HAAgB,AAAiB;IAgFjC,FAAI,DAAe;KAClB;KACA,JAAQ,AAAE;MAEV,LAAgB,AAAE;IACnB;IACQ;IACR,HAAQ,EAAI;IACF;IAAV,DAAc,FAAd;;KACC,JAAU,AAAE;;IAEb,FAAI,DAAW,AAAW;;KACtB;IACJ,EAAM;;;IASN,EAAM,HAAoB,FAAW;;;;;;aCxbhC,KAA6B;CAQzB;CACT,EAAa,FAAY,UAAW;;CAAS;;;;mBA6FjC,RAMZ;CAAO,EAAuB;;;KAtDjB,MAAe;;;;;;;8BC9CvB,nBAAqB;CAKzB;CAEQ;CAAI;CAAd;;EACC,DAAM,AAAuB,AAAO,EAAM;;CACpC;;;KAmED,OACN;EAAO,KAAuB,NAAK;;YAGnC,DAAsB;EACb;EACA;EACG;EACX,GAAO,JAAO;GACL,FAAI;GACb,DAAI,DAAkB,AACrB;GACA,DAAI,EAAK,HAAW;IACnB,FAAI,EAAO,HACV;IACD,DAAI;IACJ;IACA;;GAED,DAAI,CAAI,CAAY,DAAI,FACvB;GACD,AAAI,AAAI,AAAK,FAAC,EAAI;GAClB;;EAED,AAAI,DACH,GAAK;EACC;;WAGT,AAAqB;EACX;EACR,GAAO,JAAO;GACL,FAAI;GAEZ,DAAI,DAAC,GAAK,AAAM,DAAI,CAAO,AAAK,AAAY,AAAK,HAChD,KAEA;;EAEK,DAAe,AAAW,AAAG,EAAI;;mBAG1C,PAA8B;EAC5B,GAAO,JAAO;GACb,DAAI,EAAO,HACV,KAAM;GACP,DAAI,DAAI,GAAQ,HACf;GACO;GACR,DAAI,DAAC,MAAO,HAAP,HACJ,KAAM;GACC;GACR,AAAiB,FAAE,EAAE;;EAEtB;;iBAGF,GAAuC;EACtC,AAAI,DAAI,GAAU,HACjB,KAAM;EACK;EACZ,AAAI,EAAS,HACL,AAAgB,AAAM;EACnB;EACX,GAAO,FAAU,FAChB,AAAU;EACJ,DAAgB,AAAM,AAAI;;aAuB1B,FAAiC;EAC/B,DAAI;EAAZ,IAAQ;KACH;GACG;KACH;GACG;KACH;GACG;KACH;GACG;KACH;GACG;KACH;GACG;KACJ;GACO;GACV,DAAI,DAAI,GAAU,AAAY,DAAS,AAAM,FAC5C,KAAM;GACA,FAAW,AAAI;GACvB,CAAO;GACP,AAAI,FAAsB,AAAtB;GACJ,FAAY;GACL;KACF;GACG;KACH;GACG;KACH;GACG;KACH;GACK;GACD;GACR,FAAW;GACX,EAAO,JAAO;IACL,HAAI;IACZ,FAAI,EAAK,HAAW;KACpB;KACC;;IAED,FAAI,EAAK,HAAW;KACpB;KACS;KACR,JAAE,EAAS,AAAE,AAAK;MAElB,LAAO;;GAEF;KACH;GACI;GACR,FAAW;GACZ,FAAkB;GACX;KACF;GACI;GACR,DAAI,CAAI,CAAK,AAAK,HACjB,KAAM;GACA,FAAM;KACT;GACG;GACR,DAAI,CAAI,CAAK,AAAK,HACjB,KAAM;GACA,FAAO;KACT;GACL,GAAM;;KACF;GACQ;GACH,FAAsB;GAC/B,DAAI,EAAM,HACT,KAAM,HAAqB;GACpB,FAAyB;GACjC,FAAW;GACX,FAAkB;GACX;KACH;GACO;GACC,FAAqB;GACjC,DAAI,EAAS,HACZ,KAAM,HAAoB;GACnB,FAAgB,AAAO;GAC/B,FAAW;GACJ;KACF;GACM;GACC,FAAqB;GACjC,DAAI,EAAS,HACZ,KAAM,HAAoB;GAC3B;GACY;GACF,FAAuB,AAAO;GACxC,DAAI,EAAO,HACV,KAAM,HAAsB,AAAK,AAAI;GAC9B,FAAgB,AAAO;GAC/B,FAAW;GACJ;KACH;GACI;GACR,FAAW;GACD;GACV,EAAO,JAAI,GAAQ,HAClB,AAAM;GACP;GACO;KACH;GACI;GACR,FAAW;GACD;GACV,EAAO,JAAI,GAAQ,HAAW;IACrB;IACR,HAAM,AAAE;;GAET;GACO;KACH;GACI;GACR,FAAW;GACD;GACF,FAAI;GACZ,EAAO,DAAK,HAAW;IACd;IACR,HAAM,AAAE;IACR,DAAI,FAAI;;GAET,DAAI,EAAK,HACR,KAAM;GACA;KACH;GACI;GACR,FAAW;GACD;GACV,EAAO,JAAI,GAAQ,HAAW;IACrB;IACR,HAAM,AAAE;;GAET;GACO;KACH;GACJ;GACA,DAAI,DAAI,GAAQ,AAAY,HAAI,GAAQ,AACvC,HAAI,EAAM,CAAM,AAAY,HAAI,EAAM,CAAM,AAC5C,HAAI,EAAM,CAAM,AAAY,HAAI,EAAM,CAAM,AAC5C,HAAI,EAAM,CAAM,AAAY,HAAI,EAAM,CAAM,AAC5C,HAAI,EAAM,CAAM,HACd;IAEkB,HAAW,AAAI;IAAnC,DAAI;IACJ,AAAO;MAEH;IAAc;IAAd;;IAAJ,DAAI;;GACL,FAAW;GACJ;KACF;GACM;GACD;GACT,DAAI,DAAI,GAAU,AAAY,DAAS,AAAM,FAC7C,KAAM;GAIK;GACZ,DAAI,EAAS,HAAO;IACnB,DAAQ;IACR,DAAQ;;GAED;GACG,AAAM;GACN;CAAC,GAAO,DAAK,AAAI,FAAC,AAAC,GAAQ,HAAK,EAAO,FAAI;GAC5C,AAAI,FAAC,EAAM;GACT,FAAoB;GACrB;GACX,EAAO,FAAI,FAAM;IACP,HAAM,AAAuB,AAAI;IACjC,HAAM,AAAuB,AAAI;IAC1C,HAAU,AAAO,AAAC,GAAM,DAAK,AAAC,CAAM;IAC3B,HAAM,AAAuB,AAAI;IAC1C,HAAU,AAAO,AAAC,GAAM,DAAK,AAAC,CAAM;IAC3B,HAAM,AAAuB,AAAI;IAC1C,HAAU,AAAO,AAAC,GAAM,DAAK;;GAE9B,DAAI,EAAQ,HAAI;IACN,HAAM,AAAuB,AAAI;IACjC,HAAM,AAAuB,AAAI;IAC1C,HAAU,AAAO,AAAC,GAAM,DAAK,AAAC,CAAM;IACpC,FAAI,EAAQ,HAAI;KACN,JAAM,AAAuB,AAAI;KAC1C,JAAU,AAAO,AAAC,GAAM,DAAK,AAAC,CAAM;;;GAItC,CAAO;GACP,FAAW;GACJ;KACH;GACQ;GACH,FAAsB;GAC/B,DAAI,EAAM,HACT,KAAM,HAAqB;GACV,FAAyB;GAC3C,FAAW;GACX,FAAgB;GAChB,DAAI,DAAI,GAAU,HACjB,KAAM;GACA;;;EAGP;EACA,IAAM,AAAC,HAAgB,FAAW,EAAK,AAAgB;;;;;iBCzZlD,NACN;GAAI;;;;;;KAGE,eACE;CAAE,EAAO;;KAGX,SACN;EAAe,DAAE;;QAGX,MACN;EAAe,DAAiB;;QAG1B,MAAoC;EAC1C,AAAY,DAAC,AAAiB,AAAc;EACnC,DAAiB,AAAE;EACrB;;MAGD,KAAgC;EAC9B;EAEP;EACC,AAAI,DAAiB,AACpB,AAAO,EAAI;EACb;EAEM;;UAGD,CACN;EAAe,IACR,DACD,KACK,CAAa;GAAO;OACvB,IAAW;GAAU;GAA2B,FAAa;;;;;oBC1B/D,TAAsB;CAC5B,EAAI;CACI,EAAa;;;;;;KAGf,eAA0C;EACzB,EAAc,HAAS,EAAT;EACrC,DAAE,EAAM;EACR,DAAW,EAAM;;QAWX,MAAkC;EAC/B,CAAM;EACf,AAAa,DAAW,GAAO,HAAc;EACpC,DAAiB,AAAE;EACnB,DAAiB,AAAW;EAC9B;;MAGD,KAA8B;EAC5B;EAEP;EACC,AAAI,DAAiB,AACpB,AAAO,AAAW;EACpB;EAEM;;;;;;;;;oBC/CD,TACN;GAAI;;;;;;KAGE,eACE;CAAE,EAAI,AAAO;;KAGf,SACN;EAAe,DAAE,EAAI;;MAcf,KAAmC;EACjC;EAEP;EACC,AAAI,DAAiB,AACpB,AAAO,AAAW;EACpB;EAEM;;UAGD,CACN;EAAe,IACR,DACD,KACK,CAAa;GAAO;OACvB,IAAW;GAAU;GAA2B,FAAa,EAAI;;;;;;gBCnC1E,GAAqC;CACpC,EAAc;CACd,EAAS;;;;sBAyHI,LACb;CAAO,iBAAU,jBAAO,cAAc;;;KAvHzB,SACb;EAAO,DAAE;;KAGI,WACb;CAAE,EAAO,AAAI;;;;;qBCwCP,NAnBR;CAY2B,AAZ3B,EAY2B;CADF,AAXzB,EAWyB;CADQ,AAVjC,EAUiC;CADN,AAT3B,EAS2B;CAHE,AAN7B,EAM6B;CADL,AALxB,EAKwB;CADI,AAJ5B,EAI4B;CAFF,AAF1B,EAE0B;CADE,AAD5B,EAC4B;CAmB1B,CAAI,EAAQ,AAAQ,DAAc,FAAG,EAAY;;;;;;;;;;;mBCzDnC,PACd;CAAO,AAAQ,AAAU,AAAe,AAAU,AAAc,AAAU;;kBAG5D,JACN;CACG;EAAI,EAAK,HAAO,EAAW,AAAI,AAAa,GAAU;CAKhE,GAAO,HAAa,AAAG;CACvB,CAAI,EAAK,AAAQ,AAAkB,HAClC;;EAAU;EAAV,CAAU,FAAV;GAAU,FAAV;;GACC,CAAO,DAAM,FAAa,AAAG;;;CAC/B;CACA,CAAI,DAAiB,GAAa,AAAe,HAAC,EAAI,FAAwB,GAAkB,HAC/F,GAAe,HAAS,EAAK,GACzB,JAAI,EAA4B,AAAe,AAAyB,HAC5E,AAAsB;;mBAyBX,PACb;EAAI,DAAO,WAAG,RAAV,AAAO,AAAP,HACI,KACH;EACa,CAAuC;EACxD,AAAI,EAAM,HACF;EACG,DAAkB;EAC7B,AAAI,EAAQ,HACJ,AAAqB;EACtB;;;uBAKM,TACN;CACP,CAAI,EAAK,HACE;CACX,CAAI,EAAY,HACR;CACA;CACR,CAAI,EAAK,AAAc,HAAC,AAAQ,GAAM,AAAO,HAC5C,EAAI;CACL,KAAQ;KACH;EACJ,AAAI,DAA+B;GAClC,DAAI,DAAa;IAChB,FAAI,EAAY,HACR,AAAE;IACA,HAAE,EAAG;IACf,AAAK;IACK;IAAI;IAAd,HAAyB;KAAzB;KACC,HAAI,EAAK,HACR,GAAO,DAAM,FAAa,AAAE,AAAG,KAE/B,FAAO,HAAa,AAAE,AAAG;;IAEpB,DAAM;;GAEN;GACR;GACU;GACV,CAAK;GACK;GAAV,AAAc,FAAd;;IACC,AAAO,HAAK,EAAI,FAAG,AAAS,EAAI,FAAa,AAAE,AAAG;;GACnD,CAAO;GACA;;EAER;EACA,EACC;GAAgB;;GAGT;;EAER,AAAI,EAAS,AAAQ,AAAS,AAA6B,GAAW,HAAU,HAAa;GACnF;GACT,DAAI,EAAM,HACF;;EAEQ;EACP;EACV,EAAK;EACM,CAAC,CAAoB;EAChC;EACC,AAAI,EAAQ,HAAC,AAAiB,AAC7B;;;EACD,AAAI,EAAK,AAAe,AAAK,AAAe,AAAK,AAAe,AAAK,AAAoB,AAAK,HAC7F;;;EACD,AAAI,EAAc,HACjB,GAAO;EACR,EAAO,DAAI,AAAI,AAAM,FAAa,AAAE,AAAG;EACxC;EACA,CAAI,FAAY;EAChB,EAAO,DAAO,AAAI;EACX;KACH;EACG;KACH;EACG;;EAEA,DAAO;;;uBAKF,PAAiD;CAC/D,CAAI,EAAM,HACF;CACR,CAAI,EAAM,HACF;CACa;CACrB,CAAI,EAAQ,HACX;EAAU;EAAI;EAAd,DAA4B;GAA5B;GACmB,FAAK;GACvB,DAAI,EAAK,AAAM,HAAa,AAAE,AACtB;;;CAEH,AAAa,AAAa;;uBAGQ,RAAgD;CACzF,CAAI,EAAM,HACF;CACR,KAAQ;KACH;EACG;KACH;EACG,DAA2B,GAAM;KACpC;EACG,DAA2B,GAAM;KACpC;EACG,DAA2B,GAAM;KACpC;EACG,EAA4C,AAAc;KAC7D;EACG;;EAEP,AAAI,EAAK,HAER;EAAI,DAA2B,GAAO,HAAa;IAClD,FAAY,DACJ;IACR,FAAI,DAAa,AAAS,AAAG,AACrB;MAEJ,JAAK,DAA2B,GAAO,AAAY,HAAc,AACrE;EAAY,DACJ;;MAGF;EAGsB,AAAI,EAAM,AAAS,AAAc,HAAc;EAChD,AAAI,EAAM,AAAQ,AAAe,HAAc;EACrE,EAAc;;;iBAIkB,HACxC;EAAI,DAAa,AAAG,AAAW,KAC1B,AAAM,HAAgB,FAAW,EAAK,AAAQ,FAAW;;4BAKxD,hBAA6C;CAChC,AAAa,AAAS,AAAG;CAG5C,CAAI,EAAQ,AAAY,AAAQ,AAAc,AAAQ,AAAU,AAAQ,HAChE;CACD;;wBAID,ZACN;CAAO,AAAkB,GAAM;;+BAIzB,hBACN;EAAI,EAA2B,HACvB,AAAO,KAEP,LAAO;;;;;kCC1JF,vBACd;CACC,CAAY,EAAmC,HACvC;CAER,CAAY,EAAkC,HAC9B,iBAAwB;CAExC,KAAM;;;;;;;oDClCO,3BAAoE;CACjF;CAAa,AAAC,AAAS;CAAvB,EAAa,FAAiC;EAA9C,CAAa,FAAb;;EACW,DAA4B,AAAM;EAC5C,AAAI,EAAO,HAAa;;CAElB;;;6BChCD,jBACN;EAAI,DAAO,WAAE,RAAT,AAAO,AAAP,HAAkB;EACrB,CAAS;EACT,CAAa;MAEb,AAAM;;;;uCAOD,nBAA+B;CAC7B,cAA+B,dAAgB,AAAO,GAAO,HAAO,AAAO,EAAM;CACtE,eAAwB;CACnB,cAAuB;CAC/C,AAAgB;CACH;;;OATP,aACN;EAAO,6BAAgB,9BAAQ,AAAM;;;;;;;iCCV/B,JAA+D;CACrE;CACA,CAAY,KAAW,HAAU,HAAU;EAC1C,CAAM;EACI;EAAV,CAAc,FAAd;;GACC,FAAI,EAAK;;EAET,CAAiB;EACjB,CAAiB;EACjB,CAAa,4BAAgB;MAExB,JAAI,DAAO,AAAK,AAAe;EACV;EAC3B,AAAI,EAAU,HAAO,EAAS;EAC9B,AAAI,EAAU,HAAO,EAAS,AAAoB;EAClD,AAAI,EAAU,HACb,EAA2B,GAI3B,HAA2B,FAAe,AAAQ,EAAO;EAEzD,CAAiB;EACjB,CAAiB;EACjB,CAAa;MAER,JAAI,DAAO,WAAM,RAAb,AAAO,AAAP,HAAsB;EAChC,CAAM,AAAC;EAEN,CAAiB;EACjB,CAAiB;EACjB,CAAa,4BAAgB;MAG9B,AAAM;CAEN,EAAe;CACf,EAAU;CAEJ;;iCAGD,ZAA+C;CAC3B;CAC1B,CAAI,DAAO,AAAW,AAAe;EACf;EACrB,AAAI,CAAiB,AAAS,FAC7B,KAAM;EACG;EAAI;EAAd;;GACC,FAAE,EAAI,AAAU,FAAE;;MACb,JAAI,DAAO,WAAI,RAAX,AAAO,AAAP,HAAoB;EACT;EACrB,AAAI,CAAW,AAAS,FACvB,KAAM;EACG;EAAI;EAAd;;GACC,FAAE,EAAI,AAAU,FAAE;;MAEnB,AAAM;;sCAGD,lBAA8C;CAC1B;CACnB,AAAK,AAAU,EAAQ,FAAc,AAAC,GAAO,HAAO,AAAO,EAAM;;;eCzD3D,JAAc;CACV;CAAV,EAAU;CAGX,EAAsB;CACtB,EAAuB;CAGvB,EAAyB;CACzB,EAA0B;CAC1B,EAAwB;CACxB,EAA4B;CAG5B,AAAqC;CACxB,AAAwB;CAApC,EAAK;;;;4BA7BQ,jBACb;CAAO;;;WATR,AACG;EAAO;;YAGV,DACG;EAAO;;QAOH,GAAiB;EACR;EACC;EACb,AAAI,EAAiB,AACjB,AAAkB,HAAQ;GAC1B,AAAgB;GAChB,AAAiB;;;;;;;;;;wCCpBlB,7BACN;;;6CAIM,XAAoF;CACrF;CACZ,EAAe,SACd;CAAQ;;CAET,EAAgB,UACf;CAAM,EAAoB;;CAE3B,EAAY;;4CAIC,VAAoF;CACtF,aAAc;CACzB,EAAc;CACd,EAAe;CAEf;;;;;;;6BCLa,VACN;;;oCAwaE,zBAA6B;CAAO;;sCAG7B,tBAAgC;CAEhC,AAAkB;CAChB,AAAkB;CACpB,AAAkB;CAClB,AAAkB;CAErB,EAAO,AAAM,AAAQ,AAAQ,AAAQ,AAAM,AAAQ,AAAM;;sCAItD,dAEV;CAAmB;;qCAKT,NAEV;CAAkB,AAAS;;2CAKjB,RAEV;CAAwB,AAAS,AAAO;;mCAK9B,LAEV;CAAgB,AAAQ;;wCAKd,LAEV;CAAqB,AAAQ;;yCAKnB,LAEV;CAAsB,AAAQ;;oCAKpB,LAEV;CAAiB,AAAQ;;mCAKf,EAEV;CAAgB,AAAK,AAAO,AAAM;;sCAKxB,jBAEV;CAAmB;;8CAKT,ZAEV;CAA2B,AAAS;;kCAK1B,FAEV;CAAe,AAAS;;0CAKd,MAEV;CAAuB,AAAQ,AAAQ,AAAU;;mCAMvC,DAEV;CAAgB,AAAQ,AAAM;;sCAKpB,HAEV;CAAmB,AAAQ,AAAQ;;+CAKzB,xBAEV;CAAO,AAA4B;;8BAKzB,TAEV;CAAW;;mCAKD,EAEV;CAAgB,AAAK,AAAO,AAAM;;mCAKxB,bAEV;CAAgB;;qCAKN,nBAEV;CAAkB;;kCAKR,GAEV;CAAe,AAAK,AAAO,AAAM;;sCAKvB,fAEV;CAAmB;;6CAKT,wBAEV;CAA0B,AAAQ,AAAO,AAAgB,AAAO,AAAQ,AAAQ;;gDAKtE,sBAEV;CAA6B,AAAQ,AAAO,AAAS,AAAS,AAAO,AAAQ,AAAQ;;uCAK3E,6BAEV;CAAoB,AAAQ,AAAO,AAAgB,AAAG,AAAG,AAAO,AAAQ;;0CAK9D,oBAEV;CAAuB,AAAQ,AAAO,AAAS,AAAS,AAAG,AAAG,AAAO;;qCAK3D,rBAEV;CAAO;;0CAKG,1BAEV;CAAO;;sCAKG,tBAEV;CAAO;;2CAKG,3BAEV;CAAO;;qCAKG,hBAEV;CAAO,AAAkB;;sCAKf,tBAEV;CAAO;;iCAKG,ZAEV;CAAc;;qCAKJ,dAEV;CAAkB;;0CAKR,dAEV;CAAuB;;sCAKb,dAEV;CAAmB;;2CAKT,dAEV;CAAwB;;qCAKd,dAEV;CAAkB;;sCAKR,dAEV;CAAmB;;kCAKT,bAEV;CAAe;;kCAKL,bAEV;CAAe;;mCAKL,RAEV;CAAgB,AAAO;;qCAKb,NAEV;CAAkB,AAAS;;gCAKjB,ZAEV;CAAa;;iDAKH,3BAEV;CAA8B;;mCAKpB,FAEV;CAAgB,AAAM,AAAO;;qCAKnB,EAEV;CAAkB,AAAM,AAAO,AAAM;;+BAK3B,XAEV;CAAY;;gDAKF,1BAEV;CAA6B;;+BAKnB,fAEV;;;8BAKU,dAEV;;;gDAKU,kBAEV;CAA6B,AAAQ,AAAY,AAAoB;;6CAK3D,aAEV;CAA0B,AAAQ,AAAY,AAAW,AAAS;;kCAKxD,bAEV;CAAe;;uCAKL,hBAEV;CAAoB;;wCAKV,VAEV;CAAO,AAAqB,AAAS;;yCAK3B,XAEV;CAAO,AAAsB,AAAS;;2CAK5B,nBAEV;CAAO,AAAwB;;0CAKrB,bAEV;CAAO,AAAuB,AAAS;;2CAK7B,dAEV;CAAO,AAAwB,AAAQ;;6CAK7B,7BAEV;CAAO;;iCAKG,jBAEV;CAAO;;qCAKG,hBAEV;CAAO,AAAkB;;0DAKf,lBAEV;CAAO,AAAuC,AAAQ,AAAY;;qCAKxD,fAEV;CAAO,AAAkB;;0CAKf,lBAEV;CAAO,AAAuB;;4CAKpB,dAEV;CAAO,AAAyB,AAAS;;iDAK/B,pBAEV;CAAO,AAA8B,AAAQ;;yCAKnC,lBAEV;CAAO,AAAsB;;2CAKnB,dAEV;CAAO,AAAwB,AAAQ;;iDAK7B,RAEV;CAAO,AAA8B,AAAY;;wCAKvC,jBAEV;CAAO,AAAqB;;+CAKlB,/BAEV;CAAO;;wCAKG,XAEV;CAAO,AAAqB,AAAQ;;mCAK1B,FAEV;CAAO,AAAgB,AAAS;;2CAKtB,dAEV;CAAO,AAAwB,AAAS;;wCAK9B,ZAEV;CAAO,AAAqB,AAAO;;8CAKzB,lBAEV;CAAO,AAA2B,AAAO;;6BAK/B,DAEV;CAAU,AAAQ;;iCAKR,VAEV;CAAO,AAAc;;kCAQX,dAEV;CAAO,AAAe;;sCAKZ,VAEV;CAAO,AAAmB;;kCAKhB,VAEV;CAAO,AAAe;;uCAKZ,VAEV;CAAO,AAAoB;;iCAKjB,VAEV;CAAO,AAAc;;kCAKX,VAEV;CAAO,AAAe;;kCAKZ,ZAEV;CAAe;;oCAKL,ZAEV;CAAiB;;oCAKP,RAEV;CAAiB,AAAO;;sCAKd,TAEV;CAAmB,AAAQ;;mCAKjB,iBAIV;CAAgB,AAAG,AAAG,AAAO,AAAQ,AAAQ,AAAM;;4CAKzC,OAEV;CAAyB,AAAQ,AAAgB,AAAO;;uCAK9C,VAEV;CAAoB,AAAO;;gCAKjB,CAEV;CAAa,AAAG,AAAG,AAAO;;qCAKhB,PAEV;CAAkB,AAAQ;;oCAKhB,NAEV;CAAiB,AAAM,AAAK;;4CAKlB,TAEV;CAAyB,AAAM,AAAM,AAAK;;oCAKhC,fAEV;CAAiB;;4CAKP,lBAEV;CAAyB,AAAM;;kCAKrB,DAEV;CAAe,AAAM,AAAO;;0CAKlB,JAEV;CAAuB,AAAM,AAAM,AAAO;;mCAKhC,gDAEV;CAAgB,AAAQ,AAAO,AAAgB,AAAO,AAAQ,AAAQ,AAAQ,AAAM;;2CAI1E,mBACV;CAAgB,AAAQ,AAAO,AAAgB,AAAQ,AAAM;;sCAInD,HAEV;CAAmB,AAAQ,AAAO;;sCAKxB,HAEV;CAAmB,AAAQ,AAAO;;sCAKxB,uCAEV;CAAmB,AAAQ,AAAO,AAAS,AAAS,AAAO,AAAQ,AAAQ,AAAM;;kCAKvE,PAEV;CAAe,AAAU;;mCAKf,RAEV;CAAgB,AAAU;;kCAKhB,PAEV;CAAe,AAAU;;mCAKf,RAEV;CAAgB,AAAU;;kCAKhB,LAEV;CAAe,AAAU,AAAG;;mCAKlB,RAEV;CAAgB,AAAU;;kCAKhB,LAEV;CAAe,AAAU,AAAG;;mCAKlB,RAEV;CAAgB,AAAU;;kCAKhB,HAEV;CAAe,AAAU,AAAG,AAAG;;mCAKrB,RAEV;CAAgB,AAAU;;kCAKhB,HAEV;CAAe,AAAU,AAAG,AAAG;;mCAKrB,RAEV;CAAgB,AAAU;;kCAKhB,DAEV;CAAe,AAAU,AAAG,AAAG,AAAG;;mCAKxB,RAEV;CAAgB,AAAU;;kCAKhB,DAEV;CAAe,AAAU,AAAG,AAAG,AAAG;;mCAKxB,RAEV;CAAgB,AAAU;;yCAKhB,JAEV;CAAsB,AAAU,AAAW;;yCAKjC,JAEV;CAAsB,AAAU,AAAW;;yCAKjC,JAEV;CAAsB,AAAU,AAAW;;mCAKjC,XAEV;CAAgB;;wCAKN,hBAEV;CAAqB;;uCAKX,hBAEV;CAAoB,AAAM;;wCAKhB,ZAEV;CAAqB,AAAM;;uCAKjB,dAEV;CAAoB,AAAM,AAAG;;wCAKnB,ZAEV;CAAqB,AAAM;;uCAKjB,ZAEV;CAAoB,AAAM,AAAG,AAAG;;wCAKtB,ZAEV;CAAqB,AAAM;;uCAKjB,VAEV;CAAoB,AAAM,AAAG,AAAG,AAAG;;wCAKzB,ZAEV;CAAqB,AAAM;;4CAKjB,YAEV;CAAyB,AAAM,AAAM,AAAM,AAAY,AAAQ;;iCAKrD,AAEV;CAAc,AAAG,AAAG,AAAO;;;iCnB93CjC,NoBNF;CCgL6C,ADhL7C,ECgL6C;CDhL7C,ECgL6C;CDhL7C,ECgL6C;CAjFwB,AD/FrE,EC+FqE;CD/FrE,EC+FqE;CD/FrE,EC+FqE;CD/FrE,EC+FqE;CD/FrE,EC+FqE;CD/FrE,EC+FqE;CD/FrE,EC+FqE;CA5CA,ADnDrE,ECmDqE;CARV,AD3C3D,EC2C2D;CAgBpB,EAAiB;CACjB,EAAM;CAuCA,EAAiC,FAAuB,AAAiB;CAAzE,EAAiC,FAAuB,AAAiB;CAAzE,EAAiC,FAAuB,AAAiB;CAAzE,EAAiC,FAAuB,AAAiB;CAAzE,EAAiC,FAAuB,AAAiB;CAAzE,EAAiC,FAAuB,AAAiB;CAAzE,EAAiC,FAAuB,AAAiB;CAgFzE,EAAkC,FAAsB,AAAiB;CAAzE,EAAkC,FAAsB,AAAiB;CAAzE,EAAkC,FAAsB,AAAiB;;;;;wCrB7KpH;CqByDkD,AAA0C,AAAS,AAAgC;CrBzDrI,kCqB6DoB,lCACA;;;aAmCc;CAAe;EAUb,DAAgB,AAA+B,AAAG,AAAG;;gBAVvD;CAAe;EAgBb,DAAgB,AAA+B,AAAG,AAAG,AAAG;;YAhB1D;CAAe;EA4Bb,DAAmB;EACnB,DAAiB,AAAsB;EACvC,DAAgB,AAAiC;;SA9BnD;CAAe;EA4Bb,DAAmB;EACnB,DAAiB,AAAsB;EACvC,DAAgB,AAAiC;;gBA9BnD;CAAe;EAKb,DAAgB,AAA+B,AAAG;;kBALpD;CAAe;EAgBb,DAAgB,AAA+B,AAAG,AAAG,AAAG;;cAhB1D;CAAe;EAUb,DAAgB,AAA+B,AAAG,AAAG;;MA6C7D;CAAe;EACf,DAAe,AAAuB;EAqBlC,DAA8B;EAC9B,DAA2B,AAAmC,AAAa,AAAiB,AAAS,AAAqB;EAD1H,DAA8B;EAC9B,DAA2B,AAAmC,AAAa,AAAiB,AAAS,AAAqB;EAD1H,DAA8B;EAC9B,DAA2B,AAAmC,AAAa,AAAiB,AAAS,AAAqB;EAK9H,AAAI,DAAC,AAAiB;EACtB,DAAgB,AAAwB;EACD;EAAvC,DAAe,AAAqB,AAApC;EAEC,DAAe;;;;iCrBxL5C,NsBNF;CDgL6C,AChL7C,EDgL6C;CChL7C,EDgL6C;CChL7C,EDgL6C;CAjFwB,AC/FrE,ED+FqE;CA5CA,ACnDrE,EDmDqE;CARV,AC3C3D,ED2C2D;CAgBpB,EAAiB;CACjB,EAAM;CAuCA,EAAiC,FAAuB,AAAiB;CAgFzE,EAAkC,FAAsB,AAAiB;CAAzE,EAAkC,FAAsB,AAAiB;CAAzE,EAAkC,FAAsB,AAAiB;;;;;wCrB7KpH;CqByDkD,AAA0C,AAAS,AAAgC;CrBzDrI,kCqB6DoB,lCACA;;;SAmCc;CAAe;EA4Bb,DAAmB;EACnB,DAAiB,AAAsB;EACvC,DAAgB,AAAiC;;MAyBzD;CAAe;EACf,DAAe,AAAuB;EAqBlC,DAA8B;EAC9B,DAA2B,AAAmC,AAAa,AAAiB,AAAS,AAAqB;EAD1H,DAA8B;EAC9B,DAA2B,AAAmC,AAAa,AAAiB,AAAS,AAAqB;EAD1H,DAA8B;EAC9B,DAA2B,AAAmC,AAAa,AAAiB,AAAS,AAAqB;EAK9H,AAAI,DAAC,AAAiB;EACtB,DAAgB,AAAwB;EACD;EAAvC,DAAe,AAAqB,AAApC;EAEC,DAAe;;;;4BExJtC,TAA6C;CAC7C,EAAK;CACL,EAAK;CACL,EAAK;CACL,EAAK;CACX,EAAK;CACL,EAAK;CACL,EAAK;CACL,EAAK;CACL,EAAO;CACP,EAAO;;;;;;;iBAUD,SAAgD;CACtD,EAAa;CAEb,EAAY,2BAAqB;CACjC,CAAI,DAAiB,AAAU,AAC9B,EAAc,GAEd,HAAc;CAGf,CAAI,DAAiB,AAAU,AAC9B,EAAc,GAEd,HAAc;;;;;;;0BAUN,NAAoD;CAC1D,EAAc;CACN;CACL;GAAc,FAAO;EAArB,CAAc,FAAd;;EACI,DAAiB,kBAAU,lBAAE;EAC7B;;;;;;UAID,YACN;EAAO,DAAO;;;;kBAQX,MAAkD;CACxD,EAAkB;CAClB;CAAoB,AAAe;CAAnC,EAAoB,FAA2B;EAA/C,CAAoB,FAApB;;EACgC,0BAAmB,3BAAa,AAAc,AAAY;EAAzF,DAAgB,AAAhB;;;;;;;UAIK,wBAA4D;EAClD,DAAW;EAC3B,AAAG,EAAa,HACR,AAAmB;EAEpB;;;;yBAOD,dACN;GAAW;;;;;aAGL,oBACN;;EAAgB,DAAe;EAA/B,CAAgB,FAA0B;GAA1C,AAAgB,FAAhB;;GAC+B,FAAc,AAAU;GACtD;GAAoB,FAAe;GAAnC,AAAoB,FAA2B;IAA/C,DAAoB,FAApB;;IACqC,HAAc,AAAY;IAC9D;GAAiB,FAAc;KAA/B,FAAiB,FAAjB;;KAC+B,JAAc,AAAqB;KAC3C,FAAI;KACJ,FAAI;KACjB,FAAqB,EACP,AACA,AACA,AACA,AACT,FAAoB,EACpB,FAAoB,EACpB,FAAoB,EACpB,FAAoB,IAClB,AACA;;;GAMI,iBAAW,nBAAU;GAClC,FAAS,AAAY;;;;MAIzB;;;;EACU,DAAoB,AAAS,AAAU,AAAe,AAAY,AAAE,AAAE,AAAE,AAAM,AAAO;EACrG,DAAsB,AAAiB,AAAiB;EACxD,DAAsB,AAAiB,AAAiB;EACxD,DAAsB,AAAiB,AAAiB;EACxD,DAAsB,AAAiB,AAAiB;EAClD,DAAsB,AAAiB,AAAiB;EACxD,DAAsB,AAAiB,AAAiB;EAExD,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EAGzB,DAAuB,AAAiB;EACxC,DAAuB,AAAiB;EACxC,DAAuB,AAAiB;EACxC,DAAuB,AAAiB;EAClC,DAAuB,AAAiB;EACxC,DAAuB,AAAiB;;qBAGxC;;;;EACO,DAAS;EAEC;EACR;EAET,AAAI,EAAU,HAAM;GAChB,IAAM,JAAyB,FAA/B;GACA,AAAQ;MACP;GACD,AAAQ,FAAgB,AAAe;GACvC,DAAI,EAAS,HAAM;IACf,DAAQ;IACR,GAAM,JAA8B,FAApC;;;EAKR,AAAG,DAAM;GACG,CAAS,HAAjB,EAAqB,GAArB,HAA2B;GAClB,CAAU,HAAnB,EAAuB,GAAvB,HAA6B;GACtB;MAaN;GACU;GAEK,AAAU;GACT,AAAU;GAC3B,DAAG,EAAS,HACR,EAAQ;GAEZ,DAAG,EAAU,HACT,EAAS;GAGA,AAAQ;GACR,AAAS;GAEtB,DAAG,DACC,EAAS,AAAS,FAAS,AAAO;GAGxB,AAAY;GACZ,AAAY;GAEZ,AAAI,AAAC,AAAU;GACf,AAAI,AAAC,AAAU;GAEhB;GACA;GACA,AAAU,AAAY;GACtB,AAAU,AAAa;GAE1B;;;;;;;;GACV,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,FAAkB;GACN;GACA;GAEZ,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,FAAkB;GACN;GACA;GAEZ,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,FAAkB;GACN;GACA;GAEZ,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,AAAQ;GACR,FAAkB;GACN;GACA;GAEL,KAEK,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,DACD;;;;;iCCjRf,tBACN;GAAa;;;;;WALd,AACC;EAAO;;MAOD,KAAgB;EACR;EACF;EAEZ,AAAI,EAAS,HAAM;GAElB,AAAQ;GACR,AAAa;GACb,AAAe;;EAGhB,DAAsB;EAEtB,CAAc;EAOd,CAAa;;WAGP,GAAuC;EACjC;EACZ,DAAuB,AAAc,AAAG,AAAG;;OAGrC,OAAmC;EACzC,AAAI,EAAK,AAAK,AAAK,HAClB;EAEW;EACZ,DAAmB,AAAc,AAAG,AAAG;;QAGjC,WACM;;;eAIN,EAEN;IAAuB;;UAEjB,MAEN;GAAsB;;OAGhB,kCACN;CAA2B,AAAK,AAAM,AAAO,AAAI,AAAK;;SAgBhD,EAEN;GAAa;;aAmBC,FACd;EAAO;;WA0BD,GACN;EAAuB;EAAvB,AAAkB,DAAlB;EAAkB,DAAlB;EAAkB,DAAlB;EAAkB,DAAlB;EAAkB;;;;+BAcZ,pBAAe;CACZ;;;;;;;;;;;;;;;;;;CAAT,EAAS;CACT,EAAQ;;;;;;;;;;;;;;;kBCrGF,PAnBR;CAiBwB,AAjBxB,EAiBwB;CADJ,AAhBpB,EAgBoB;;;;;;OAOZ,aAA4D;EAElE,CAA4B;EAC5B,CAAS;EACT,CAAQ;EACR,CAAY;EACZ,CAAW,FAAY;EAEjB,DAAc;EACd;EACA,DAAc;EAEF;EACC;EAEA,DAAW,AAAU;EACP,DAAW,AAAU;EAChD,CAAgB;EAChB,DAA0B,AAAK;EACrC,CAAQ,FAAW;EACb,CAAU,FAAW;EACN;EACrB,CAAY,qBAAc,vBAAmB,AAAe,AAAe,AAAQ,AAAQ;EAE3E;EACV,DAAiB,AAAC;EAEP;EACX,DAAa,AAAC;EAEd,CAAc;EACd,DAAgB,AAAS;EACzB,DAAgB,AAAK;EAGgB,DAAE,uBAAa,vBAAY,AAChE,yBAAe,zBAAY,AAAU,2BAAiB,3BACrD,iCAAuB,jCAAY,AACpC,iCAAkB,jCAAa,iCAAuB,jCACtD,mCAAyB,nCAAc,yBAAe,zBAAY,AAClE,2BAAiB;EACjB,CAAY;EACZ,DAAiB;EAEjB,DAAkB;;aAGhB,CAAiC;EACtB;EACb,CAAe,FAAC;EAChB,CAAmB;EACT,cAAS;EACZ;;QAGJ,SAA+C;EAGrD,AAAI,EAAc,AAAQ,AAA2B,AAAU,AAAC,AAAe,HAAkC;GAC1G,FAAkB,AAAG;GAErB,FAAiB,AAAG;;EAGxB,AAAG,DAAC,GAAa,HAAC,GAA6B,HAAgB;GAC9D,AAAY;GACZ,FAAqC,AAAU,AAAgB;;EAG5D;;MAGD,QACN;;;gBAGO,AAA8B;EAEjB;EAGjB,AAAI,EAAc,HAGd,EAAQ;EAGZ,DAAwC,AAAU,AAAgB;;;;YCrG/D,DAEJ;CAAY,AAAC,AAAmB,AAAoB,AAAwB,AAAC,AAAgB,AAAiB;CAA9G,AAAyI;;;;iBAR9H,NACV;;;;cAUJ,IACI;MAAO;KACE;GADF;GACiB,IAAM,NAAN;;KACf;GAFF;GAGC,FAAmC;GAEtB;GACH,UAAQ;GAElB,AAAa,aAAU,PACN,HACH,GACG,EACE,EACA,ZAEf,AACI,AACA;GAIR,AAAoB;GACP,YAAW;GACxB;;;;;;mBCnCR,RAXR;CAGoB,AAHpB,EAGoB;;;;;;OAUZ,aAA4D;EAElE,CAAS;EACT,CAAM;EACN,CAAW,FAAkB,AAA6B;EAC1D,CAAU,FAA6B;EACvC,DAAgB;EAChB,CAAS,oFAAqC,tFAAK;EACnD,DAAsB,AAAI,AAAI;EAC9B,DAAsB,AAAI,AAAG;EAC7B,DAAsB,AAAG,AAAI;EAC7B,DAAsB,AAAG,AAAG;EACtB,DAAsB,AAAG,AAAI;EAC7B,DAAsB,AAAI,AAAG;EAE7B,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EACnB,DAAmB;EAGzB,DAAuB,AAAG;EAC1B,DAAuB,AAAG;EAC1B,DAAuB,AAAG;EAC1B,DAAuB,AAAG;EACpB,DAAuB,AAAG;EAC1B,DAAuB,AAAG;EAEhC,CAAS;EACT,CAAQ;EAEL,CAAuB,FAAc,AAA6B;EAC/D,DAAqC,AAAU,AAAgB;;eAI9D,AAAgE;EAC/C,DAAgB;EAC5B;EACA;EACA;EAEN,CAAW,FAAQ,AAAQ,EAA0B,FAAQ,AAAW,EAAgB,AAAnC;EACrD,CAAY,FAAQ,AAAQ,EAA4B;EACzC;EAAkB;EAAP;EAAV,CAAe,FAAf;;GAAiB;;IAAgE;IAA/D;KAAU;KAAK,FAAQ,FAAW,EAAgB,AAAnC;KAAf;;MAA+D;;OAA2B;OAA1B;QAAU;QAAI;QAAd;;SAA0B;;;OAA3B;;;;;IAAhE;;;;EAAlB;EACL;EAAK,DAAS;EAAxB,DAAkC;GAAlC;GACc;GAAI,FAAS,AAAG;GAA1B,FAAoC;IAApC;IACI,HAAS,AAAG,AAAG,EAAG,FAAW,AAAS,EAAE,FAAQ,AAAW,EAAgB,AAAnC,AAA+C;IACvF,HAAS,AAAG,AAAG,EAAG,FAAW,AAAS,EAAE,FAAQ,AAAW,EAAgB,AAAnC,AAA+C;IACvF,HAAS,AAAG,AAAG,EAAG,FAAW,AAAS,EAAE,FAAQ,AAAW,EAAgB,AAAnC,AAA+C;IACvF;;;EAGD;;QAIJ,SAA+C;EACrD;EACS,DAAQ;EACP,DAAQ;EACrB,DAAmB,AAAG,AAAG,AAAQ;EAEjC,DAAa;EAEH;;MAGD,QAAiC;;gBAIjC,AAA8B;EAEhB;EAGjB,AAAI,EAAc,HAGd,EAAQ;EAGZ,DAAwC,AAAU,AAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCC1GnE,VAAgD;CACnD,AAAkC,AAAU,AAAgB;CAC5D,AAAkC,AAAQ,AAAc;CCV1D;;;;;;;;gBDaS,AAA8B;EAEhB;EAEjB,AAAI,EAAc,HAGd,EAA4B,GAE3B,JAAI,EAAc,HAGnB,EAA6B;EAGjC,AAAI,EAAc,HAGd,EAAqB;EAKzB,AAAI,EAAc,HAEd,EAA0B,GAEzB,JAAI,EAAc,HAEnB,EAA0B;;cAM3B,EAA4B;EAEd;EACjB,AAAI,DAAC,GAAc,AACnB,AAAC,AAAc,HACf;GACA,AAA4B;GAC5B,AAA6B;;EAG7B,AAAI,DAAC,GAAc,HAEnB,EAAqB;EAGrB,AAAI,DAAC,GAAc,AACnB,AAAC,AAAc,HAEX,EAA0B;;oBAO/B,HACC;EAAI,EAAmB,HACnB,AAAe,AAAkB,AAA2D,AAA5F,KAEA,HAAkB,FAAW;;sBAGlC,LAAqD;;YAIrD,DAA4B;;QAKxB,SAAyC;;WCzFlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;;;;;;;;;yBCMK,mBAVP;CAKqB,AALrB,EAKqB;CADG,AAJxB,EAIwB;CADA,AAHxB,EAGwB;CADJ,AAFpB,EAEoB;CASnB,EAAU;CACV,EAAc;CACd,EAAW;CACX,EAAS;CACT,EAAe;;;;;;YAGT,DAAqB;;cCjB1B;;;;;;;;;;;;QFGA;;;;;;;;;sBGIM,SALR;CAIuB,AAJvB,EAIuB;CADkB,AAHzC,EAGyC;CAGjC,EAAc;CACd,EAAiB;CJTvB;;;;;;;;oBIYM,HACA;EAAa,DAAW;EAAxB,DAAoD;;sBAIjD,LAAkD;;YAGlD,DAA4B;EAClB,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAW,FAAG,EAAY,FAAE,AAAC,AAAa,AAAY,AAAG,AAAQ,EAAW,AAAG,AAAtB,FAAmC,AAAQ,EAAY,AAAE,AAAtB,FAClH,4BAAkB;EAEtB,DAAiB;EAEP;EAAT,CAAe,FAAG;GAAlB;GACgB,FAAgB;GAElB,FAAoB,AAC3B,gCAAsB,9BAAW,FAAE,EAAY,AAAG,AAAC,AAAW,AAAG,FAAK,AAAC,EAAW,AAAI,FAAK,AAAC,EAAW,AAAG,FAAK,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FACzI,0BAAgB,1BAAE,AAAE,AAAE,AAAI,AAC1B;GAEJ,FAAiB;GACjB,CAAK;;EAGK,DAAgB;EAEf,DAAoB,AAC3B,gCAAsB,9BAAW,FAAE,EAAY,AAAE,AAAC,AAAW,AAAG,FAAK,AAAC,EAAW,AAAI,FAAK,AAAC,EAAW,AAAG,FAAK,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FACxI,0BAAgB,1BAAE,AAAE,AAAE,AAAI,AAC1B;EAEJ,DAAiB;EACjB,EAAK;EAaK,DAAgB;EAEf,DAAoB,AAC3B,gCAAsB,9BAAW,FAAG,EAAY,AAAE,AAAC,AAAW,AAAG,FAAK,AAAC,EAAW,AAAI,FAAK,AAAC,EAAW,AAAG,FAAK,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FACzI,0BAAgB,1BAAE,AAAE,AAAE,AAAI,AAC1B;EAEJ,DAAiB;EACjB,EAAK;EAKT,DAAS,AAAG,AAAI,EAAG;EAEN,DAAgB;EAElB,DAAoB,AAC3B,gCAAsB,9BAAW,FAAE,EAAY,AAAG,AAAC,AAAW,AAAG,FAAK,AAAC,EAAW,AAAI,FAAK,AAAC,EAAW,AAAG,FAAK,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FACzI,0BAAgB,1BAAE,EAAW,FAAE,AAAE,AAAI,AACrC;EAEJ,DAAiB;EACjB,EAAK;EAIQ,DAAgB;EAElB,DAAoB,AAC3B,gCAAsB,9BAAW,FAAG,EAAY,AAAG,AAAC,AAAW,AAAG,FAAK,AAAC,EAAW,AAAI,FAAK,AAAC,EAAW,AAAG,FAAK,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FAC1I,0BAAgB,1BAAE,EAAW,FAAE,AAAE,AAAI,AACrC;EAEJ,DAAiB;EACjB,EAAK;EAEQ,DAAgB;EAElB,DAAoB,AAC3B,gCAAsB,9BAAW,FAAE,EAAY,AAAE,AAAC,AAAW,AAAG,FAAK,AAAC,EAAW,AAAI,FAAK,AAAC,EAAW,AAAG,FAAK,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FACxI,0BAAgB,1BAAE,EAAW,FAAE,AAAE,AAAI,AACrC;EAEJ,DAAiB;EACjB,EAAK;;QAIF,SAGH;;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GACc,FAAW;GACG,FAAW;GAC5B,FAAW;GAClB,DAAG,EAAa,HAAY;IACxB,AAAO;IAEP,AAAa;MAEZ,JAAG,CAAY,FAAY;IAC5B,DAAY;IACZ,DAAS,FAAC;;GAEd,AAAO,AAAQ,AAAM,AAAd;GACP,AAAO,AAAQ,AAAM,AAAd;GACP,FAAS,AAAU,AAAQ,EAAQ;;;WJhI7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;;;;;;;;6BIAK,lBAJP;CAEyB,AAFzB,EAEyB;;;;;;gBAIlB,WAAkE;;YAElE,DAAqB;;QJJ1B;;;;;;;;;6BKKK,UATP;CAOuB,AAPvB,EAOuB;CADF,AANrB,EAMqB;CADI,AALzB,EAKyB;CADF,AAJvB,EAIuB;CADF,AAHrB,EAGqB;CAQpB,EAAW;CACX,EAAa;CACb,EAAe;CACf,EAAU;;;;;;YAIJ,DAAqB;;cHjB1B;;;;;;;;;;;;QFGA;;;;;;;;;0BMgBM,JAhBR;CAW8B,AAX9B,EAW8B;CADD,AAV7B,EAU6B;CAFI,AARjC,EAQiC;CADD,AAPhC,EAOgC;CAUxB,EAAiB;CPpBvB;;;;;;;;oBO0BM,HAAgD;;sBAI7C,LAAkD;;YAGlD,DAA4B;EAC/B,CAAY;EACZ,CAAa;EACb,CAAS;EACT,CAAU;;QAIP,SAEH;;EAAc;EAAd,CAAc,FAAmB;GAAjC,AAAc,FAAd;;GACkB,FAAW;GAE1B,DAAG,CAAY,FACV;EAAG,CAAW,AAAC,AAAY,FAAI,EAAQ,GAClC,JAAG,CAAW,AAAC,AAAS,AAAY,FAAI,EAAQ,AAAC,AAAQ,FAAC,EAAS,AAAa,AAA/B,GACjD,HAAS,AAAQ,FAAC,EAAW,AAAY,AAAG,AAAnC;;GAElB,DAAG,CAAa,FACZ;EAAG,CAAW,AAAC,AAAa,FAAI,EAAQ,GACnC,JAAG,CAAW,AAAC,AAAU,AAAa,FAAI,EAAQ,AAAC,AAAQ,FAAC,EAAU,AAAc,AAAjC,GACnD,HAAS,AAAQ,FAAC,EAAW,AAAa,AAAG,AAApC;;;;WPtD5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;2BOKK,YATP;CAOuB,AAPvB,EAOuB;CADD,AANtB,EAMsB;CADG,AALzB,EAKyB;CADF,AAJvB,EAIuB;CADF,AAHrB,EAGqB;CAQpB,EAAW;CACX,EAAa;CACb,EAAe;CACf,EAAU;;;;;;YAIJ,DAAqB;;cLjB1B;;;;;;;;;;;;QFGA;;;;;;;;;wBQQS,OAVX;CAI6B,AAJ7B,EAI6B;CADF,AAH3B,EAG2B;CAQnB,EAAc;CACd,EAAiB;CTbvB;;;;;;;;oBSkBM,HACA;EAAG,DAAW,GAA2B,HACrC;GAAY,FAAW;GAAvB,FAAyD;MAGzD;GAAc,FAAW;GAAzB,FAA+D;;;sBAMhE,LAAkD;;YAGlD,DAA4B;EAGlB,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,AAAQ,9BAAW,AAAnB,FAAsB,AAAQ,EAAY,AAApB,FAAwB,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAY,AACpH,4BAAkB,5BAAE,AAAQ,AAAU,AAAuC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAG,EAAI;EAEN,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAW,AAAE,AAAC,AAAY,AAAG,AAAK,FAAE,EAAY,FAAG,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAY,AACzH,8BAAoB,9BAAE,AAAQ,AAAU,AAAqC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAG,EAAI;EAEnB,EAAS;EACT,EAAW;EAEE,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,AAAQ,9BAAW,AAAnB,FAAuB,AAAQ,EAAY,AAApB,FAAwB,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AACtH,4BAAkB,5BAAE,AAAQ,AAAU,AAAuC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAI;EAEP,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAW,AAAG,AAAC,AAAY,AAAG,AAAK,FAAE,EAAY,FAAE,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AAC1H,8BAAoB,9BAAE,AAAQ,AAAU,AAAqC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAG;EAEnB,EAAS;EACT,EAAW;EAEG,DAAgB;EACnB,DAAoB,AAC3B,gCAAsB,AAAQ,9BAAW,AAAnB,FAAuB,AAAQ,EAAY,AAApB,FAAuB,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AACrH,4BAAkB,5BAAE,AAAQ,AAAU,AAAqC;EAE/E,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAG;EAEN,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAW,AAAG,AAAC,AAAY,AAAG,AAAK,FAAE,EAAY,FAAG,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AAC3H,8BAAoB,9BAAE,AAAQ,AAAU,AAAqC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAI;EAEpB,EAAS;EACT,EAAW;EAEG,DAAgB;EACnB,DAAoB,AAC3B,gCAAsB,AAAQ,9BAAW,AAAnB,FAAuB,AAAQ,EAAY,AAApB,FAAuB,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AACrH,4BAAkB,5BAAE,AAAQ,AAAU,AAAqC;EAE/E,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAG;EAEN,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAa,AAAC,AAAY,AAAG,AAAK,FAAE,EAAY,FAAE,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAY,AACxH,8BAAoB,9BAAE,AAAQ,AAAU,AAAqC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAG,EAAG;EAElB,EAAS;EACT,EAAW;EAEG,DAAgB;EACnB,DAAoB,AAC3B,gCAAsB,AAAQ,9BAAW,AAAnB,FAAsB,AAAQ,EAAY,AAApB,FAAwB,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAY,AACpH,4BAAkB,5BAAE,AAAQ,AAAU,AAAqC;EAE/E,DAAiB;EACjB,DAAS,AAAG,AAAG,EAAI;EAEN,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAW,AAAG,AAAC,AAAY,AAAG,AAAK,FAAE,EAAY,FAAE,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AAC1H,8BAAoB,9BAAE,AAAQ,AAAU,AAAqC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAG;EAEnB,EAAS;EACT,EAAW;EAEG,DAAgB;EACnB,DAAoB,AAC3B,gCAAsB,AAAQ,9BAAW,AAAnB,FAAuB,AAAQ,EAAY,AAApB,FAAuB,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AACrH,4BAAkB,5BAAE,AAAQ,AAAU,AAAqC;EAE/E,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAG;EAEN,DAAgB;EAClB,DAAoB,AAC3B,gCAAsB,9BAAW,AAAG,AAAC,AAAY,AAAG,AAAK,FAAE,EAAY,FAAG,AAAC,EAAY,AAAG,FAAK,AAAY,AAAG,AAAa,AAC3H,8BAAoB,9BAAE,AAAQ,AAAU,AAAqC;EAEjF,DAAiB;EACjB,DAAS,AAAG,AAAI,EAAI;EAEpB,EAAS;EACT,EAAW;;QAwBR,SAEF;;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GACG,DAAG,DAAW,GAA2B,HACrC;EAAG,DAAW,EAAiC,FAAE;KAC7C,JAAW,GAAkC;KAC5C,JAAW,GAAiC;KAC7C,HAAG,DAAW,EAAiC,FAC3C,AAAmB;;;;;WTnLzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;oCSOK,zBARP;CAKgC,AALhC,EAKgC;CADJ,AAJ5B,EAI4B;CADH,AAHzB,EAGyB,CAAG,AAAM;;;;;;YAS3B,DAAqB;;cPd1B;;;;;;;;;;;;QFGA;;;;;;;;;2BUCK,XALP;CAGqB,AAHrB,EAGqB;CAIpB,EAAW;;;;;;YAIL,DAAqB;;cRV1B;;;;;;;;;;;;QFGA;;;;;;;;;kCWCM,ZZJN;;;;;;;;;oBYSM,HAAgD;;sBAI7C,LAAkD;;YAGlD,DAA4B;;QAI5B,SAEH;;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GAC6B,FAAW;GACvB,FAAW;GACA,FAAW;GACnC,DAAG,EAA0C,HAAE;IAC3C,AAAsB;IACtB,AAAsB;;;;WZ5BpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;gCYQS,VbXT;;;;;;;;;oBagBS,HAAgD;;sBAIhD,LAAkD;;YAGlD,DAA4B;;QAK5B,SAAyC;EAEM;EAGlD;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GAC4B,FAAW;GACb,FAAW;GACR,FAAW;GAG3B;GACE;GACC;GACE;GACF,FAAC,EAAiB;GAE1B,AAAsB,AAAU,AAAI,AAAsB;GAC1D,DAAG,CAAsB,AAAgB,FAAK,EAAsB,AAAgB,GAC/E,JAAG,CAAsB,FAAC,EAAgB,FAAK,EAAsB,FAAC,EAAgB;GAE3F,DAAG,CAAsB,FAAG,EAAK;GACjC,AAAsB,FAAC,EAAK,AAAQ,AAAO,AAAC,AAAQ,FAAC,EAAG,AAAU,AAAsB;GACxF,DAAG,CAAsB,FAAK,EAAsB;GAEpD,DAAG,EAAM,AAAK,AAAS,HAAG,EAAwB;;;WbrDhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;gCamBS,DAfX;CAE8B,AAF9B,EAE8B;CActB,EAAc;CdvBpB;;;;;;;;oBc4BS,HAAgD;;sBAIhD,LAAkD;;YAGlD,DAA4B;;QAK5B,SAAyC;EAEM;EAClD,AAAG,CAAW,FACV,GAAY;EAGhB;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GAC4B,FAAW;GACb,FAAW;GACR,FAAW;GAG1B;GACA;GACC;GACJ;GACA;GAEH,DAAG,EAAO,AAAK,DAAM,CAAK,AAAW,AAAK,AAAyB,AAAK,AAAY,HAChF;EAAI,DAAS,EAAM,FAAG,AAAI,EAAG,CAAI,AAAK,AAAC,HAAS,EAAM,FAAG,AAAI,EAAI,CAAM,HAAS,EAAM,FAAG,AAAI,EAAI,FAAG;KAEhG,FAAuB,AAAM;KAC7B,FAAoB;KACpB,FAAoB;KACpB,FAAW;KACX,FAAU;MAGV;KACA,FAAW;KACX,DAAuB;KACvB,FAAqB,AAAG;KACxB,FAAqB,AAAG;;;GAGhC,DAAG,EAAQ,AAAK,DAAM,CAAK,AAAW,AAAK,AAAyB,AAAK,AAAY,HACjF;EAAK,DAAS,EAAM,FAAG,AAAI,EAAG,CAAI,AAAK,AAAC,HAAS,EAAM,FAAG,AAAI,EAAI,CAAM,HAAS,EAAM,FAAG,AAAI,EAAI,FAAI;KAElG,FAAuB,AAAM;KAC7B,FAAoB;KACpB,FAAoB;KACpB,FAAW;KACX,FAAU;MAGV;KACA,FAAW;KACX,DAAuB;KACvB,FAAqB,AAAG;KACxB,FAAqB,AAAG;;;GAMhC,DAAG,EAAO,HAAE;IAChB,DAAK;IACL,DAAK;IACL,DAAK;MAEJ,JAAG,EAAO,HAAE;IACb,DAAK;IACL,DAAK;IACL,DAAK;MAEJ,JAAG,EAAO,HAAE;IACb,DAAK;IACL,DAAK;IACL,DAAK;;;;Wd7Gf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;wBcaM,OARR;CAK+C,AAL/C,EAK+C;CADI,AAJnD,EAImD;CAK3C,EAAc;CACd,EAAiB;CflBvB;;;;;;;;oBewBM,HAAgD;;sBAG7C,LAAkD;;YAGlD,DAA4B;;QAK5B,SACH;;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GACY,FAAW;GACX,FAAW;GACT;GACC;GACJ;GACP,DAAG,EAAI,HAAS,AAAU;IACtB,DAAM,AAAG,AAAgB;IACzB,DAAG,AAAG;IACN,DAAO,AAAG;IAEV,HAAW,EAAuB;;GAE/B;GAGI,FAAW;GACtB,DAAG,DAAS,AAAc,AAAI,GAAK,HAC/B,EAA0B;GAI9B,DAAG,DAAS,AAAc,AAAI,EAAI,FAAG;IACvB,HAAsC,AAAS,AAAc,AAAI;IAC3E,HAAU,EAAkC;IAC5C,HAAS,AAAc,AAAI,EAAI;IACpB;IAAmC,HAAU;IAA7C;IACX,HAAW,EAAiC;IAC5C,HAAS,AAAW,AAAiC,AAAW,AAAkC,AAAW,EAAkC;;GAKlI;GACjB;GACA;GACQ;GACP,DAAI,EAAI,HAAS,EAAU,FAAG,EAAI;GACnC,DAAG,EAAI,HAAG,EAAI,GACT,HAAI,AAAG;GACZ,DAAG,EAAI,HAAG,EAAI,GACT,HAAI,AAAG;GACH;GAAM,AAAG,AAAE;GAApB,FAAwB;IAAxB;IACa;IAAM,DAAG;IAAlB,HAAoB;KAApB;KACI,HAAG,DAAS,AAAc,AAAG,EAAG,CAAK,HAAS,AAAc,AAAG,EAAG,FAC9D,AAAqB,IAAM,AAAK,GAAQ,PAAS,AAAc,AAAG,KAGjE,JAAG,DAAS,AAAc,AAAG,EAAG,FACjC,AAAiB,IAAM,AAAK,GAAQ,PAAS,AAAc,AAAG;;;GAK1E,DAAG,CAAM,FAAE;IACP,HAAW,EAAuB;IAClC,DAAM;;GAGV,DAAG,CAAM,FAAE;IACP,HAAW,EAAuB;IAClC,DAAM;;GAEO;GACC;GACA;GACC;GACnB;GAAe;GAAf,AAAe,FAAgB;IAA/B,DAAe,FAAf;;IAGa,HAAC,EAAW,AAAgB,AAAgB,AAAW,AAAiB,FAAC,EAAW,AAAiB,AAAiB,AAAW;IAElI,HAAW,EAAW,FAAgB,EAAW,AAAgB,FAAgB,EAAW,FAAiB,EAAW,AAAiB,FAAiB,AAAM;IAC/J,HAAW,EAAW,FAAgB,EAAW,AAAgB,FAAgB,EAAW,FAAiB,EAAW,AAAiB,FAAiB,AAAM,EAAM;IACtK,HAAW,EAAW,FAAgB,EAAW,AAAgB,FAAgB,EAAW,FAAiB,EAAW,AAAiB,FAAiB,EAAM,FAAM;IACrK,HAAW,EAAW,FAAgB,EAAW,AAAgB,FAAgB,EAAW,FAAiB,EAAW,AAAiB,FAAiB,EAAM,FAAM,EAAM;IACtL,FAAG,EAAI,HAAM,EAAS;IACtB,FAAG,EAAK,HAAM,EAAU;IACxB,FAAG,EAAK,HAAM,EAAU;IACxB,FAAG,EAAM,HAAM,EAAW;IAE3B,FAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAAK;MAG9C,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAAK;KACrD,DAAO,DAAW,AAAgB,AAAgB;KAC9C,HAAG,CAAQ,FACP,EAAQ;MAIf,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAAK;KAErD,DAAO,AAAC,DAAM,AAAO,AAAW;KAChC,HAAG,CAAQ,FACP,EAAQ;KAGZ,FAAa;MAGZ,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAAK;KACrD,DAAO,DAAW,AAAiB,AAAiB;KAC/C,HAAG,CAAQ,FACR,EAAQ;MAGf,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAAK;KACrD,DAAO,AAAC,DAAM,AAAM,AAAW;KAC/B,HAAG,CAAQ,FACP,EAAQ;MAIX,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAChD;EAAG,CAAM,AAAW,AAAgB,AAAC,AAAgB,CAAM,DAAM,AAAW,AAAiB,AAAC,AAAiB,FAAI;MAE9G,JAAG,CAAM,AAAW,AAAgB,AAAC,AAAgB,CAAO,DAAM,AAAW,AAAiB,AAAC,AAAiB,FAAG;MACnH,FAAO,DAAW,AAAiB,AAAiB;MACpD,JAAG,CAAQ,FACR,EAAQ;MAEZ;MACA,FAAO,DAAW,AAAgB,AAAgB;MAClD,JAAG,CAAQ,FACP,EAAQ;;MAMf,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAChD;EAAG,CAAM,AAAW,AAAgB,AAAC,AAAgB,CAAM,DAAM,AAAO,AAAW,AAAiB,FAAK;MAEpG,JAAG,CAAM,AAAW,AAAgB,AAAC,AAAgB,CAAM,DAAM,AAAO,AAAW,AAAiB,FACrG,GAAO,DAAW,AAAgB,AAAgB,GAElD;MACA,FAAO,AAAC,DAAM,AAAO,AAAW;MAChC,JAAG,CAAQ,FACX,EAAQ;MAGR,HAAa;;MAIhB,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAChD;EAAG,CAAM,AAAM,AAAW,AAAgB,CAAO,DAAM,AAAW,AAAiB,AAAC,AAAiB,FAAI;MAEpG,JAAG,CAAM,AAAM,AAAW,AAAgB,CAAQ,DAAM,AAAW,AAAiB,AAAC,AAAiB,FAAG;MACzG,FAAO,DAAW,AAAiB,AAAiB;MACpD,JAAG,CAAQ,FACR,EAAQ;MAEZ;MACA,FAAO,AAAC,DAAM,AAAM,AAAW;MAC/B,JAAG,CAAQ,FACP,EAAQ;;MAKf,JAAG,EAAI,AAAQ,AAAK,AAAQ,AAAK,AAAQ,AAAM,HAChD;EAAG,CAAM,AAAM,AAAW,AAAgB,CAAO,DAAM,AAAO,AAAW,AAAiB,FAAK;MAE1F,JAAG,CAAM,AAAM,AAAW,AAAgB,CAAQ,DAAM,AAAO,AAAW,AAAiB,FAC5F,GAAO,DAAM,AAAM,AAAW,GAE9B;MACA,FAAO,AAAC,DAAM,AAAO,AAAW;MAChC,JAAG,CAAQ,FACX,EAAQ;MAGR,HAAa;;;;GAUzB;GAAe;GAAf,AAAe,FAAY;IAA3B,DAAe,FAAf;;IACY,HAAU;IACV,HAAQ;IACT,HAAQ;IACL,HAAQ;IACL,DAAQ,CAAa,AAAC,AAAU,AAAS,AAAC,DAAM;IAC/C,DAAQ,CAAc,AAAC,AAAU,AAAS,AAAC,DAAM;IAC/C,AAAO;IACvB,FAAG,EAAO,AAAS,DAAoB,FAAE;KACrC,DAAc;KACd,FAAoB;;;GAK3B,AAAgB;GAChB,AAAY;GAGZ,AAAe;GAChB,AAAO,AAAQ,AAAM,AAAd;GACP,AAAO,AAAQ,AAAM,AAAd;;;YAOP,sBAAsF;EACnF,DAAQ,EAAG,FAAE,AAAS,EAAO;EAC7B,DAAQ,EAAG,FAAE,AAAS,EAAG;EACzB,DAAQ,EAAG,FAAE,AAAS,EAAO;EAC7B,DAAQ,EAAG,FAAE,AAAS,EAAG;EAEzB,CAAG,AAAG,AAAG;;SAEZ,KACJ;EAAO,CAAI,AAAE;;WflQnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;6BeiBK,bArBP;CAkBqB,AAlBrB,EAkBqB;CAFO,AAhB5B,EAgB4B;CADP,AAfrB,EAeqB;CADA,AAdrB,EAcqB;CADO,AAb5B,EAa4B;CADD,AAZ3B,EAY2B;CADP,AAXpB,EAWoB;CADK,AAVzB,EAUyB;CADD,AATxB,EASwB;CADA,AARxB,EAQwB;CADC,AAPzB,EAOyB;CAFH,AALtB,EAKsB;CADC,AAJvB,EAIuB;CADI,AAH3B,EAG2B,AAAG,AAAY;CADtB,AAFpB,EAEoB;CAoBnB,EAAW;;;;;;YAEL,DAAqB;;cbvB1B;;;;;;;;;;;;QFGA;;;;;;;;;0BgBGM,JAAgD;CAEhD,EAAiB;CjBRvB;;;;;;;;oBiBaM,HAAgD;;sBAI7C,LAAkD;;YAGlD,DAA4B;EAGd,DAAgB;EACtB,DAAwB,AAC/B,gCAAsB,9BAAW,FAAE,EAAY,FAAG,AAAC,EAAY,AAAG,AAAK,FAAE,EAAY,AAAE,FAAE,AAAG,AAAQ,EAAE,AAAV,FAAuB,AAAQ,EAAE,AAAV,FACnH,8BAAoB,9BACpB;EAEJ,DAAiB;;QAId,SACF;;EAAe;EAAf,CAAe,FAAwB;GAAvC,AAAe,FAAf;;GACc,FAAW;GACtB,DAAG,CAAoB,FACnB,GAAqB;GAEzB,DAAG,EAAc,HACb,EAAmB;;;WjBxCjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA;;;;;;;;;iCiBEK,tBANP;CAGwB,AAHxB,EAGwB;;;;;;gBAOjB,WAAkE;;YAIlE,DAAqB;;QjBV1B;;;;;;;;;+BkBSS,QAlBX;CAU4B,AAV5B,EAU4B;CADA,AAT5B,EAS4B;CADF,AAR1B,EAQ0B;CADA,AAP1B,EAO0B;CADK,AAN/B,EAM+B;CADF,AAL7B,EAK6B;CADD,AAJ5B,EAI4B;CADJ,AAHxB,EAGwB;CADA,AAFxB,EAEwB;CAiBhB,EAAQ;CACR,EAAQ;CACR,EAAY;CACZ,EAAa;CACb,EAAY;CACZ,EAAQ;CACR,EAAQ;;;;;;YAIL,DAA0B;;chBvBnC;;;;;;;;;;;;QFGA;;;;;;;;;6BmBAK,lBAAc;;;;;;YAKd,DAAqB;;cjBR1B;;;;;;;;;;;;QFGA;;;;;;;;;+BoBDK,pBAFP;CAS2B,AAT3B,EAS2B;CADH,AARxB,EAQwB;CADJ,AAPpB,EAOoB;CADA,AANpB,EAMoB;CADA,AALpB,EAKoB;CADE,AAJtB,EAIsB,CAAG,AAAI;;;;;;YADtB,DAAqB;;clBH1B;;;;;;;;;;;;QFGA;;;;;;;;;;sBqB8DM,mCAlDR;CAmCwC,AAnCxC,EAmCwC;CAFE,AAjC1C,EAiC0C;CAkBxC,EAAW;CACX,EAAa;CACb,EAAW,FAAkB;CAC7B,EAAiB,FAAkB;CACnC,EAAqB;CACrB,EAAc;CACd,EAAU;CACV,EAAU,FAA6B;CACvC,EAAS,oFAAqC,tFAAK;CAGnD,EAAc;CACd,EAAa,FAAQ;CAErB,EAAc,FAAQ;CACtB,EAAS,FAAS,EAAU;CAC5B,EAAU,FAAS,AAAG,EAAU;;;;;;SAI1B,OAAsC;EAC5C,DAAwB;EACxB,DAA0B;EAC1B;EAAe;EAAf,CAAe,FAAe;GAA9B,AAAe,FAAf;;GACC,FAAY;;;aAKN,IACP;EAAG,DAAW,GAAiC,HAC9C,AAAwB;;eAIlB,EACP;EAAG,DAAW,GAAiC,HAC9C,AAA0B;;QAIrB,SAA+C;EAGvC;EACA;EACiB;EAElB;EACb;EAAe;EAAf,CAAe,FAAmB;GAAlC,AAAe,FAAf;;GACO,DAAG,DAAW,GAA6B,HAAK;IACtB,HAAW;IACpC,DAAO,FAAW;IACF,DAAK;IACP,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACV,HAAC,EAAqB,AAAyB,AAAG,AAAa,AAAY;IAC3E,HAAC,EAAqB,AAA0B,AAAG,AAAc,AAAa;IACpF,DAAU;IACV,DAAU;IACE;IACf,FAAG,DAAC,AAAc,AAAc;KAC/B,FAAW;KACX,JAAO,AAAgB;;MAEvB,HAAW,FAAO;IAEnB,HAAc;MAIP,JAAG,DAAW,GAAyB,HAAK;IAEzC,HAAW;IACN;IACf,FAAG,DAAC,AAAc,AAAU;KAC3B,FAAW;KACX,JAAO,AAAY;;MAEnB,HAAW,FAAO;IAEnB,HAAc;MAEP,JAAG,DAAW,GAA2B,HAAK;IACzC,HAAW;IACR;IACf,FAAG,DAAC,AAAc,AAAY;KAC7B,FAAW;KACX,JAAO,AAAc;;MAErB,HAAW,FAAO;IAEnB,HAAc;MAEP,JAAG,DAAW,GAA2B,HAAK;IACzC,HAAW;IACR;IACf,FAAG,DAAC,AAAc,AAAY;KAC7B,FAAW;KACX,JAAO,AAAc;;MAErB,HAAW,FAAO;IAEnB,HAAc;MAEP,JAAG,DAAW,GAA6B,HAAK;IACzC,HAAW;IACV;IACf,FAAG,DAAC,AAAc,AAAc;KAC/B,FAAW;KACX,JAAO,AAAgB;;MAEvB,HAAW,FAAO;IAEnB,HAAc;;;EAQtB,DAAiB;EACjB,DAAoB,AAAQ;EAE5B;EAEA,DAAiB;EAGjB;EACY,DAAQ;EACP,DAAQ;EACrB,DAAmB,AAAG,AAAG,AAAQ;EACjC,DAAc,AAAG,AAAO,AAAO,AAAE,AAAG;EAQpC,DAAc,AAAE,AAAE,AAAG;EAErB;EACA,AAAG,EAAoB,HAAK;GACxB,FAAiB;GACjB,FAAmB,AAAO,AAAQ,AAAgB,AAAO,AAAE,EAAE,AAAY,FAAE,EAAa,FAAE,AAAE,AAAI;GAChG,FAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,EAAY,FAAE,EAAa,FAAE,AAAE,AAAI;GACzF,FAAyB,AAAE,AAAE,AAAE;MAE5B;GACA;GACG;GACE;GACA;GACA;GACT;GAGA,FAAiB;GACP;GAAO,FAAQ,EAAM,AAAd,AAA0B;GAA1C,FAA6C;IAA7C;IACS;IAAK,HAAS,AAAG;IAA1B,HAAoC;KAApC;KAEC,HAAG,DAAS,AAAG,AAAG,GAAI,HACrB,AAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,AAAC,AAAC,EAAE,AAAI,AAAW,AAAW,AAAG,AAAK,AAAY,FAAK,AAAC,AAAC,EAAE,AAAI,AAAY,AAAY,AAAK,AAAa,FAAM,AAAE,EAAW,FAAM,AAAc,KAGlM,JAAG,DAAS,AAAG,AAAG,GAAI,HAC1B,AAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,AAAC,AAAC,EAAE,AAAI,AAAW,AAAW,AAAG,AAAK,AAAY,FAAK,AAAC,AAAC,EAAE,AAAI,AAAY,AAAY,AAAK,AAAa,FAAM,AAAE,EAAW,FAAM,AAAc,KAElM,JAAG,DAAS,AAAG,AAAG,GAAI,HAC1B,AAAmB,AAAO,AAAQ,AAAa,AAAO,AAAE,AAAC,AAAC,EAAE,AAAI,AAAW,AAAW,AAAG,AAAK,AAAY,FAAK,AAAC,AAAC,EAAE,AAAI,AAAY,AAAY,AAAK,AAAa,FAAM,AAAE,EAAW,FAAM,AAAc;;;GAM9M,FAAY,AAAQ;GAEjB,FAAiB;GACP;GAAO,FAAQ,EAAM,AAAd,AAA0B;GAA1C,FAA6C;IAA7C;IACS;IAAK,HAAS,AAAG;IAA1B,HAAoC;KAApC;KAEC,HAAG,DAAS,AAAG,AAAG,GAAI,HACrB,AAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,AAAC,AAAC,EAAE,AAAI,AAAW,AAAW,AAAG,AAAK,AAAY,FAAK,AAAC,AAAC,EAAE,AAAI,AAAY,AAAY,AAAK,AAAa,FAAM,AAAE,EAAW,FAAM,AAAc,KAGlM,JAAG,DAAS,AAAG,AAAG,GAAI,HAC1B,AAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,AAAC,AAAC,EAAE,AAAI,AAAW,AAAW,AAAG,AAAK,AAAY,FAAK,AAAC,AAAC,EAAE,AAAI,AAAY,AAAY,AAAK,AAAa,FAAM,AAAE,EAAW,FAAM,AAAc,KAElM,JAAG,DAAS,AAAG,AAAG,GAAI,HAC1B,AAAmB,AAAO,AAAQ,AAAa,AAAO,AAAE,AAAC,AAAC,EAAE,AAAI,AAAW,AAAW,AAAG,AAAK,AAAY,FAAK,AAAC,AAAC,EAAE,AAAI,AAAY,AAAY,AAAK,AAAa,FAAM,AAAE,EAAW,FAAM,AAAc;;;GAM9M,FAAY,AAAQ;GAEjB,FAAiB;GAER;GAAO,FAAQ,EAAM,AAAd,AAA0B;GAA1C,FAA6C;IAA7C;IACU;IAAK,HAAS,AAAG;IAA1B,HAAoC;KAApC;KAEC,HAAG,DAAS,AAAG,AAAG,GAAI,HACrB,AAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,AAAC,EAAE,AAAI,AAAW,AAAW,FAAE,AAAC,EAAE,AAAI,AAAY,AAAY,FAAE,AAAE,AAAY,AAAY,KAG5I,JAAG,DAAS,AAAG,AAAG,GAAI,HAC1B,AAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,AAAC,EAAE,AAAI,AAAW,AAAW,FAAE,AAAC,EAAE,AAAI,AAAY,AAAY,FAAE,AAAE,AAAY,AAAY,KAE5I,JAAG,DAAS,AAAG,AAAG,GAAI,HAC1B,AAAmB,AAAO,AAAQ,AAAa,AAAO,AAAE,AAAC,EAAE,AAAI,AAAW,AAAW,FAAE,AAAC,EAAE,AAAI,AAAY,AAAY,FAAE,AAAE,AAAY,AAAY;;;GAMxJ,FAAY,AAAQ;GAGjB,FAAiB;GACR;GACC;GACV,DAAI,CAAM,FAAE;IACF;IACA;IACO;IACA,DAAK;IACJ,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACzB,HAAmB,AAAO,AAAQ,AAAY,AAAO,AAAE,AAAC,EAAK,AAAW,AAAW,AAAG,AAAa,AAAY,FAAY,AAAC,EAAK,AAAY,AAAY,AAAG,AAAc,AAAa,FAAa,AAAE,EAAW,FAAc,EAAY,FAAc;;GAItP,DAAG,EAAgC,HAAK;IAC3C,HAAiB;IACd,HAAmB,AAAO,AAAQ,AAAgB,AAAO,AAAE,EAAG,FAAW,EAAY,FAAG,AAAE,AAAI;IAC9F,HAAmB,AAAO,AAAQ,AAAW,AAAO,AAAE,EAAY,FAAE,EAAa,FAAE,AAAE,AAAI;IACzF,HAAyB,AAAE,AAAE,AAAE;MAG7B,LAAyB,AAAE,AAAE,AAAE;;EAQrC,DAAqB,AAAS,AAAS;EACvC,DAAuB,AAAE,AAAE,AAAE;EAE7B,DAAuB,AAAM;EAC7B,DAAoB,AAAE,AAAE;EACxB,DAAgB;EAChB,DAAmB;EAEnB,DAAa;EAIb,DAAiB;EACjB;EACG,AAAG,CAAa,FACf;GAAS;GAAM;GAAf,FAA4B;IAA5B;IACC,HAAmB,AAAO,AAAQ,AAAc,AAAO,AAAE,EAAY,FAAC,EAAW,AAAW,FAAG,AAAY,AAAE,EAAW,FAAG,EAAY;;;EAIzI,DAAqB,AAAS,AAAS;EAC1C,DAAuB,AAAE,AAAE,AAAE;EAC7B,DAAyB,AAAE,AAAE,AAAE;EAC/B,DAAuB,AAAM;EAC7B,DAAoB,AAAE,AAAE;EACxB,DAAgB;EAChB,DAAmB;EAEnB,DAAa;EAEb;;aAGD,UAAkE;EACjE,AAAI,DAAC,AAAc,AAClB;EAEc,DAAO;EACtB;GAAe,FAAS;GAAxB,AAAe,FAAf;;GAEgC,FAAW;GACpC,DAAG,DAAW,GAA6B,HAAK;IAC/C;IACA,HAAiB;IACN,HAAW;IACN,DAAK;IACP,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACX,HAAC,EAAqB,AAAyB,AAAG,AAAa,AAAY;IAC1E,HAAC,EAAqB,AAA0B,AAAG,AAAc,AAAa;IACpF,HAAmB,AAAO,AAAQ,AAAc,AAAO,AAAE,AAAK,AAAK,AAAE,EAAW,FAAc,EAAY;IAC1G,FAAG,CAAa,FACf;KAAS;KAAM;KAAf,JAA4B;MAA5B;MACC,LAAmB,AAAO,AAAQ,AAAc,AAAO,AAAE,EAAY,FAAC,EAAW,AAAW,FAAG,AAAY,AAAE,EAAW,FAAG,EAAY;;;IAGzI;MAEI,JAAG,DAAW,GAAyB,HAAK;IAEzC,HAAW;IAEL;IAChB,FAAG,EAAc,HAAE;KAClB,FAAK;KACL,HAAG,CAAQ,FAAG,EAAK;MAEf,JAAG,EAAc,HACrB,EAAK;IAEU,DAAK;IACP,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACX,HAAC,EAAqB,AAAyB,AAAG,AAAa,AAAY;IAC1E,HAAC,EAAqB,AAA0B,AAAG,AAAc,AAAa;IACpF,HAAmB,AAAO,AAAQ,AAAK,AAAO,AAAE,AAAK,AAAK,AAAE,AAAc;MAEtE,JAAG,DAAW,GAA2B,HAAK;IACzC,HAAW;IACJ,DAAK;IACV,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACP,HAAC,EAAqB,AAAyB,AAAG,AAAa,AAAY;IAC9E,HAAC,EAAqB,AAA0B,AAAG,AAAc,AAAa;IACpF,HAAmB,AAAO,AAAQ,AAAY,AAAO,AAAE,AAAK,AAAK,AAAE,AAAc,AAAc;MAE3F,JAAG,DAAW,GAA2B,HAAK;IACzC,HAAW;IACJ,DAAK;IACV,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACP,HAAC,EAAsB,AAAW,AAAW,AAAG,AAAa,AAAY;IAC5E,HAAC,EAAqB,AAAY,AAAG,AAAc,AAAa;IACtE,HAAmB,AAAO,AAAQ,AAAU,AAAO,AAAE,AAAK,AAAK,AAAE,AAAc,AAAc;MAEzF,JAAG,DAAW,GAA6B,HAAK;IACzC,HAAW;IACN,DAAK;IACV,DAAE,AAAK;IACP,DAAM;IACL,DAAE,AAAE;IACN;IACb,FAAG,EAAc,HAChB,EAAK,GAED,JAAG,EAAc,HACrB,EAAK;IAEM,HAAC,EAAqB,AAAyB,AAAG,AAAa,AAAY;IAC9E,HAAC,EAAqB,AAA0B,AAAG,AAAc,AAAa;IACpF,HAAmB,AAAO,AAAQ,AAAK,AAAO,AAAE,AAAK,AAAK,AAAE,AAAc;;;;;;;;;;uBCrbxE,DACV;CAAO,AAAS,EAAE,FAAG,EAAG,FAAS,EAAE,FAAG,GAAI,HAAS,AAAE;;yBAG3C,XACV;CAAO,AAAU,EAAE,AAAE,AAAE;;uBAEb,PACV;CAAO,EAAM,AAAI;;2BAIG,LACjB;CAAO,AAAW,AAAI,EAAM,FAAW,AAAG;;uBAGzB,DAA8D;CACvE,EAAG;CACH,EAAG;CACJ,AAAU,EAAE,AAAI,AAAE;;;;;uBCfR,TACjB;CAAO,GAAI,AAAK;;wBAGC,ZACjB;CAAO,AAAU,EAAI,AAAM,AAAI;;qBAGd;;CACT,EAAE,FAAU,EAAK,AAAO,AAAK;CAC9B,GAAI,DAAK,CAAK,DAAK;;sBAGT,VACjB;CAAO,AAAW,AAAK;;6BAGN,bACjB;CAAO,AAAW,AAAM,EAAQ,FAAW,AAAM;;yBAGhC,TAAmD;CAC5D,EAAK;CACL,EAAK;CACN,AAAU,EAAE,AAAI,AAAE;;oBAGR,JACjB;CAAO,EAAK,AAAO,AAAK;;sBAGP,NACjB;CAAO,EAAK,AAAO,AAAK;;oBAGP,JACjB;CAAO,GAAI,DAAK,CAAQ,DAAK;;qBAIZ,HAAiD;CAC5C,GAAG,AAAI;CAC7B;GAAS,FACT;EADA,CAAS,FAAT;;EAEI,EAAY;EACZ,EAAY;;CAET;;oBAIU,JACjB;CAAO,GAAI,DAAK,CAAQ,DAAK;;oBAGZ,LACjB;CAAO,GAAI,DAAK,CAAK,DAAK;;oBAIT,LACjB;CAAO,GAAI,DAAK,CAAK,DAAK;;yBAIT,ZAEjB;CAAO,GAAI,HAAC,GAAQ,HAAC;;;iBC9B5B,MACA;CACC,CAAI,EAAgB,HAAM,EAAe;CACzC,EAAoB;CACpB,EAAa;CACb,EAAgB;;;;;KASV,cAEN;EAAO,DAAiB;;SAWlB,UAEN;EAAO,DAAiB,AAAU;;iBAa5B;;EAEC,DAAiB,AAAU,AAAO;;qBAWnC;;EAEC,DAAiB,AAAU,AAAM;;QASlC,WACP;EACY,DAAW;EACtB,AAAI,EAAQ,HAAa;EAEzB,CAAQ,FAAgB;EACjB;;WAMD,AAEN;GAAa;;kBAGd;;;EAEC,AAAI,DAAqB,AAAU,AACnC;GACe,FAAW,AAAU,AAAM;GAEzC,DAAI,DAAC,GAAiB,AAAY,HAAG,EAAgB;GACrD,DAAI,DAAC,GAAiB,AAAY,HAAG,EAAQ,FAAc,KACtD,HAAQ,FAAyB;GAE/B;;EAGD,DAAW;;sBAGnB,EACA;EACC,AAAI,DAAC,AAAuB;EAET,DAAW;EAC9B,AAAI,EAAgB,HAAa;EAEjC,AAAI,EAAqB,HAIxB,KAAM;EAGA;;YAIR;;;EAEQ;;kBAGR,PAEC;EAAO;;;;kBASD,PAEN;;;;;;;UAMM,CACP;EACsB;EAErB,GAAO,JACP;GACC;GACA,AAAiB;;;YAIV;;;EAED,gBAAU,jBAAM,AAAU,AAAM;;;;kBASjC,HAEN;CAAM,AAAC;;;;;;UAMD,MACP;EACsB;EAErB,GAAO,JACP;GACC,FAA4B;GAC5B,AAAiB;;;YAIV;;;EAED,gBAAkB,jBAAM,AAAU,AAAM;;;;kBASzC,IAEN;CAAM,AAAC,AAAO;;;;;;UAMR,cACP;EACsB;EAErB,GAAO,JACP;GACC,FAA4B,AAAQ;GACpC,AAAiB;;;YAIV;;;EAED,gBAA4B,jBAAM,AAAU,AAAM;;;;eC7L1D;;;CAEC,EAAc;CACd,AAAgB;CAChB,EAAY;CACZ,EAAgB;CAChB,EAAe;;;;;QAMT,GAEN;CAAc;;cAcf,EACA;EACC,AAAI,EAAS,HAAM,KAAM;EAClB,CAAW;;;;gBASZ;;;CAEN,AAAM,AAAQ,AAAU,AAAM;;;;;;SAMxB,EACP;EACC,AAAI,DAAC,AAAS;EACd,AAAI,DAAM;EACV;;;;gBAcM;;;CAEN,AAAM,AAAQ,AAAU,AAAM;;;;;;SAOxB,QACP;EACC,AAAI,DAAC,AAAS;EACd,AAAI,DAAM;EACV,AAAI,EAAS,HAAM,EAAS;EAC5B,DAAS;;;;gBAmBH;;;CAEN,AAAM,AAAQ,AAAU,AAAM;;;;;;SAQxB,eACP;EACC,AAAI,DAAC,AAAS;EACd,AAAI,DAAM;EAEV,AAAI,EAAU,HAAM,EAAS;EAC7B,AAAI,EAAU,HAAM,EAAS;EAE7B,DAAS,AAAQ;;;;mBC5IX,CACP;CACC,EAAW;CAEX,CAAI,EAAQ,AAAQ,AAAQ,HAC5B;EACC,AAAI,EAAO,HAEV,KAAM;EAIP,CAAW;MAEP,JAAI,EAAQ,HAEhB,KAAM,AAGP;EACC,CAAY;EACA,AAAC,EAAQ,HAArB,EAAiC,GAAjC,HAAuC;EACvC,CAAW;;;;;;YAQb,DACA;EACC,AAAI,DAAC,AAAiB;EACtB,AAAI,EAAQ,HAAY;EAMX;EACL;EAER,GAAO,JACP;GACC,DAAE;GACF,AAAI;;EAGE;;SAQD,MAEN;EAAO,mBAA+B,pBAAM;;QAWtC,OACP;EACC,AAAI,EAAQ,HAAa;EACzB,AAAI,DAAC,AAAiB,oBAA+B;EAGrD,AAAI,EAAQ,HAEJ,oBAA+B,pBAAc;EAKpC,mBAA+B;EACjC;EACD;EAEd,GAAO,JACP;GACC,AAAW,AAAgB,kBAA+B;GAC1D,AAAU;;EAIX,CAAgB,kBAA+B;EACxC;;oBASD,LACP;EACC,AAAI,DAAC,AAAiB,oBAA+B;EAElC;EAGnB,AAAI,EAAY,HAA2B,AAAQ;EAElC,mBAA+B;EACjC;EACD;EAGd,GAAO,JACP;GACC,DAAI,CAAW,FACf;IACC,DAAgB,FAAgB;IACzB;;GAGR,AAAW,AAAgB,kBAA+B;GAC1D,AAAU;;EAIX,CAAgB,kBAA+B;EACxC;;WAUD,QACP;EACC,AAAI,DAAC,GAAY,AAAY,HAAa;EAE1C,AAAI,DAAuB,AAAe,AAAkB;EAG3C,mBAA+B;EACjC;EACD;EAEd,GAAO,JACP;GACC,DAAI,DAAuB,AAAuB,AAClD;IAEC,DAAgB;IACT;;GAGR,AAAW,AAAgB,kBAA+B;GAC1D,AAAU;;EAIJ;;UAOD,SACP;EACC,AAAI,DAAC,AAAiB;EAEd;EACR,GAAO,JACP;GACC,DAAI,DAAuB,AAAiB,AAAkB;GAC9D,AAAI;;EAGE;;MAUD,aACP;EACC,AAAI,DAAC,AAAiB;EAEd;EACR,GAAO,JACP;GACC,DAAI,DAAuB,AAAiB,AAAkB;GAC9D,AAAI;;EAGE;;;;;;;;;gCCpPM,rBAAc;;CACjB,EAAO,cAAiB;CAC/B,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAK;CACT,AAAI,EAAM;CACV,AAAI,EAAM;CACV,AAAI,EAAM;CACV,AAAI,EAAM;CACV,AAAI,EAAM;CACV,AAAI,EAAM;CAjBc;;+BAqBd,TACb;CAAO,AAAK;;sCAIC,dAA8C;CACxD,AAAK,EAAU;CACR;;oCAUG,pBAAoD;CACxD,AAAE;CAAX,AAAI,EAAJ;;CACY,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACS,AAAE;CAAX,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACO;;qCAYE,fAAsF;CAChG;;;;;;;;;;;;CAIA,CAAI,EAAK,HAAK;EACA,DAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE;EAA7C,DAAI,EAAJ;;EACU,DAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE;EAA7C,DAAI,EAAJ;;EACU,DAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAM,AAAI,FAAE;EAA9C,DAAI,EAAJ;;EACU,DAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAM,AAAI,FAAE;EAA9C,DAAI,EAAJ;;MACG;EACH,CAAM,FAAE;EAAI,CAAM,FAAE;EAAI,CAAM,FAAE;EAAI,CAAM,FAAE;EAC5C,CAAM,FAAE;EAAI,CAAM,FAAE;EAAI,CAAM,FAAE;EAAI,CAAM,FAAE;EAC5C,CAAM,FAAE;EAAI,CAAM,FAAE;EAAI,CAAM,FAAE;EAAK,CAAM,FAAE;EAE7C,DAAI,EAAK;;EAAK,DAAI,EAAK;;EAAK,DAAI,EAAK;;EAAK,DAAI,EAAK;;EACnD,DAAI,EAAK;;EAAK,DAAI,EAAK;;EAAK,DAAI,EAAK;;EAAK,DAAI,EAAK;;EACnD,DAAI,EAAK;;EAAK,DAAI,EAAK;;EAAK,DAAI,EAAM;;EAAK,DAAI,EAAM;;EAE3C,CAAM,AAAI,AAAM,AAAI,AAAM,AAAI,FAAE;EAA1C,DAAI,EAAJ;;EACU,CAAM,AAAI,AAAM,AAAI,AAAM,AAAI,FAAE;EAA1C,DAAI,EAAJ;;EACU,CAAM,AAAI,AAAM,AAAI,AAAM,AAAI,FAAE;EAA1C,DAAI,EAAJ;;EACU,CAAM,AAAI,AAAM,AAAI,AAAM,AAAI,FAAE;EAA1C,DAAI,EAAJ;;;CAGG;;iCAWG,XAAkF;CACnF,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACS,AAAE,EAAK;CAAhB,AAAI,EAAJ;;CACU,AAAE,EAAM;CAAlB,AAAI,EAAJ;;CACU,AAAE,EAAM;CAAlB,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACU,AAAE;CAAZ,AAAI,EAAJ;;CACO;;iCAiBG,YAA0H;CAC3H,EAAI,FAAC,EAAO;CAChB,EAAI,FAAC,EAAS;CACd,EAAI,FAAC,EAAO;CACR,EAAK;CAAd,AAAI,EAAJ;;CACA,AAAI,EAAK;;CACT,AAAI,EAAK;;CACT,AAAI,EAAK;;CACT,AAAI,EAAK;;CACA,EAAK;CAAd,AAAI,EAAJ;;CACA,AAAI,EAAK;;CACT,AAAI,EAAK;;CACT,AAAI,EAAK;;CACT,AAAI,EAAK;;CACC,EAAI;CAAd,AAAI,EAAJ;;CACA,AAAI,EAAM;;CACA,AAAC,EAAO,AAAS;CAA3B,AAAI,EAAJ;;CACU,AAAC,EAAM,AAAU;CAA3B,AAAI,EAAJ;;CACU,AAAC,EAAM,AAAQ;CAAzB,AAAI,EAAJ;;CACA,AAAI,EAAM;;CACH;;;;;;gCCjKI;;;;CAA8C;CAC3D,EAAO,cAAiB;CACrB,AAAK,EAAK;CACV,AAAK,EAAK;CACV,AAAK,EAAK;CACV,AAAK,EAAK;CAL8C;;iCASrD,jBAAuB;CAAO,AAAK;;iCACnC,fACN;CAAO,AAAK,EAAK;;iCAGX,jBAAuB;CAAO,AAAK;;iCACnC,fACN;CAAO,AAAK,EAAK;;iCAGX,jBAAuB;CAAO,AAAK;;iCACnC,fACN;CAAO,AAAK,EAAK;;iCAGX,jBAAuB;CAAO,AAAK;;iCACnC,fACN;CAAO,AAAK,EAAK;;yCAWJ,nBAA8D;CAC3E,EAAQ,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAM;CACjD,EAAQ,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAM;CACjD,EAAQ,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAM,AAAI,FAAE,EAAM;CAClD,EAAQ,FAAE,EAAK,AAAI,FAAE,EAAK,AAAI,FAAE,EAAM,AAAI,FAAE,EAAM;CAC3C;;;;wBCPE,ZAA6B;CAC9B,EAAK,CAAS;CAChB,EAAc;CACd,EAAW;CACX,EAAc;CACd,EAAc;CACd,EAAc;CACd,EAAc;CAEd,CAAI,EAAK,HACL,AAAO;;;;6BA4JM,JAErB;CAII,AAAqB,OACT,AACA,IACJ;CAAmB,AAAE;;CAG7B,AAAoB,AAAS,AAAM;;4CAGhC,nBAEP;CAEI,CAAI,DAAqB,AAAiB;CAG1C,CAAI,EAAwB,HAAC,AAKzB,GAAI;CAAmB,AAAE;;EACP,DAAiB;;;gCAMtB,bAErB;CAKgB,uBAA2D;EACnE,AAAI,EAAc,AAAK,HAAuB,AAAK;GACpC;GAAgB;GAAf,QAAU;;;IAAK,AAAK,HAAU,AAAI;;GAAnC;GACX,FAAmB;;EAEhB;EAAP;;CAEJ,UAAU;;;EACN,DAAe,OACH,AACD;;;;;CAAW;;GAA8B;GAA7B,QAAW;;;IAAK,FAAI,EAAM,HAAG;;GAA9B;;CAAmC;;CAI7D,CAAI,DAAuB,AACvB,AAAmB;;EAAgB;EAAf,SAAU;;;GAAK;;EAAhB;;;;iCAQN,TAErB;CACiB;CACD,WACJ;EAAI,DAAC,AAAO;GACR,AAAS;GACM,FAAE;GACjB,FAAsB,OACV,AACA;GAEZ,FAAoB,AAAU,AAAK,YAAY;IAAO;;;;CAIlE,AAAqB,OACT,AACA;CAGZ,CAAI,EAAwB,HAAC,AAIzB,GAAI;CAAM;;EACQ,DAAgB;;;oCAQ5B,tBAEd;CACI,UAAU;;;EACN,AAAI,DAAC,AAAuB;;CAEzB;;qCAOJ,vBAEP;CACI,UAAU;;;EACN,AAAI,DAAC,AAAwB;;CAE1B;;;YAxQJ,AAAsD;EACzD,DAAY;EACL;;WAMJ,CAAqC;EACxC,CAAY;EACL;;YAMG,DACV;EAAO;;WAKG,AACV;EAAO;;aAMG,FACV;EAAO;;WAMG,AACV;EAAO;;eAGX,DACI;CAAS;;UAKb,IAAkC;EAAlC;EAII,AAAI,DACA,AAAkB;;;;CAAc,KAC7B;GAGH,AAAY;GAIZ,AAAW;GAGX,FAAkB,UAAU;IACxB,DAAO;IACP;IAAW;IAAX,DAAW,FAAQ;KAAnB,FAAW,FAAX;;KAII,DAAI;CAAS;;MACC,LAAqB;;;IAGvC,DAAa;IACb,DAAW;;GAXf;;;aAoBR,GACI;CAAa;;cAGjB,EAA8C;EAA9C;EACwB,UAChB;EAAI,CAAgB,FAAG;;IAAW;IAAX,DAAW,FAAX;GAAW,FAAX;;KAAmB,JAAG;;MACxC,JAAI,CAAiB,FAAG;;IAAW;IAAX,DAAW,FAAX;GAAW,FAAX;;KAAoB,JAAqB;;MAMlE,AAAM;;EAGd,DAAkB,UACd;EAAI,EAAa,HAKb,GAAI;CAAc,AAAU;;IACR,HAAc;MAGlC,LAAc;;EAVtB;;MAmBG,MAA0C;EACnC;EACV,DAAK,AAAM,AAAK;EACT;;QAOJ,KAA0C;EAA1C;EACH,DAAkB,UACd;GAAW,FAAe,WAAY;IAAO,AAAW;;;EAD5D;;UAQG,GAAmD;EACxC;EACd;EAAU;EAAV,CAAU,FAAV;GAAU,FAAV;;GAAmB,DAAI,EAAW,HAAW;;EACtC;;;;8BCjMJ,nBAAe;;;;;;;SAKf,KAAwB;CAAc;;YAE/B,AAA+B;CAAY;;SAKlD,EACH;EAAO,iBAAY;;QAMhB,GACH;EAAO,gBAAW;;cAMf,HACH;EAAO,sBAAiB;;;;6BCnBrB,jBAA4B;CAC/B,AAAM;CACN,EAAY;;;;yBA+DF,XAAoE;CAChD;CAC9B,AAAkB,AAAK;CAChB;;yBA8DG,VAA0C;CAC1C;CACV,AAAkB;CACX;;;;YApFG,DACV;EAAO;;QAMJ,IAAmC;EACtC,CAAY;EACZ,DAAY;;eAgBP,DAAsC;EAC3C,AAAI,DAAW;GACD;GACV,GAAK,AAAC,LAAgB;;EAE1B,DAAS;;MAMG,MAAuC;EACxC;EACX,DAAe,AAAM,AAAK;EACnB;;QAGK,KAA0C;EAA1C;EACZ,DAAkB,UACd;EAAI,DAAC,AAAe;IACN;IACV,HAAY,AAAwB;MAGpC,HAAW,FAAe,WAAY;IAAO,AAAW;;;EANhE;;aAWK,GAA6C;EACnD,CAAY;EACZ,DAAa;;MAGT,MAAiD;EAC1C;EACV,DAAmB,AAAM,AAAK;EACvB;;WAMJ,CAA4C;EACrC;EACV,DAAW,WAAW;GACN,FAAE;GACd,FAAW;;EAEf,DAAK;EACE;;;;4BCvHJ,hBAA8B;CACjC,AAAM;CACN,EAAgB;CAChB,EAAe;;;;wBAgDL,VAAmD;CACrD;CACR,UAAU;;;EAAK,DAAgB;;CAC/B;CACO;;4BA6BG,dAAsE;CACtE;CACV,AAAkB,AAAK;CAChB;;0BAOG,ZAA6D;CAC7D;CACV,UAAU;;;EAAK,DAAW;;CACnB;;yBAOG,XAA4D;CAC5D;CACV,UAAU;;;EAAK,DAAU;;CAClB;;uBAmIG,RAAwC;CACxC;CACV,AAAkB;CACX;;;;MAnLK,MAAuC;EACxC;EACX,DAAe,AAAM,AAAK;EAC1B,DAAkB,WAAY;;;EACvB;;cAGJ,AAAoD;EACxC;EACD;EACd;EAAU;EAAV,CAAU,FAAQ;GAAlB,AAAU,FAAV;;GACI,DAAI,EAAW,HAAM,EAAU,GAC1B,LAAc;;EAEvB,CAAU;EACH;;OAoCG,IAA8B;EAChC;EACR,DAAK,WAAY;EAAI,DAAC,AAAgB,AAAgB;;EAC/C;;eAGF,DACL;EAAI,DAAC,GAAQ,HAAC,AAAQ,AAAS;;OAO5B,OAA2B;EAC9B,AAAI,EAAO,HAAM,EAAM,FAAC;EACxB,CAAS;;MAGN,MAA+C;EACxC;EACV,DAAmB,AAAM,AAAK;EAC9B,DAAkB,WAAY;;;EACvB;;WAMJ,CAAuD;EAChD;EACV,DAAW,WAAW;GACN,FAAE;GACd,FAAW;GACX,FAAwB;;EAE5B,DAAK;EACL,DAAkB,WAAY;;;EACvB;;WAMX,AAEI;EAAI,DAAa;CAAkB;GAAlB;MACZ,JAAI,DAA2B,KAC/B;GACD,AAAO;GACC;CAAe,AAAK,KAAQ;GACpC,FAA2B;GAC3B,AAAU;GACV,AAAS;;;KAIV,MAAc;EACjB,DAAkB;EAAlB;EACO;;SAGG,GACX;EAAO,DAAkB;;QAOrB,IAAwC;EACjC;EACV,DAAa,OACD,AACA,IAAY;EAAI,DAAE,AAAI,AAAkB;;EAEpD,DAA8B,AAAM,AAAK,YAAY;GAAO;;EACrD;;QAQJ,IAA2C;EACpC;EACV,DAAa,OACD,AACA;EAEZ,DAA8B,AAAM,AAAK,WAAY;GAAO;;EAC5D,DAAQ,WAAW;GACf,FAAO,YAAW;IACd,HAAkB;IACX;;GAEX,FAAU,YACN;;;;EAGD;;OAMJ,KAA0C;EACnC;EACV,DAAa,OACD,AACA;EAEZ,DAAe,OACH,AACA;EAEZ,DAA8B,AAAM,AAAK,WAAY;GAAO;;EAC5D,DAA8B,AAAG,AAAK,YAAY;GAAO;;EAClD;;;;kCCtPJ,pBACH;CAAM;;;;mCAKW,rBAA+B;CACvC;CACT,AAAW;CACJ;;;;SANG,KAAwB;CAAmB;;YAC3C,AAA+B;CAAY;;QAC3C,MAAuB;CAAmB;;;;;;;gCCUnC,lBAAkC;CACnD,AAAU;CACV;;qCAEG,zBAAkE;CACrE,CAAI,EAAY,HAAM,KAAM,AACvB,HAAW;CACT;;mCAMU,xBACjB;CAA+C;;+BAQrC;;CACD;CACT,IAAO,FAAmB,CAAK,HAAC,EAAK,CAAgB,HACjD;CAEG;;8BAMG,nBACV;GAAQ;;0BAGL,fAAY;CACN;CACT,CAAI,EAAM,HAAM;CAChB,CAAI,DAAC,AAAc;;2CAGhB,hCACH;EAAI,EAAY,HAAM,AAAS,KAUnB,LAAuB;;;;;;;;;;;;;aChEnC,MACN;GAAgB;;;;;OAGV;;EACN,CAAU;EACV,DAAoB;EACpB,CAAQ,YAAU,AAAQ,ZAAO,AAAf;EAClB,CAAY;;QAGN,GAAsB;EAClB;EACE,CAAM;EAClB,CAAU;EACV,DAAgB,AAAI;;;;cCbd,SARR;CAK0B,AAL1B,EAK0B;CAIxB,EAAY;CACZ,EAAe;;;;;;OAGT,OAAgC;EACtC,CAAe;EACT,DAAY;;aAGnB,CAAiC;EAC1B,CAAgB,FAAQ;EACxB,DAAoB,AAAM;;QAG1B,SAA6C;EAElC,DAAqB,AAAK;EACrC,AAAI,DAAM;GACN,FAAmB;GACnB;GACA,DAAI,EAAgB,HAChB,EAAe;GAGnB,FAAY;;;;;;;;;;;0CC/BhB,9BACC;;;4CAEM,vBACb;CAAO;;iDAEa,rCACpB;CAAoB,WAAa;;;;8CAEpB,1BACb;CACC,WACC;;GAAiB,FAAjB;GAAiB,FAAjB;;GACC,FAAgB;;;;;;;8CAKb,/BACC;;;kDAEM,lCACb;EAAI,EAAQ,HAAM;;oDAEd,pCACJ;CAAO;CAAP;;;;sDAEoB,1CACpB;CAAwB;;kDAEX,9BACb;CAAoB,UAAY;;GAAW,FAAX;GAAW,FAAX;;GAAsB;;;;2BAOvD,hBAAe;;;;+BASM,pBACpB;CACC,CAAI,CAAc,FAAQ,KACrB;;;MAVO,KAAqB;EAClC,CAAU;EACV,DAAU;;;;;;;8CAeG,nCACN;;;oDAED,pCACN;CAAO;;6CAED,1BAA0C;CACrC;;CACX,EAAU;CACV,AAAU;CACH,UAAY;EAClB,AAAI,DAAY,AACf;;;;EACD,CAAO;;;gDAIF,3BACN;;CAAa;CAAb,EAAa,FAAb;GAAa,FAAb;;EACC,AAAI,EAAW,HACd,AAAe;;;+CAEX,/BACN;;CAAa,AAAY,AAAG;CAA5B,EAAa,FACZ;EADD,CAAa,FAAb;;EACC;;;;;;;uBC5CK;;CACN,EAAY;CACZ,EAAe;CACf,EAAW;;;;gCA6BE;;CACH,wBAAU,xBAAM,AAAS;CACnC,EAAW;CACJ;;;UA9BR,CACC;EAIE,CAAe,AAAG,AAAgB,AAAG;;UAG1B,CAAoB;EACtB,CAAQ;EACnB,AAAI,EAAO,HACV,GAAO,DAAI;EACL;;WAGM,AACb;EAQE,IAAM;;;;;;;;sCC/DF,1BAAiD;;;wCAE1C,fACb;CAAO,AAAO;;wCAER,xBAA4B;CACzB;CACD;CACD,AAAW,YAA0B;EAC3C,AAAI,EAAQ,HAAM;GACjB,FAAO;GACP,AAAO;;EAED,DAAqB;;;uCAIvB,jBACN;CAAO,AAAa,YAAsB;EACzC,DAAO;EACP,DAAa;;;qCAGR;;CACI,AAAW,kBAAoB;EAAO,DAAO,gBAAkB;GAAgB,FAAE;GAAlB;;;CAExE,CAAI,DAAQ,KACP;;yCAGA;;CACI,AAAQ,AAAI,AAAM;CAE3B,CAAI,DAAQ,KACP;;uCAGA;;CACC,AAAQ,WACd;EAAO,DAAU,WAAe;GAAO,FAAO,AAAG;CAAI;CACnD;;yCAEU,7BACb;CAAO,AAAW,kBAAoB;EAC3B;EACV,CAAM,FAAS,cACd;GAAM,FAAY,gBAAkB;CAAgB;;;EAE9C;;;6CAGY,3BACpB;CAAO;;wCAEM;;CACH,AAAK;CACf;GAAU,FAAV;CAAU,AAAV;;EACC,CAAM,FACL;kBACC;IAAO,HACN;iBACC;MAAO,LAAe,AAAC;;CACxB;;CAJF,AAMA;;CAGD,CAAI,DAAQ,KACP;;0CAGO,xBACb;CAAO,AAAO;;sCAGS,1BACvB;CAAO,AAAW,YAA0B;EAAE;;EAAqB;;;sCAE5C,1BACvB;CAAO,AAAW,kBAAoB;EAAE,DAAgB;EAAW;;;uCAE5C;;CACvB,CAAI,DACI,AAAQ,AAAY;;;;CAAW,AAAG,KACrC;EACK;EACT,DAAE;EACF,KAAO;;;oCAGiC,tBACzC;CAAO,AAAQ;;wCAE0B,1BACzC;CAAO,AAAM,AAAa,AAAa,AAAM,AAAc;;qCAElB,vBACzC;CAAO,AAAQ,AAAG,eAAgB;EAAO,EAAS,AAAG;;;oDAEZ,pCACzC;CAAO,AAAU,WAAa;EAAO,IAAO;KACtC;GADsC;GAC1B,FAAI;KAChB;GAFsC;GAE1B,FAAY,AAAQ;;;;6CAGG,7BACzC;CAAO,AAAU,WAAa;EAAO,IAAO;KACtC;GADsC;GAC1B,FAAI,AAAO;KACvB;GAFsC;GAE1B,FAAY,AAAQ;;;;gDAGG,hCACzC;CAAO,AAAM,WAAa;EAAO,DAAU;;;yCAEF,zBACzC;CAAO,AAAM,WAAa;EAAO,DAAM;;;0CAEE,1BACzC;CAAO,AAAU;;sCAEwB,tBACzC;CAAO,AAAM;;yCAEiB,9BAC9B;CAAO;;0BASD,fAAe;CAAf;CACN,EAAY;CACZ,EAAS,FACR,kBACC;EACC,AAAI,EAAQ,HAAM;GACjB,FAAgB;GAChB;MAEI,LAAS;;;;;;UAGJ,CAAoB;EAAO;;SAE3B,QACb;EACC,AAAI,EAAQ,HAAM,KACb;GACO;GACX,AAAY;GACZ,AAAc;GACd,FAAY;GACZ;GACA;;;;;;;;;kCCjKI,tBAAuB;;;iCAEX,jBAClB;CAAO;;oCAEa,xBAA8B;CACrC;CACQ;CACL,UAAY;EACjB,AAAI,DAAM,KAAM,LAAW,AAAX;EAC1B,AAAI,EAAK,HAAM;GACJ,AAAO;GACjB,AAAS;GACT,AAAI;GACM,AAAO;;EAEX;;;iCAIK,fACb;CAAO,AAAY,UAAY;EAAO,DAAE;;;qCAE3B,nBACb;CAAO,AAAY,UAAY;EAAO,DAAE;EAAF;;;qCAElB,zBACpB;CAAgB,UAAY;EAAO;;;;;;;;;;;;;8BCpBtB,ZACb;CACC,KAAQ;KACF;EADE;EAEN;KACI;EAHE;EAIN,AAAI,DAAO,AAAS,AACX,KAER,AAAM;;;;kCAGG,hBACb;CACC,KAAQ;KACF;EADE;EACa,DAAY;KAC3B;EAAY;;;mCAGN,dACb;CACC,KAAQ;KACF;EADE;EAEN,DAAQ;KACJ;EACJ,DAAQ,wBAAU,xBAAU,AAAC,EAA0C,AAAgB,AAAU,FAAzF;;;+BAGS,JACpB;CACC,KAAQ;KACF;EADE;EACa;KACf;EAAL;;;+BAGkB,JACpB;CACC,KAAQ;KACF;EAAY;KACZ;EAAL;;;gCAGkB,XACpB;CACC,KAAQ;KACF;EADE;EACa,EAAQ;KACvB;EAAY;;;6BAGC,DACpB;CACC,KAAQ;KACF;EADE;EAEN,DAAQ,AAAU;KACd;EAHE;EAIN,DAAQ;;;mCAGS,jBACpB;CACC,KAAO;KACD;EAAY;;EACR;;;iCAGE,dACb;CAAO,AAAa;;;;;;8CAKrB,lCAAuB;IAAK;;+CACrB,7BACN;CAAO,AAAO;;uDAED,3CACb;CAAO,AAAkB,WACxB;EAAO,IAAO;KACR;GADQ;GACI,FAAE;KACd;GAFQ;GAEI,FAAQ;;;;yDAKd,7CACb;CAAO,AAAkB,WACxB;EAAO,IAAO;KACR;GADQ;GAEZ;IAAO,HAAE;IAAT,EAAO;KACD;KADC;KACW,JAAQ;KACpB;KAFC;KAEW,JAAQ,AAAM;;;;KAE5B;GANQ;GAMI,FAAQ,AAAK;;;;;;;;kCChGnB,pBAA8B;IAAU,AAAG;;mCAElD,nBAAmB;CAAO;;mCAC1B,nBAAmB;CAAO;;oCAErB,pBACX;CAAO,GAAQ;;mCAEA,nBACf;CAAO,GAAQ;;iCAEF,tBACb;CAAO;;;;;mCAwBM,rBAIZ;IAAK,AAAM;;oCAKN,pBACN;CAA8B;;oCAExB,pBACN;CAA8B;;oCAExB,lBACN;CAA8B,EAAc;;oCAEtC,lBACN;CAA8B,EAAc;;;;;;sCCvD/B,1BAAiD;;;wCAEjD,hBACb;CAAO,AAAO;;qCAER;;CACe,YAAc;EAAO,DAAO,gBAAkB;GAAU,FAAE;GAAZ;;;CAElE,CAAI,DAAQ,KACP;;yCAGA;;CACe,YAAc;EAAO,DAAO,gBAAkB;CAAE;GAAF,FAAiB;;;CAEnF,CAAI,DAAQ,KACP;;wCAGA;;CACe,YAAc;EAAO,DAAO,gBAAkB;EAAI,DAAE,AAAS,AAAU;;;CAE3F,CAAI,DAAQ,KACP;;sCAGA;;CAEL,YACC;CAAO,AACN,AAAO,AACP,AAAa;;CAIf,CAAI,DAAQ,KACP;;sCAGA,tBAA0B;CACtB;CACV,AAAO,AAAO;CAAd;CACO;;uCAGD,vBACN;CAAO,AAAI,WAAa;EAAO;;;wCAEzB,xBAA4B;CACxB;CACV,AAAO,WAAa;CAAY;;CACzB;;yCAGM,9BACb;CAAO;;6CAEM;;CACQ,YAA0B;EACtC,UAAa;CAAU;;EAC/B,DAAI;EACG;;;;CAAY;EAAnB;;CAIA,CAAI,DAAQ,KACP;;;;;6CAKO,lCAAsB;;;gDACtB,1BACb;CAAY;;kDACC,lCACb;CAAO;;iDACI,jCACX;CAAkB;;;;;CAAX;;;;;;;;;;kBCjED,GAdR;CAW8C,AAX9C,EAW8C;CADb,AAVjC,EAUiC;CAK/B,EAAU;CACV,EAAc;;;;;;SAGR,EAA8B;EACpC,AAAG,EAAS,HAAK;GACN;GAAV,AAAU;GACV,AAAiB;GACjB,AAAiB;GACjB,AAAa;GAEb,FAAqB,AAAQ,AAAG,AAAE,AAAa;GAEzB,FAAwB,AAAG,AAAG,AAAc;GAClE,AAAQ,qBAAc;;EAEhB;;WAGD,GACN;EAAO,KAAC,AAAC,JAAE,FAAC,EAAa,AAAM,AAAC,AAAE;;UAGzB,IACH;EAAO,DAAsB,AAAU,AAAE;;YAGtC,EACH;EAAO,DAAsB,AAAU,AAAE,EAAG;;WAGzC,GACH;EAAO,DAAsB,AAAU,AAAE,EAAG;;YAGzC,EACH;EAAO,DAAsB,AAAU,AAAE,EAAG;;UAGzC,IAA2C;EAEhC;EACL;EACE,DAAU,AAAE;EACvB,DAAU,EAAG,FAAK;EAClB,DAAU,EAAG,FAAK,EAAO;EACzB,DAAU,EAAG,FAAK,EAAO;EACzB,DAAU,EAAG,FAAK,EAAO;EAElB;;;;sBC/DP,JACN;GAAc;;;;;;;;;;;;;;;;;;;;4BCUL,jBACH;GAAc;;;;;KAGX,oBACH;EAAO,DAAgB;;KAGpB,sBAA8D;EACjE;GAAuB,FAAiB;GAAxC,AAAuB,FAAvB;;GACI,DAAI,DAAI,GAAmB,HAChB;;EAGR;;YAGH,SAAqE;EACzE,CAAa;EAEsC;EAC3B;EAGF;EACtB,SAAuB;;;GACnB,FAAoB,AAAgB;;EAExC,GAAO,FAAmB,FAAE;GACR;GACQ;GACxB,DAAI,EAAgC,HAChC;;IAA0B;IAA1B,DAA0B,FAA6B;KAAvD,FAA0B,FAA1B;;KACI,HAAI,DAAC,AAAuB,AAAmB;MAC3C,HAAoB;MACpB,LAAgB;MAChB,JAAI,EAAoC,AAAa,AAAqB,HAAkB;OACxF,NAAgB,AAAiB,AAAwC,AAAC,AAA1E;OACO;;MAEX,JAAI,EAAoC,HAAK;OACzC,JAAmC;OACnC,JAAoB;;MAExB;;;;GAKZ,DAAI,DAAkB;IAClB,DAAmC;IACjB,HAAI;IACtB;IACA,HAAoB,AAAa;;;EAIlC;;KAIH,eAA2D;EACpC,DAAiB;EAC5C,AAAI,EAAwB,HACxB,AAAgB,AAAsB;EAEnC;;;;oBCrEJ,TACH;;;;;;;OAGG,yBAAoF;EACvF,AAAI,EAAQ,HACR,EAAO;EAEX,CAAY;EACK;EACjB;GAAkB,FAAiB;GAAnC,AAAkB,FAAlB;;GACkB,FAAuB;GACrC,DAAI,DACA,AAAgB,KAGhB;;EAIR,DAAW;;;;wBCpBR;;CACH;CACA,EAAU;;;;;;OAGP,kBAAkE;EACpD;EACjB;GAAkB,FAAe;GAAjC,AAAkB,FAAlB;;GACI,FAAgB;;EAEpB,DAAW;;cAGR,aAAyE;EAE5E,CAAmB;EACnB,SAAqB;;;GACD,FAAgB;GAChC,FAAyB;;EAEhB;EACb,DAAa,AAAkB;EACxB;;;;;;;;;;mBCZJ,RAAc;CACjB;CACA,EAAW;CACX,EAAc;CACd,EAAgB;CAChB,EAAkB;CAElB,EAAuB;CACvB,EAAoB;CACpB,EAAqB;;;;;;OAIlB,mBAA8D;EAChD;EACjB;GAAuB,FAAgB;GAAvC,AAAuB,FAAvB;;GACI,DAAI,DAAO,AAAgB,AACvB,AAA0B,AAAK;GAEnC,DAAI,DAAO,AAAgB,AACvB,AAAuB,AAAK;GAEhC,DAAI,DAAO,AAAgB,AACvB,AAAwB,AAAK;GAEjC,FAAgB;GAChB,FAAuB;;EAGJ,DAAW;EAElC;GAAwB,FAAiB;GAAzC,AAAwB,FAAxB;;GACI,FAAgB,AAAiB,AAAoE,AAArG;GACA,DAAI,DAAO,AAAiB,AACxB,AAA4B,AAAK;GAErC,DAAI,DAAO,AAAiB,AACxB,AAAyB,AAAK;GAElC,DAAI,DAAO,AAAiB,AACxB,AAA0B,AAAK;GAEnC,YAAK,dAAwC;;;QAI9C,SACH;;EAAkB;EAAlB,CAAkB,FAAqB;GAAvC,AAAkB,FAAlB;;GACI,FAAiB,AAAI;;;QAItB,SAAuC;EAC1C;EAAa;EAAb,CAAa,FAAkB;GAA/B,AAAa,FAAb;;GACI,DAAI,DAAC,AAAY,AACN;;EAGR;;WAGJ,MAA0C;EAC7C;EAAa;EAAb,CAAa,FAAmB;GAAhC,AAAa,FAAb;;GACI,DAAI,DAAC,AAAe,AACT;;EAGR;;WAGJ;;EAEH,AAAI,DAAC,GAAa,HAAO,AAAQ;GAC7B,DAAI,DAAmB,GAAnB,HACO;GAEX,FAAc;GACd,FAAgB,AAAQ;GACxB,FAAuB;GAChB;;EAEJ;;cAGJ;;EAEH,AAAI,DAAC,GAAa,HAAU,AAAQ;GACX,FAAgB;GACrC,DAAI,DAAQ;IACR,HAAmB;IACnB,HAAyB;IAClB;;;EAGR;;;;;;;;;;;;;AhGmBsB,EAAI,DAA0B,EAAgC,aAAgB;CAAO,AAA6B,AAAG,AAAG;;AiGpDlH,GAAqB;A7FxB/B,GAA6B,AAAgC,AAAuB;AACrF,GAAkB,AAAgC,FAAC;AACjD,GAAsB;AACxB,GAAiB,AAAgC,FAAC;AAEhD,GAAqC,AAAgC,AAAqB;AAC3F,GAA0B,FAAC;AAG/C,GAAiC,AAAoB,QAAa,VAAC;AAG/D,GAAiC,AAAwB,QAAa,VAAC;AAGzE,GAAiC,AAAsB;AACnE,GAAiB,FAAC;AAGP,GAA+B,AAAqB;AAC/D,GAAiB,FAAC;AAGN,GAAiC,AAAsB,QAAa,VAAC;AAGtE;AAiBX,EAAI,EAA0B,HAC7B,EAAyB,UAAY;CAC5B;CACE;CAAI;CAAd,AAAgC;EAAhC;EACS,DAAS;EACjB,AAAI,DAAE,AAAK,AAAO;;CAEZ;;A4B7DQ,IAAiE;AACnF,EAAI,EAA+B,HAAO,EAA8B;AC2CvD,IAAgE;AwCnErD,GAAM,kBAA+B,pBAAM;AQbpD;AAEb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2CzEO2D;wCAChC;wBGVF;yBACC;yBUqDb;2BEPA;0BElCD;kBI4LU;8CI7LE;yCGK8B;2CACA;yCACA;+BAGA;8BACA;kCACA;mCACA;kCACA;uCACA;qCACA;6BAaA;4BACA;kCACA;4CACA;kCACA;4CACA;kCACA;4CACA;kCAKA;4CACA;2CACA;iCAOA;uCACA;2CACA;6CACA;sCAGA;8CACA;sCAGA;sCACA;wCACA;wCACA;uCACA;iDACA;uCACA;iDACA;oCACA;qCAGA;6CACA;6CACA;qDACA;oCAEA;oCACA;qCACA;oCAEA;qCACA;8CAEA;8BAGA;6BACA;uCACA;kCAcA;8BACA;+BACA;qCACA;mCACA;qCACA;4CACA;iDACA;wCACA;iCAGA;qCACA;sCACA;0CACA;sCACA;2BAGA;4BACA;mCAGA;iDACA;iDACA;uCACA;mCACA;oCACA;wCACA;0CACA;mCACA;4CACA;qCACA;qCACA;gDACA;gDACA;oCACA;2CACA;0CACA;0CACA;0CACA;qDACA;qDACA;yCACA;gDACA;+CACA;iCACA;oCACA;0CAEA;wCACA;yCACA;uCACA;yCACA;0CACA;sCACA;iCACA;mCACA;kCACA;mCACA;mCACA;qCACA;6CACA;8CAEA;2CACA;uCACA;gCACA;8CACA;+CACA;mDAQA;kCAGA;gCACA;+BACA;6CAGC;6BAGD;sCACA;8BACA;uCACA;4BACA;qCACA;8BACA;wCAGA;8BACA;4BACA;6BACA;kCACA;wCACA;+CAIA;+CACA;6CACA;wCAGE;sCACA;2CACA;mDACA;4CACA;yDACA;uDACA;gDACA;qDACA;oCACA;sCACA;oCACA;wCACA;yCACA;wCACA;0CACA;iDACA;wCACA;8BAGF;6BACA;8BACA;+BACA;gCACA;iCACA;+BACA;+BACA;6BAIA;gCACA;6BACA;6BACA;+BACA;kCACA;kCACA;+BAGA;iCACA;gCACA;gCAGA;+BACA;+CAKA;8CACA;8CACA;6CACA;2CAGA;2CACA;uCACA;uCACA;mCAGA;gCACA;yCAEA;iDACA;oDACA;oDACA;oDACA;oDACA;oDACA;oDACA;kDACA;iCAGA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;iCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;uCACA;+BAGA;sCACA;wCACA;mCAGA;mCACA;mCACA;iCACA;iCACA;iCACA;6BACA;kCACA;kCACA;kCACA;mCACA;mCACA;mCACA;mCACA;qCACA;oDAGI;iDACA;mDACA;iDACA;uDACA;oDACA;2DACA;kDAGH;qCACA;uCAGD;kCAGA;qCACA;mCACA;gCACA;mCACA;iCACA;oCAGA;qCACA;8BAEA;gCACA;+BACA;0CACA;sCACA;uCACA;sCACA;2CAEA;4CACA;qDACA;8CACA;gDACA;+CACA;gDACA;gDACA;kDACA;2DAEc;2DACA;6DACA;qEACA;0CAEd;yCACA;2CACA;iDACA;6BAEA;6CAEW;0DACA;kEACA;0DACA;gDACA;4CAEX;6CACA;8CACA;sDAEA;4CAGA;uDACA;2CACA;2DACI;8CACJ;0CC5b9D,hCADC,TAAQ,QAAQ,EAA0C;0CEC3D,hCADC,TAAQ,QAAQ,EAA0C;kDEIpB;;;;;;;;;;;;;;;;;;;;;;;iCE4BS;qBACZ;yCEtBpC,9BADC,VAAS,AAAC;+BKAX,pBADC,VAAS,AAAC;mCGEX,xBADC,VAAS,AAAC,AAAkB;kCAIK;kCACA;iCENlC,tBADC,VAAS,AAAC;gCAMoC;kCACE;2CGLjD,hCADC,VAAS,AAAC,AAAoB;yCCM/B,9BADC,VAAS,AAAC;yCCCX,9BADC,VAAS,AAAC;mDAKmC;oDACA;oDACA;uDACG;2CACZ;qCAEN;qCACA;qCACA;iCCX/B,tBADC,VAAS,AAAC;mCENX,xBADC,VAAS,AAAC;oCKkBsC;qCACC;qCACA;qCACA;sCACA;kCACH;kCACA;wCACM;kCACN;kCACA;sCACI;sCACA;iCACL;iCAEA;iCACA;mCACE;kCACD;qCAEG;qCACA;uCACE;kCAYb;mCACC;+BACD;gCACC;+BQvCf;8BKpBM;gCG8CS;0BclCb;0BACA;4BACE;yBACH;wBACD;6BCXe;;;;"
}